openapi: 3.0.0
info:
  version: 1.0.0
  title: Qovery API
  description: Qovery is the fastest way to deploy your full-stack apps on any Cloud provider
  contact:
    name: Qovery Support Team
    url: 'https://discord.qovery.com'
    email: support+api+documentation@qovery.com
  x-logo:
    url: 'https://uploads-ssl.webflow.com/5de176c0d41c9b4a1dbbb0aa/5f9b214e6d66a454556d8b5b_qovery_logo_with_name_dark_2048.png'
    altText: Qovery
servers:
  - url: 'https://api.qovery.com'
paths:
  /organization:
    get:
      summary: List user organizations
      operationId: listOrganization
      tags:
        - organization
      responses:
        '200':
          description: List organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create an organization
      operationId: createOrganization
      tags:
        - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '201':
          description: Create organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Organization name is already taken
  '/organization/{organizationId}':
    get:
      summary: Get organization by ID
      operationId: getOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - organization
      responses:
        '200':
          description: Get organization by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization
      description: To edit an organization you must have the admin permission
      operationId: editOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '200':
          description: Edit an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization name is already taken
    delete:
      summary: Delete an organization
      description: To delete an organization you must have the admin permission
      operationId: deleteOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - organization
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/project':
    get:
      summary: List projects
      operationId: listProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - project
      responses:
        '200':
          description: List projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create a project
      operationId: createProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Create project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Project name within the organization is already taken
  '/project/{projectId}':
    get:
      summary: Get project by ID
      operationId: getProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - project
      responses:
        '200':
          description: Get project by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a project
      description: To edit a project you must have the admin permission
      operationId: editProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Edit a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Project name within the organization is already taken
    delete:
      summary: Delete a project
      description: To delete a project you must have the admin permission
      operationId: deleteProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - project
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment':
    get:
      summary: List environments
      operationId: listEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - environment
      responses:
        '200':
          description: List environments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create an environment
      operationId: createEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '201':
          description: Create environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Environment name within the project is already taken
  '/project/{projectId}/environmentVariable':
    post:
      summary: Add an environment variable to the project
      description: |
        - Add an environment variable to the project.
          - If the environment variable key already exists, then it will be replaced by the new one.
          - If the environment variable value points toward an existing environment variable key, it will be considered as an alias.
      operationId: createProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
  '/project/{projectId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from a project
      description: To delete an environment variable from a project you must have the project user permission
      operationId: deleteProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - project
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Change value of an environment variable belonging to the project
      operationId: editProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret':
    post:
      summary: Add a secret to the project
      description: |
        - Add a secret to the project.
          - If the secret key already exists, then it will be replaced by the new one.
          - If the secret value points toward an existing secret key, it will be considered as an alias.
      operationId: createProjectSecret
      parameters:
        - $ref: '#/components/parameters/secretId'
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Added a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
  '/project/{projectId}/secret/{secretId}':
    delete:
      summary: Delete a secret from a project
      description: To delete a secret from a project you must have the project user permission
      operationId: deleteProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - project
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Change value of a secret belonging to the project
      operationId: editProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}':
    get:
      summary: Get environment by ID
      operationId: getEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: Get environment by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment
      description: To edit an environment you must have the admin permission
      operationId: editEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                reference_branch:
                  type: string
      responses:
        '200':
          description: Edit an environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment name within the project is already taken
    delete:
      summary: Delete an environment
      description: To delete an environment you must have the admin permission
      operationId: deleteEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/service':
    get:
      summary: List environment services
      description: 'List all services within the environment (applications, databases, jobs, gateways...)'
      operationId: listEnvironmentService
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: List environment services
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/BaseResponse'
                        - type: object
                          properties:
                            type:
                              type: string
                              description: 'type of the service (application, database, job, gateway...)'
                              enum:
                                - APPLICATION
                                - DATABASE
                            name:
                              type: string
                              description: name of the service
                            id:
                              type: string
                              description: 'uuid of the associated service (application, database, job, gateway...)'
                              format: uuid
                            status:
                              $ref: '#/components/schemas/Status'
                            last_updated_by:
                              type: string
                              format: uuid
                              description: uuid of the user that made the last update
                            consumed_resources_in_percent:
                              type: number
                              description: global overview of resources consumption of the service
                            service_typology:
                              type: string
                              example: container
                              description: 'describes the typology of service (container, postgresl, redis...)'
                            service_version:
                              type: string
                              description: for databases this field exposes the database version
                              example: v12
        '401':
          $ref: '#/components/responses/401'
  '/environment/{environment}/deploy':
    post:
      summary: Deploy environment
      description: This will deploy all the services of this environment to their latest version.
      operationId: deployEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
      responses:
        '200':
          description: Deploy environment
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environment}/stop':
    post:
      summary: Stop environment
      operationId: stopEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: Environment stop has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Environment is already stopped or an operation is in progress
  '/environment/{environment}/restart':
    post:
      summary: Restart environment
      operationId: restartEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: Environment restart has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: An operation is in progress
  '/environment/{environment}/abort':
    post:
      summary: Abort environment
      operationId: cloneEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: Environment abort has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Operation is in progress
  '/environment/{environment}/clone':
    post:
      summary: Clone environment
      operationId: cloneEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: Environment clone has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/application':
    get:
      summary: List applications
      operationId: listApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - application
      responses:
        '200':
          description: List applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create an application
      operationId: createApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '201':
          description: Create application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Application name within the environment is already taken
  '/environment/{environmentId}/deploymentHistory':
    get:
      summary: List environment deploys
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listEnvironmentDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log/get/parameters/1'
      tags:
        - environment
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log/get/responses/200/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/paths/~1environment~1%7Benvironment%7D~1deploymentHistory%3Ftail%3D/get/responses/200/content/application~1json/schema/properties/results/items'
        '401':
          $ref: '#/components/responses/401'
  '/environment/{environment}/deploymentHistory?tail=':
    get:
      summary: List XX last environment deploys
      description: Returns all last XX deploys. Response is not paginated
      operationId: listEnvironmentDeploymentHistoryTail
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log%3Ftail%3D/get/parameters/1'
      tags:
        - environment
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/BaseResponse'
                        - type: object
                          properties:
                            service:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - APPLICATION
                                    - DATABASE
                                name:
                                  type: string
                                id:
                                  type: string
                                  format: uuid
                            commit:
                              $ref: '#/components/schemas/CommitResponse'
                            status:
                              $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
  '/environment/{environment}/deploymentHistory?lastId=':
    get:
      summary: List all the last environment deploys after a certain event Id
      description: 'Returns all last deploys that happened on the environment, after the event ID you specify in the lastId query parameter. Response is not paginated'
      operationId: listEnvironmentDeploymentHistoryLastId
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log%3FlastId%3D/get/parameters/1'
      tags:
        - environment
      responses:
        '200':
          description: List deploys
          content:
            application/json:
              schema:
                $ref: '#/paths/~1environment~1%7Benvironment%7D~1deploymentHistory%3Ftail%3D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
  '/environment/{environmentId}/environmentVariable':
    post:
      summary: Add an environment variable to the environment
      description: |
        - Add an environment variable to the environment.
          - If the environment variable key already exists, then it will be replaced by the new one.
          - If the environment variable value points toward an existing environment variable key, it will be considered as an alias.
      operationId: createEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
  '/environment/{environmentId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from an environment
      description: To delete an environment variable from an environment you must have the project user permission
      operationId: deleteEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - environment
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Change value of an environment variable belonging to the environment
      operationId: editEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - environment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret':
    post:
      summary: Add a secret to the environment
      description: |
        - Add a secret to the environment.
          - If the secret key already exists, then it will be replaced by the new one.
          - If the secret value points toward an existing secret key, it will be considered as an alias.
      operationId: createEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/secretId'
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Added a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
  '/environment/{environmentId}/secret/{secretId}':
    delete:
      summary: Delete a secret from the environment
      description: To delete a secret from the environment you must have the project user permission
      operationId: deleteEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - environment
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Change value of a secret belonging to the environment
      operationId: editEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - environment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environment}/link':
    get:
      summary: List all URLs of the environment
      description: This will return you all the different URLs of all the applications within this environment
      operationId: listEnvironmentLinks
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: List links
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}':
    get:
      summary: Get application by ID
      operationId: getApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Get application by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit application
      description: To edit the application you must have the admin permission
      operationId: editApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '200':
          description: Edit application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application name within the environment is already taken
    delete:
      summary: Delete application
      description: To delete the application you must have the admin permission
      operationId: deleteApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/contributor':
    get:
      summary: List contributors
      operationId: listApplicationContributor
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List application contributors
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LogResponse/allOf/1/properties/owner'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/tag':
    get:
      summary: List tags
      operationId: listApplicationTag
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List application tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/Instance':
    get:
      summary: List currently running instances of the application with their resource metrics
      operationId: getApplicationCurrentInstance
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Know current resource consumption of the application for each running instance
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/paths/~1instance~1%7BinstanceId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/currentScale':
    get:
      summary: Get current number of running instances of the application
      operationId: getApplicationCurrentScale
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Know number of running instances of the application
          content:
            application/json:
              schema:
                type: object
                properties:
                  min:
                    type: integer
                  max:
                    type: integer
                  running:
                    type: integer
                  running_in_percent:
                    type: number
                  warning_threshold_in_percent:
                    type: number
                  alert_threshold_in_percent:
                    type: number
                  status:
                    type: string
                    enum:
                      - OK
                      - Warning
                      - Alert
                  updated_at:
                    type: string
                    readOnly: true
                    format: date-time
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/metric/cpu':
    get:
      summary: Get CPU consumption metric over time for the application
      operationId: getApplicationMetricCpu
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - application
      responses:
        '200':
          description: CPU consumption
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - instance_name
                        - data
                      properties:
                        instance_name:
                          type: string
                          example: instance 1
                        data:
                          type: array
                          items:
                            $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D~1metric~1cpu/get/responses/200/content/application~1json/schema/properties/results/items'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/metric/memory':
    get:
      summary: Get Memory consumption metric over time for the application
      operationId: getApplicationMetricMemory
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - application
      responses:
        '200':
          description: Memory consumption
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - instance_name
                        - data
                      properties:
                        instance_name:
                          type: string
                          example: instance 1
                        data:
                          type: array
                          items:
                            $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D~1metric~1memory/get/responses/200/content/application~1json/schema/properties/results/items'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/metric/healthCheck':
    get:
      summary: Get Health Check latency  metric over time for the application
      description: The value returned corresponds to the 95th centile
      operationId: getApplicationMetricHealthCheck
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - application
      responses:
        '200':
          description: Health Check Latency
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - instance_name
                        - data
                      properties:
                        instance_name:
                          type: string
                          example: instance 1
                        data:
                          type: array
                          items:
                            type: object
                            required:
                              - created_at
                              - value
                            properties:
                              created_at:
                                type: string
                                readOnly: true
                                format: date-time
                              value:
                                type: number
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/metric/storage':
    get:
      summary: Get Storage consumption metric over time for the application
      operationId: getApplicationMetricStorage
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - application
      responses:
        '200':
          description: Storage consumption
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - instance_name
                        - data
                      properties:
                        instance_name:
                          type: string
                          example: instance 1
                        data:
                          type: array
                          items:
                            $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D~1metric~1storage/get/responses/200/content/application~1json/schema/properties/results/items'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/dependency':
    get:
      summary: List application dependencies
      operationId: listApplicationDependency
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/dependency/{targetApplicationId}':
    post:
      summary: Add application dependency to this application.
      description: Add application dependency to this application to prevent this application starting before the linked dependencies
      operationId: createApplicationDependency
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - application
      responses:
        '200':
          description: Add application dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
    delete:
      summary: Remove application dependency to this application.
      operationId: removeApplicationDependency
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - application
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/commit':
    get:
      summary: List commits
      operationId: listApplicationCommit
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/deploy':
    post:
      summary: Deploy application
      description: 'If you don''t specify any git commit id, we will deploy the latest version'
      operationId: deployApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
      responses:
        '200':
          description: Deploy application
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/rollback':
    post:
      summary: Rollback application to a previous version
      description: Rollback your application. You must provide the git commit id you want to rollback to
      operationId: rollbackApplicationCommit
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
      responses:
        '201':
          description: Application rollbacked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/stop':
    post:
      summary: Stop application
      operationId: stopApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Application stop has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Application is already stopped or an operation is in progress
  '/application/{applicationId}/restart':
    post:
      summary: Restart application
      operationId: restartApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Application restart has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: An operation is in progress
  '/application/{applicationId}/abort':
    post:
      summary: Abort application
      operationId: abortApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Application abort has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: 'Application is not building or deploying at the moment, or an operation is in progress'
  '/application/{applicationId}/event':
    get:
      summary: List application events
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listApplicationEvent
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log/get/parameters/1'
      tags:
        - application
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log/get/responses/200/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/EventResponse'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/event?tail=':
    get:
      summary: List XX last application events
      description: Returns all last XX events. Response is not paginated
      operationId: listApplicationEventTail
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log%3Ftail%3D/get/parameters/1'
      tags:
        - application
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/event?lastId=':
    get:
      summary: List all the last application events after a certain event Id
      description: 'Returns all last events that happened on the application, after the event ID you specify in the lastId query parameter. Response is not paginated'
      operationId: listApplicationEventLastId
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log%3FlastId%3D/get/parameters/1'
      tags:
        - application
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/event/{eventId}/rollback':
    post:
      summary: Rollback application from a given event
      description: Rollback your application to a specific event that occured on your application
      operationId: rollbackApplicationFromEvent
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - application
      responses:
        '201':
          description: Application rollbacked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Add an environment variable to the application
      description: |
        - Add an environment variable to the application.
          - If the environment variable key already exists, then it will be replaced by the new one.
          - If the environment variable value points toward an existing environment variable key, it will be considered as an alias.
      operationId: createApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from an application
      description: To delete an environment variable from an application you must have the project user permission
      operationId: deleteApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - application
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Change value of an environment variable belonging to the application
      operationId: editApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret':
    get:
      summary: List application secrets
      description: 'Secrets are like environment variables, but they are secured and can''t be revealed.'
      operationId: listApplicationSecrets
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Add a secret to the application
      description: |
        - Add a secret to the application.
          - If the secret key already exists, then it will be replaced by the new one.
          - If the secret value points toward an existing secret key, it will be considered as an alias.
      operationId: createApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Add a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/secret/{secretId}':
    delete:
      summary: Delete a secret from an application
      description: To delete a secret from an application you must have the project user permission
      operationId: deleteApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - application
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Change value of a secret belonging to the application
      operationId: editApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/customDomain':
    get:
      summary: List application custom domains
      operationId: listApplicationCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List custom domains
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/paths/~1customDomain~1%7BcustomDomainId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Add custom domain to the application.
      description: Add a custom domain to this application in order not to use qovery autogenerated domain
      operationId: createApplicationCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1customDomain~1%7BcustomDomainId%7D/put/requestBody/content/application~1json/schema'
      responses:
        '201':
          description: Added application custom domain
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customDomain~1%7BcustomDomainId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/log':
    get:
      summary: List logs
      operationId: listApplicationLog
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - name: startId
          in: query
          description: Starting point after which to return results
          required: false
          schema:
            type: string
            format: uuid
      tags:
        - application
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - page
                      - page_size
                    properties:
                      page:
                        type: number
                        example: 1
                      page_size:
                        type: number
                        example: 20
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/LogResponse'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/log?tail=':
    get:
      summary: List XX last application logs
      description: Returns all last XX application logs. Response is not paginated
      operationId: listApplicationLogTail
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - name: tail
          in: query
          description: Number of last results to return
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - application
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/log?lastId=':
    get:
      summary: List all the last application logs after a certain log Id
      description: 'Returns all last logs that happened on the application, after the log ID you specify in the lastId query parameter. Response is not paginated'
      operationId: listApplicationLogLastId
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - name: lastId
          in: query
          description: ID of the last object after which to return all results
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - application
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/database':
    get:
      summary: List linked databases
      operationId: listApplicationDatabase
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List linked databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/database/{targetDatabaseId}':
    post:
      summary: Link a database to the application
      operationId: attachDatabasetoApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetDatabaseId'
      tags:
        - application
      responses:
        '201':
          description: Linked the database to the application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: This database is already linked to the application
    delete:
      summary: Remove database link to this application.
      operationId: removeDatabaseFromApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetDatabaseId'
      tags:
        - application
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/link':
    get:
      summary: List all URLs of the application
      operationId: listApplicationLinks
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List links
          content:
            application/json:
              schema:
                $ref: '#/paths/~1environment~1%7Benvironment%7D~1link/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
  '/environment/{environmentId}/databaseService':
    get:
      summary: List environment database services
      operationId: listDatabaseService
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - databaseService
      responses:
        '200':
          description: List database services
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create a database service
      operationId: createDatabaseService
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - databaseService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D/put/requestBody/content/application~1json/schema'
      responses:
        '201':
          description: Create database service
          content:
            application/json:
              schema:
                $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Database Service name within the environment is already taken
  '/databaseService/{databaseServiceId}':
    get:
      summary: Get database service by ID
      operationId: getDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: Get database service by ID
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      environment:
                        $ref: '#/components/schemas/EnvironmentResponse/allOf/1/properties/project'
                      status:
                        $ref: '#/components/schemas/Status'
                  - $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D/put/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a database service
      description: To edit a database service you must have the admin permission
      operationId: editDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - database_type
                - database_version
              properties:
                name:
                  type: string
                  description: name is case insensitive
                database_type:
                  type: string
                  enum:
                    - postgresql
                    - mysql
                    - mongodb
                    - redis
                    - storage
                database_version:
                  type: string
                  example: 10.1
                uri:
                  type: string
                cpu:
                  type: string
                  default: 250m
                  example:
                    - 250m
                    - 1000m
                    - 1
                    - 1.2
                    - 2
                memory:
                  type: string
                  default: 256MB
                  example:
                    - 256MB
                    - 1024MB
                    - 1GB
                    - 1.2GB
                    - 2GB
                storage:
                  type: string
                  description: Size can be in GB and TB only
                  example:
                    - 1GB
                    - 16GB
                    - 1TB
      responses:
        '200':
          description: Edit a database service
          content:
            application/json:
              schema:
                $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Database service name within the environment is already taken
    delete:
      summary: Delete a database service
      description: To delete a database you must have the admin permission
      operationId: deleteDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/databaseService/{databaseServiceId}/masterCredentials':
    get:
      summary: Get master credentials of the database service
      operationId: getDatabaseServiceMasterCredentials
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: get credentials
          content:
            application/json:
              schema:
                $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
    put:
      summary: Edit database service master credentials
      operationId: editDatabaseServiceCredentials
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: Edit database credentials
          content:
            application/json:
              schema:
                $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/databaseService/{databaseServiceId}/database':
    get:
      summary: List databases of a database service
      operationId: listDatabaseServiceDatabase
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: List databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create a database on the database Service
      operationId: createDatabaseOnDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '201':
          description: Created database on the database Service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Databse with this name already exists on the database Service
  '/databaseService/{databaseServiceId}/application':
    get:
      summary: List applications using the database service
      operationId: listDatabaseServiceApplication
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: List linked applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/application/{targetApplicationId}':
    post:
      summary: Add an application to the database Service
      operationId: attachApplicationToDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - databaseService
      responses:
        '201':
          description: Added the application to the database Service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: This application is already added on the database Service
    delete:
      summary: Remove an application from this database Service
      operationId: removeApplicationFromDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - databaseService
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/restart':
    post:
      summary: Retart database service
      operationId: restartDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: Database Service restart has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Database Service is already started or an operation is in progress
  '/databaseService/{databaseServiceId}/stop':
    post:
      summary: Stop database Service
      operationId: stopDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: Database Service stop has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Database Service is already stopped or an operation is in progress
  '/databaseService/{databaseServiceId}/deploy':
    post:
      summary: Deploy database service
      description: 'If you don''t specify any git commit id, we will deploy the latest version'
      operationId: deployDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
      responses:
        '200':
          description: Deploy database service
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/databaseService/{databaseServiceId}/clone':
    post:
      summary: Clone database Service
      operationId: cloneDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: Database Service clone has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Operation is in progress
  '/databaseService/{databaseServiceId}/currentMetric':
    get:
      summary: Get current metric consumption of the database service
      operationId: getDatabaseServiceCurrentMetric
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      responses:
        '200':
          description: Get database service current metric
          content:
            application/json:
              schema:
                type: object
                properties:
                  cpu:
                    type: object
                    properties:
                      requested_in_float:
                        type: number
                      consumed_in_number:
                        type: number
                      consumed_in_percent:
                        type: number
                      warning_threshold_in_percent:
                        type: number
                      alert_threshold_in_percent:
                        type: number
                      status:
                        type: string
                        enum:
                          - OK
                          - Warning
                          - Alert
                  memory:
                    type: object
                    properties:
                      requested_in_mb:
                        type: integer
                      consumed_in_mb:
                        type: integer
                      consumed_in_percent:
                        type: number
                      warning_threshold_in_percent:
                        type: number
                      alert_threshold_in_percent:
                        type: number
                      status:
                        type: string
                        enum:
                          - OK
                          - Warning
                          - Alert
                  storage:
                    type: object
                    properties:
                      requested_in_gb:
                        type: integer
                      consumed_in_gb:
                        type: integer
                      consumed_in_percent:
                        type: number
                      warning_threshold_in_percent:
                        type: number
                      alert_threshold_in_percent:
                        type: number
                      status:
                        type: string
                        enum:
                          - OK
                          - Warning
                          - Alert
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/databaseService/{databaseServiceId}/metric/cpu':
    get:
      summary: Get CPU consumption metric over time for the database service
      operationId: getDatabaseServiceMetricCpu
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - databaseService
      responses:
        '200':
          description: CPU consumption
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - created_at
                        - requested_in_float
                        - consumed_in_number
                        - consumed_in_percent
                      properties:
                        requested_in_float:
                          type: number
                        consumed_in_number:
                          type: number
                        consumed_in_percent:
                          type: number
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/metric/memory':
    get:
      summary: Get Memory consumption metric over time for the database Service
      operationId: getDatabaseServiceMetricMemory
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - databaseService
      responses:
        '200':
          description: Memory consumption
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - created_at
                        - requested_in_mb
                        - consumed_in_mb
                        - consumed_in_percent
                      properties:
                        requested_in_mb:
                          type: integer
                        consumed_in_mb:
                          type: integer
                        consumed_in_percent:
                          type: number
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/metric/storage':
    get:
      summary: Get Storage consumption metric over time for the database Service
      operationId: getDatabaseServiceMetricStorage
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - databaseService
      responses:
        '200':
          description: Storage consumption
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - created_at
                        - requested_in_mb
                        - consumed_in_mb
                        - consumed_in_percent
                      properties:
                        requested_in_gb:
                          type: integer
                        consumed_in_gb:
                          type: integer
                        consumed_in_percent:
                          type: number
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/metric/healthCheck':
    get:
      summary: Get Health Check latency  metric over time for the database service
      description: The value returned corresponds to the 95th centile
      operationId: getDatabaseServiceMetricHealthCheck
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/components/parameters/lastDays'
      tags:
        - databaseService
      responses:
        '200':
          description: Health Check Latency
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/paths/~1application~1%7BapplicationId%7D~1metric~1healthCheck/get/responses/200/content/application~1json/schema/properties/results/items'
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/backup':
    get:
      summary: List database service backups
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listDatabaseServiceBackup
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log/get/parameters/1'
      tags:
        - databaseService
      responses:
        '200':
          description: List backups
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log/get/responses/200/content/application~1json/schema/allOf/0'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D~1backup/post/responses/201/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Add a backup to the Database Service
      operationId: addBackupDatabaseService
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
      tags:
        - databaseService
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - message
              properties:
                name:
                  type: string
                message:
                  type: string
      responses:
        '201':
          description: Added backup
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      status:
                        $ref: '#/components/schemas/Status'
                  - $ref: '#/paths/~1databaseService~1%7BdatabaseServiceId%7D~1backup/post/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/backup/{backupId}':
    delete:
      summary: Remove database service backup
      operationId: removeDatabaseServiceBackup
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - name: backupId
          in: path
          description: Database Backup ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - databaseService
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/event':
    get:
      summary: List database service events
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listDatabaseServiceEvent
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log/get/parameters/1'
      tags:
        - databaseService
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/paths/~1application~1%7BapplicationId%7D~1event/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/event?tail=':
    get:
      summary: List XX last database service events
      description: Returns all last XX events. Response is not paginated
      operationId: listDatabaseServiceEventTail
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log%3Ftail%3D/get/parameters/1'
      tags:
        - databaseService
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/databaseService/{databaseServiceId}/event?lastId=':
    get:
      summary: List all the last database service events after a certain event Id
      description: 'Returns all last events that happened on the database service, after the event ID you specify in the lastId query parameter. Response is not paginated'
      operationId: listDatabaseServiceEventLastId
      parameters:
        - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/parameters/0'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1log%3FlastId%3D/get/parameters/1'
      tags:
        - databaseService
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/database/{databaseId}':
    get:
      summary: Get database by ID
      operationId: getDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      responses:
        '200':
          description: Get database by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a database
      operationId: editDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseRequest'
      responses:
        '200':
          description: Edit a Database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a database
      description: To delete an database you must have the project user permission
      operationId: deleteDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/credentials':
    get:
      summary: Get  credentials of the database
      operationId: getDatabaseCredentials
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      responses:
        '200':
          description: get credentials
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/put/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
    put:
      summary: Edit database credentials
      operationId: editDatabaseCredentials
      parameters:
        - name: databaseServiceId
          in: path
          description: Database Service ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
              properties:
                login:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Edit database credentials
          content:
            application/json:
              schema:
                $ref: '#/paths/~1database~1%7BdatabaseId%7D~1credentials/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/application':
    get:
      summary: List linked applications
      operationId: listDatabaseApplication
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      responses:
        '200':
          description: List linked applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/customDomain/{customDomainId}':
    get:
      summary: Get custom domain by ID
      operationId: getCustomDOmain
      parameters:
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - customDomain
      responses:
        '200':
          description: Get Custom Domain by ID
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      validation_domain:
                        type: string
                        description: URL provided by Qovery. You must create a CNAME on your DNS provider using that URL
                      status:
                        type: string
                        enum:
                          - validation_pending
                          - live
                          - error
                  - $ref: '#/paths/~1customDomain~1%7BcustomDomainId%7D/put/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a Custom Domain
      description: To edit a Custom Domain  you must have the project user permission
      operationId: editCustomDomain
      parameters:
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - customDomain
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - domain
              properties:
                domain:
                  type: string
                  description: your custom domain
                  example: my.domain.tld
      responses:
        '200':
          description: Edit a CustomDomain
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customDomain~1%7BcustomDomainId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a Custom Domain
      description: To delete an CustomDomain you must have the project user permission
      operationId: deleteCustomDomain
      parameters:
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - customDomain
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/instance/{instanceId}':
    get:
      summary: Get Instance by ID
      operationId: getInstance
      parameters:
        - $ref: '#/components/parameters/instanceId'
      tags:
        - instance
      responses:
        '200':
          description: Get Instance by ID
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      cpu:
                        type: object
                        properties:
                          requested_in_float:
                            type: number
                          consumed_in_number:
                            type: number
                          consumed_in_percent:
                            type: number
                          warning_threshold_in_percent:
                            type: number
                          alert_threshold_in_percent:
                            type: number
                          status:
                            type: string
                            enum:
                              - OK
                              - Warning
                              - Alert
                      memory:
                        type: object
                        properties:
                          requested_in_mb:
                            type: integer
                          consumed_in_mb:
                            type: integer
                          consumed_in_percent:
                            type: number
                          warning_threshold_in_percent:
                            type: number
                          alert_threshold_in_percent:
                            type: number
                          status:
                            type: string
                            enum:
                              - OK
                              - Warning
                              - Alert
                      storage:
                        type: object
                        properties:
                          requested_in_gb:
                            type: integer
                          consumed_in_gb:
                            type: integer
                          consumed_in_percent:
                            type: number
                          warning_threshold_in_percent:
                            type: number
                          alert_threshold_in_percent:
                            type: number
                          status:
                            type: string
                            enum:
                              - OK
                              - Warning
                              - Alert
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environmentVariable/{environmentVariableId}':
    get:
      summary: Get environment variable by ID
      operationId: getEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - environmentVariable
      responses:
        '200':
          description: Get environment variable by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/secret/{secretId}':
    get:
      summary: Get a secret by ID
      operationId: getSecret
      parameters:
        - $ref: '#/components/parameters/secretId'
      tags:
        - secret
      responses:
        '200':
          description: Get secret by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  parameters:
    organizationId:
      name: organizationId
      in: path
      description: Organization ID
      required: true
      schema:
        type: string
        format: uuid
    projectId:
      name: projectId
      in: path
      description: Project ID
      required: true
      schema:
        type: string
        format: uuid
    environmentId:
      name: environmentId
      in: path
      description: Environment ID
      required: true
      schema:
        type: string
        format: uuid
    applicationId:
      name: applicationId
      in: path
      description: Application ID
      required: true
      schema:
        type: string
        format: uuid
    databaseId:
      name: databaseId
      in: path
      description: Database ID
      required: true
      schema:
        type: string
        format: uuid
    environmentVariableId:
      name: environmentVariableId
      in: path
      description: Environment Variable ID
      required: true
      schema:
        type: string
        format: uuid
    instanceId:
      name: instanceId
      in: path
      description: Instance ID
      required: true
      schema:
        type: string
        format: uuid
    customDomainId:
      name: customDomainId
      in: path
      description: Custom DOmain ID
      required: true
      schema:
        type: string
        format: uuid
    secretId:
      name: secretId
      in: path
      description: Secret ID
      required: true
      schema:
        type: string
        format: uuid
    targetApplicationId:
      name: targetApplicationId
      in: path
      description: Target application ID
      required: true
      schema:
        type: string
        format: uuid
    targetDatabaseId:
      name: targetDatabaseId
      in: path
      description: Target database ID
      required: true
      schema:
        type: string
        format: uuid
    limit:
      name: limit
      in: query
      description: How many items to return at one time (max 100)
      required: false
      schema:
        type: integer
        format: int32
    lastDays:
      name: lastSeconds
      in: query
      description: Up to how many seconds in the past to ask analytics results
      required: true
      schema:
        type: number
  schemas:
    BaseResponse:
      type: object
      required:
        - id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: date-time
        updated_at:
          type: string
          readOnly: true
          format: date-time
    OrganizationRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        website_url:
          type: string
          nullable: true
    OrganizationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            website_url:
              type: string
              nullable: true
            logo_url:
              type: string
              format: uri
    OrganizationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResponse'
    ProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            organization:
              $ref: '#/components/schemas/EnvironmentResponse/allOf/1/properties/project'
    ProjectResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectResponse'
    EnvironmentRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        reference_branch:
          type: string
        cloud_provider:
          type: object
          properties:
            provider:
              type: string
              example: aws
            cluster:
              type: string
              example: us-east-2
        mode:
          type: string
          enum:
            - PRODUCTION
            - DEVELOPMENT
    EnvironmentResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            project:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  format: uuid
                  readOnly: true
            status:
              $ref: '#/components/schemas/Status'
        - $ref: '#/components/schemas/EnvironmentRequest'
    EnvironmentResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentResponse'
    ApplicationRequest:
      type: object
      required:
        - name
        - git_repository_url
        - git_commit_id
        - git_repository_branch
        - root_path
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
          description: give a description to this application
        build_mode:
          type: string
          enum:
            - DOCKER
            - BUILDPACKS
          description: |
            `DOCKER` required `dockerfile_path`
            `BUILDPACKS` does not required any `dockerfile_path`
        git_repository_url:
          type: string
          description: application git repository URL
        git_repository_branch:
          type: string
          description: |
            Name of the branch to use. This is optional
            If not specified, then the branch used is the `main` or `master` one
        git_commit_id:
          type: string
          description: Current Git commit ID
        git_last_commit_date:
          type: string
          readOnly: true
          format: date-time
        git_last_commit_contributor:
          type: string
          format: uuid
        dockerfile_path:
          type: string
          description: The path of the associated Dockerfile
        root_path:
          type: string
          default: /
          description: indicates the root path of the application.
        cpu:
          type: string
          default: 250m
          example:
            - 250m
            - 1000m
            - 1
            - 1.2
            - 2
        memory:
          type: string
          default: 256MB
          example:
            - 256MB
            - 1024MB
            - 1GB
            - 1.2GB
            - 2GB
        min_running_instances:
          type: integer
          minimum: 0
          description: |
            Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
            Note: 0 means that there is no application running.
          default: 1
        max_running_instances:
          type: integer
          maximum: -1
          description: |
            Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
            Note: -1 means that there is no limit.
          default: 1
        storage:
          type: array
          items:
            type: object
            required:
              - name
              - type
              - size
              - mount_point
            properties:
              name:
                type: string
                example: images
              type:
                type: string
                enum:
                  - SLOW_HDD
                  - HDD
                  - SSD
                  - FAST_SSD
              size:
                type: string
                description: Size can be in GB and TB only
                example:
                  - 1GB
                  - 16GB
                  - 1TB
              mount_point:
                type: string
                example: /mnt/images
        ports:
          type: array
          items:
            type: object
            required:
              - internal_port
              - protocol
            properties:
              internal_port:
                type: integer
                example: 8080
                description: The listening port of your application
              external_port:
                type: integer
                example: 8080
                description: The exposed port for your application. This is optional. If not set a default port will be used.
              publicly_accessible:
                type: boolean
                default: true
                description: Expose the port to the world
              protocol:
                type: string
                default: HTTPS
                enum:
                  - HTTPS
                  - HTTP
                  - TCP
                  - UDP
        healthcheck:
          type: object
          properties:
            protocol:
              type: string
              enum:
                - TCP
                - HTTP
                - None
            value:
              type: string
    ApplicationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            environment:
              $ref: '#/components/schemas/EnvironmentResponse/allOf/1/properties/project'
            status:
              $ref: '#/components/schemas/Status'
        - $ref: '#/components/schemas/ApplicationRequest'
    ApplicationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationResponse'
    DatabaseRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
    DatabaseResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            database_service:
              $ref: '#/components/schemas/EnvironmentResponse/allOf/1/properties/project'
            status:
              $ref: '#/components/schemas/Status'
        - $ref: '#/components/schemas/DatabaseRequest'
    DatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseResponse'
    AttachApplicationToDatabaseRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Set database ID
          format: uuid
    AttachApplicationToDatabaseResponse:
      type: object
      properties:
        name:
          type: string
          description: name is case insensitive
    AttachApplicationToDatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AttachApplicationToDatabaseResponse'
    EnvironmentVariableRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: key is case sensitive
        value:
          type: string
          description: value of the env variable.
    EnvironmentVariableResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - scope
          properties:
            overriden_variable:
              type: object
              properties:
                key:
                  type: string
                  readony: true
                value:
                  type: string
                scope:
                  type: string
                  enum:
                    - BUILT_IN
                    - ENVIRONMENT
                    - PROJECT
                    - APPLICATION
            aliased_variable:
              type: object
              properties:
                key:
                  type: string
                  example: QOVERY_DATABASE_PSQL_NAME
            scope:
              type: string
              enum:
                - BUILT_IN
                - ENVIRONMENT
                - PROJECT
                - APPLICATION
        - $ref: '#/components/schemas/EnvironmentVariableRequest'
    EnvironmentVariableResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariableResponse'
    SecretRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: key is case sensitive
        value:
          type: string
          description: value of the secret. Clear value will never be returned
    SecretResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - scope
          properties:
            key:
              type: string
              description: key is case sensitive
            overriden_secret:
              type: object
              properties:
                key:
                  type: string
                  readony: true
                scope:
                  type: string
                  enum:
                    - BUILT_IN
                    - ENVIRONMENT
                    - PROJECT
                    - APPLICATION
            aliased_secret:
              type: object
              properties:
                key:
                  type: string
                  example: QOVERY_DATABASE_PSQL_NAME
            scope:
              type: string
              enum:
                - BUILT_IN
                - ENVIRONMENT
                - PROJECT
                - APPLICATION
    SecretResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SecretResponse'
    EventResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            owner:
              $ref: '#/components/schemas/LogResponse/allOf/1/properties/owner'
            commit:
              $ref: '#/components/schemas/CommitResponse'
            status:
              $ref: '#/components/schemas/Status'
    EventResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventResponse'
    CommitResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - git_commit_id
          properties:
            git_commit_id:
              type: string
            message:
              type: string
            user:
              $ref: '#/components/schemas/LogResponse/allOf/1/properties/owner'
    CommitResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CommitResponse'
    DeployRequest:
      type: object
      properties:
        git_commit_id:
          type: string
          description: Commit ID to deploy
    ApplicationDependencyRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Set application ID
          format: uuid
    LogResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            owner:
              allOf:
                - $ref: '#/components/schemas/BaseResponse'
                - type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    profile_picture_url:
                      type: string
                      format: uri
            commit:
              $ref: '#/components/schemas/CommitResponse'
            status:
              $ref: '#/components/schemas/Status'
            message:
              type: string
              example: log message
            message_human_explanation:
              type: string
              example: explain what the error means -- Markdown can be injected
            hint:
              type: string
              example: give a possible action to the user -- Markdown can be injected
    LogResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/LogResponse'
    UnexpectedError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    TagResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
    TagResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    Status:
      type: object
      required:
        - state
      properties:
        state:
          type: string
          description: |
            Status is a state machine. It starts with `BUILDING` or `DEPLOYING` state. Then finish with `*_ERROR` or any termination state.
          enum:
            - BUILDING
            - BUILD_ERROR
            - BUILT
            - DEPLOYING
            - DEPLOYMENT_ERROR
            - DEPLOYED
            - STOPPING
            - STOP_ERROR
            - STOPPED
            - DELETING
            - DELETE_ERROR
            - DELETED
            - RUNNING
            - WARNING
            - ERROR
        message:
          type: string
          nullable: true
          description: message related to the state
  responses:
    '204':
      description: no content
    '401':
      description: Access token is missing or invalid
    '403':
      description: Access forbidden
    '404':
      description: Resource not found
    '409':
      description: Conflict
    204-deletion:
      description: The resource was deleted successfully
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
