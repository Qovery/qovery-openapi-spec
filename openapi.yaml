openapi: 3.0.0
info:
  version: 1.0.0
  title: Qovery API
  description: Qovery is the fastest way to deploy your full-stack apps on any Cloud provider
  contact:
    name: Qovery Support Team
    url: 'https://discord.qovery.com'
    email: support+api+documentation@qovery.com
servers:
  - url: 'https://api.qovery.com'
paths:
  /organization:
    get:
      summary: List user organizations
      operationId: listOrganization
      tags:
        - organization
      responses:
        '200':
          description: List organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create an organization
      operationId: createOrganization
      tags:
        - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '201':
          description: Create organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Organization name is already taken
  '/organization/{organizationId}':
    get:
      summary: Get organization by ID
      operationId: getOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - organization
      responses:
        '200':
          description: Get organization by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization
      description: To edit an organization you must have the admin permission
      operationId: editOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '200':
          description: Edit an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization name is already taken
    delete:
      summary: Delete an organization
      description: To delete an organization you must have the admin permission
      operationId: deleteOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - organization
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/project':
    get:
      summary: List projects
      operationId: listProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - project
      responses:
        '200':
          description: List projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create a project
      operationId: createProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Create project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Project name within the organization is already taken
  '/project/{projectId}':
    get:
      summary: Get project by ID
      operationId: getProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - project
      responses:
        '200':
          description: Get project by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a project
      description: To edit a project you must have the admin permission
      operationId: editProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Edit a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Project name within the organization is already taken
    delete:
      summary: Delete a project
      description: To delete a project you must have the admin permission
      operationId: deleteProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - project
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment':
    get:
      summary: List environments
      operationId: listEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - environment
      responses:
        '200':
          description: List environments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create an environment
      operationId: createEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '201':
          description: Create environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Environment name within the project is already taken
  '/environment/{environmentId}':
    get:
      summary: Get environment by ID
      operationId: getEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '200':
          description: Get environment by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment
      description: To edit an environment you must have the admin permission
      operationId: editEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '200':
          description: Edit an environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment name within the project is already taken
    delete:
      summary: Delete an environment
      description: To delete an environment you must have the admin permission
      operationId: deleteEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - environment
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application':
    get:
      summary: List applications
      operationId: listApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - application
      responses:
        '200':
          description: List applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create an application
      operationId: createApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '201':
          description: Create application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Application name within the environment is already taken
  '/application/{applicationId}':
    get:
      summary: Get application by ID
      operationId: getApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Get application by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit application
      description: To edit the application you must have the admin permission
      operationId: editApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '200':
          description: Edit application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application name within the environment is already taken
    delete:
      summary: Delete application
      description: To delete the application you must have the admin permission
      operationId: deleteApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/contributor':
    get:
      summary: List contributors
      operationId: listApplicationContributor
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List application contributors
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/BaseResponse'
                        - type: object
                          properties:
                            first_name:
                              type: string
                            last_name:
                              type: string
                            profile_picture_url:
                              type: string
                              format: uri
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/tag':
    get:
      summary: List tags
      operationId: listApplicationTag
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List application tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/commit':
    get:
      summary: List commits
      operationId: listApplicationCommit
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/deploy':
    post:
      summary: Deploy a specific version
      operationId: deployApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Deploy a specific version
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeployRequest'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/event':
    get:
      summary: List events
      operationId: listApplicationEvent
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Add an environment variable to the application
      description: |
        Add an environment variable to the application. If the environment variable name does already exists, then it will be replaced by the new one.
      operationId: createApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Add an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
  '/environmentVariable/{environmentVariableId}':
    get:
      summary: Get environment variable by ID
      operationId: getEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - environmentVariable
      responses:
        '200':
          description: Get environment variable by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization
      description: To edit an environment variable you must have the project user permission
      operationId: editEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - environmentVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '200':
          description: Edit an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment variable name is already taken
    delete:
      summary: Delete an environment variable
      description: To delete an environment variable you must have the project user permission
      operationId: deleteEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - environmentVariable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret':
    get:
      summary: List secrets
      operationId: listApplicationSecrets
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Add a secret
      description: |
        Add a secret to the application. If the secret name does already exists, then it will be replaced by the new one.
      operationId: createApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Add a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
  '/secret/{secretId}':
    get:
      summary: Get a secret by ID
      operationId: getSecret
      parameters:
        - name: secretId
          in: path
          description: Secret ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - secret
      responses:
        '200':
          description: Get secret by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret
      description: To edit a secret you must have the project user permission
      operationId: editSecret
      parameters:
        - $ref: '#/paths/~1secret~1%7BsecretId%7D/get/parameters/0'
      tags:
        - secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '200':
          description: Edit a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Secret name is already taken
    delete:
      summary: Delete a secret
      description: To delete a secret you must have the project user permission
      operationId: deleteSecret
      parameters:
        - $ref: '#/paths/~1secret~1%7BsecretId%7D/get/parameters/0'
      tags:
        - secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/log':
    get:
      summary: List logs
      operationId: listApplicationLog
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/application/{applicationId}/database':
    get:
      summary: List linked databases
      operationId: listApplicationDatabase
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: List linked databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachApplicationToDatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Link the application to a database
      operationId: attachApplicationToDatabase
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachApplicationToDatabaseRequest'
      responses:
        '201':
          description: Link the application to a database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachApplicationToDatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: This database is already linked to the application
  '/application/{applicationId}/start':
    post:
      summary: Start application
      operationId: startApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Application start has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Application is already started or an operation is in progress
  '/application/{applicationId}/stop':
    post:
      summary: Stop application
      operationId: stopApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Application stop has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Application is already stopped or an operation is in progress
  '/application/{applicationId}/restart':
    post:
      summary: Restart application
      operationId: restartApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - application
      responses:
        '200':
          description: Application restart has been requested
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: An operation is in progress
  '/environment/{environmentId}/database':
    get:
      summary: List databases
      operationId: listDatabase
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - database
      responses:
        '200':
          description: List databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create a database
      operationId: createDatabase
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseRequest'
      responses:
        '201':
          description: Create database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Database name within the environment is already taken
  '/database/{databaseId}':
    get:
      summary: Get database by ID
      operationId: getDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      responses:
        '200':
          description: Get database by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a database
      description: To edit a database you must have the admin permission
      operationId: editDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseRequest'
      responses:
        '200':
          description: Edit an application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Database name within the environment is already taken
    delete:
      summary: Delete a database
      description: To delete a database you must have the admin permission
      operationId: deleteDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - database
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  parameters:
    organizationId:
      name: organizationId
      in: path
      description: Organization ID
      required: true
      schema:
        type: string
        format: uuid
    projectId:
      name: projectId
      in: path
      description: Project ID
      required: true
      schema:
        type: string
        format: uuid
    environmentId:
      name: environmentId
      in: path
      description: Environment ID
      required: true
      schema:
        type: string
        format: uuid
    applicationId:
      name: applicationId
      in: path
      description: Application ID
      required: true
      schema:
        type: string
        format: uuid
    databaseId:
      name: databaseId
      in: path
      description: Database ID
      required: true
      schema:
        type: string
        format: uuid
    environmentVariableId:
      name: environmentVariableId
      in: path
      description: Environment Variable ID
      required: true
      schema:
        type: string
        format: uuid
    limit:
      name: limit
      in: query
      description: How many items to return at one time (max 100)
      required: false
      schema:
        type: integer
        format: int32
  schemas:
    BaseResponse:
      type: object
      required:
        - id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: date-time
    OrganizationRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        website_url:
          type: string
          nullable: true
    OrganizationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
            website_url:
              type: string
              nullable: true
            logo_url:
              type: string
              format: uri
    OrganizationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResponse'
    ProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    ProjectResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectResponse'
    EnvironmentRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    EnvironmentResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    EnvironmentResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentResponse'
    ApplicationRequest:
      type: object
      required:
        - name
        - git_repository_url
        - git_commit_id
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
        build_mode:
          type: string
          enum:
            - DOCKER
            - BUILDPACKS
          description: |
            `DOCKER` required `dockerfile_path`
            `BUILDPACKS` does not required any `dockerfile_path`
        dockerfile_path:
          type: string
          description: The path of the associated Dockerfile
        git_repository_url:
          type: string
          description: application git repository URL
        git_repository_branch:
          type: string
          description: |
            Name of the branch to use. This is optional
            If not specified, then the branch used is the `main` or `master` one
        git_commit_id:
          type: string
          description: Current Git commit ID
        cpu:
          type: string
          default: 250m
          example:
            - 250m
            - 1000m
            - 1
            - 1.2
            - 2
        memory:
          type: string
          default: 256MB
          example:
            - 256MB
            - 1024MB
            - 1GB
            - 1.2GB
            - 2GB
        min_running_instances:
          type: integer
          minimum: 0
          description: |
            Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
            Note: 0 means that there is no application running.
        max_running_instances:
          type: integer
          maximum: -1
          description: |
            Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
            Note: -1 means that there is no limit.
        storage:
          type: array
          items:
            type: object
            required:
              - name
              - type
              - size
              - mount_point
            properties:
              name:
                type: string
                example: images
              type:
                type: string
                enum:
                  - SLOW_HDD
                  - HDD
                  - SSD
                  - FAST_SSD
              size:
                type: string
                description: Size can be in GB and TB only
                example:
                  - 1GB
                  - 16GB
                  - 1TB
              mount_point:
                type: string
                example: /mnt/images
        ports:
          type: array
          items:
            type: object
            required:
              - internal_port
              - protocol
            properties:
              internal_port:
                type: integer
                example: 8080
                description: The listening port of your application
              external_port:
                type: integer
                example: 8080
                description: The exposed port for your application. This is optional. If not set a default port will be used.
              publicly_accessible:
                type: boolean
                default: true
                description: Expose the port to the world
              protocol:
                type: string
                default: HTTPS
                enum:
                  - HTTPS
                  - HTTP
                  - TCP
                  - UDP
    ApplicationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    ApplicationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationResponse'
    DatabaseRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    DatabaseResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    DatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseResponse'
    AttachApplicationToDatabaseRequest:
      type: object
      properties:
        name:
          type: string
          description: name is case insensitive
    AttachApplicationToDatabaseResponse:
      type: object
      properties:
        name:
          type: string
          description: name is case insensitive
    AttachApplicationToDatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AttachApplicationToDatabaseResponse'
    EnvironmentVariableRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    EnvironmentVariableResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
    EnvironmentVariableResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariableResponse'
    SecretRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    SecretResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
    SecretResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SecretResponse'
    EventResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
    EventResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventResponse'
    CommitResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
    CommitResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CommitResponse'
    DeployRequest:
      type: object
      required:
        - commit_id
      properties:
        name:
          type: commit_id
          description: Commit ID to deploy
    LogResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
    LogResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/LogResponse'
    UnexpectedError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    TagResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
    TagResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
  responses:
    '204':
      description: no content
    '401':
      description: Access token is missing or invalid
    '403':
      description: Access forbidden
    '404':
      description: Resource not found
    '409':
      description: Conflict
    204-deletion:
      description: The resource was deleted successfully
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
