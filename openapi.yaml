openapi: 3.0.0
info:
  version: 1.0.3
  title: Qovery API
  description: |
    - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider.
    - ℹ️ The API is stable and still in development.
  contact:
    name: Qovery Product Team
    url: 'https://www.qovery.com'
    email: support+api+documentation@qovery.com
  x-logo:
    url: 'https://raw.githubusercontent.com/Qovery/public-resources/master/qovery_new_logo_white.svg'
    altText: Qovery
tags:
  - name: Account
  - name: Account Info
  - name: Admin
  - name: Application
  - name: Application Actions
  - name: Application Configuration
  - name: Application Database
  - name: Application Deployment Restriction
  - name: Application Deployment History
  - name: Application Environment Variable
  - name: Application Event
  - name: Application Logs
  - name: Application Main Calls
  - name: Application Metrics
  - name: Application Secret
  - name: Applications
  - name: Backups
  - name: Billing
  - name: Cloud Provider
  - name: Cloud Provider Credentials
  - name: Clusters
  - name: Custom Domain
  - name: Database
  - name: Database Actions
  - name: Database Application
  - name: Database Event
  - name: Database Main Calls
  - name: Database Metrics
  - name: Databases
  - name: Dependency
  - name: Environment
  - name: Environment Actions
  - name: Environment Deployment History
  - name: Environment Deployment Rule
  - name: Environment Logs
  - name: Environment Main Calls
  - name: Environment Secret
  - name: Environment Variable
  - name: Environments
  - name: Git
  - name: Git repositories
  - name: Logical Database
  - name: Members
  - name: Organization
  - name: Organization Main Calls
  - name: Organization Api Token
  - name: Project
  - name: Project Deployment Rule
  - name: Project Environment Variable
  - name: Project Main Calls
  - name: Project Secret
  - name: Projects
  - name: Referral & Rewards
  - name: User Sign Up
x-tagGroups:
  - name: Organization
    tags:
      - Organization Main Calls
      - Organization Api Token
      - Organization Account Git Repositories
      - Projects
      - Members
      - Billing
      - Clusters
      - Cloud Provider
      - Cloud Provider Credentials
  - name: Project
    tags:
      - Project Main Calls
      - Environments
      - Project Deployment Rule
      - Project Environment Variable
      - Project Secret
  - name: Environment
    tags:
      - Environment Main Calls
      - Applications
      - Databases
      - Environment Actions
      - Environment Logs
      - Environment Deployment History
      - Environment Deployment Rule
      - Environment Variable
      - Environment Secret
  - name: Application
    tags:
      - Application Main Calls
      - Application Actions
      - Application Configuration
      - Custom Domain
      - Dependency
      - Application Metrics
      - Application Database
      - Application Logs
      - Application Deployment Restriction
      - Application Deployment History
      - Application Environment Variable
      - Application Secret
      - Application Event
  - name: Database
    tags:
      - Database Main Calls
      - Database Actions
      - Database Metrics
      - Database Applications
      - Logical Database
      - Database Application
      - Backups
      - Database Event
  - name: Account
    tags:
      - Account Info
      - Git repositories
      - Referral & Rewards
  - name: Git
    tags:
      - Git repositories
  - name: Admin
    tags:
      - User Sign Up
servers:
  - url: 'https://api.qovery.com'
paths:
  /organization:
    get:
      summary: List user organizations
      operationId: listOrganization
      tags:
        - Organization Main Calls
      responses:
        '200':
          description: List organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an organization
      operationId: createOrganization
      tags:
        - Organization Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '201':
          description: Create organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization name is already taken
  '/organization/{organizationId}':
    get:
      summary: Get organization by ID
      operationId: getOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      responses:
        '200':
          description: Get organization by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization
      description: To edit an organization you must have the admin permission
      operationId: editOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationEditRequest'
      responses:
        '200':
          description: Edit an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization name is already taken
    delete:
      summary: Delete an organization
      description: To delete an organization you must have the admin permission
      operationId: deleteOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/apiToken':
    get:
      summary: List organization api tokens
      description: List organization api tokens
      operationId: listOrganizationApiTokens
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Api Token
      responses:
        '200':
          description: List organization api tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationApiTokenResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an organization api token
      description: Create an organization api token. You can use the generated token to interact in a programmatic way with our API.
      operationId: createOrganizationApiToken
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Api Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationApiTokenCreateRequest'
      responses:
        '201':
          description: Organization api token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationApiTokenCreate'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization Api Token name is already taken
  '/organization/{organizationId}/apiToken/{apiTokenId}':
    delete:
      summary: Delete organization api token
      description: Delete organization api token
      operationId: deleteOrganizationApiToken
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - name: apiTokenId
          in: path
          description: Organization Api Token ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Organization Api Token
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/member':
    get:
      summary: Get organization members
      operationId: getOrganizationMembers
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      responses:
        '200':
          description: Get members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/member/{userId}':
    delete:
      summary: Remove a member
      operationId: deleteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Members
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/inviteMember':
    get:
      summary: Get invited members
      operationId: getOrganizationInvitedMembers
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      responses:
        '200':
          description: Get invited members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteMemberResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Invite someone in the organization
      operationId: postInviteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteMemberRequest'
      responses:
        '201':
          description: User invited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteMember'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: User already invited
  '/organization/{organizationId}/inviteMember/{inviteId}':
    post:
      summary: Accept Invite in the organization
      operationId: postAcceptInviteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - name: inviteId
          in: path
          description: Invite ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Members
      responses:
        '201':
          description: User invited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteMember'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: User already invited
    delete:
      summary: Remove an invited member
      operationId: deleteInviteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/paths/~1organization~1%7BorganizationId%7D~1inviteMember~1%7BinviteId%7D/post/parameters/1'
      tags:
        - Members
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/transferOwnership':
    post:
      summary: Transfer organization ownership to another user
      operationId: postOrganizationTransferOwnership
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOwnershipRequest'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/currentCost':
    get:
      summary: Get organization current cost
      operationId: getOrganizationCurrentCost
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Cost
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCurrentCost'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/creditCode':
    post:
      summary: Add credit code
      operationId: addCreditCode
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreditCodeRequest'
      responses:
        '200':
          description: add credit code
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/currentCost':
    get:
      summary: Get cluster current cost
      operationId: getClusterCurrentCost
      description: |
        Get your cluster cost range. We are unable to give a precise cost of your infrastructure at the moment.
        But Qovery guarantees that the cost of your cluster will not exceed the max range.
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Billing
      responses:
        '200':
          description: Get cluster cost
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostRange'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/billingInfo':
    get:
      summary: Get organization billing info
      operationId: getOrganizationBillingInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Billing Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfo'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit Organization Billing Info
      operationId: editOrganizationBillingInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingInfoRequest'
      responses:
        '200':
          description: Edit billing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/billingStatus':
    get:
      summary: Get organization billing status
      description: |
        This endpoint returns a "is_valid" boolean field reflecting the billing status of the organization:
        - If true, the organization billing is valid
        - For Startup organization, it returns false if there is at least 1 invoice unpaid since 1 week
        - For Community organization, it returns false if there is no credit left
      operationId: getOrganizationBillingStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Billing Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/invoice':
    get:
      summary: List organization invoices
      operationId: listOrganizationInvoice
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: List Invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/invoice/{invoiceId}':
    get:
      summary: Get organization invoice
      operationId: getOrganizationInvoice
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/invoiceId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/invoice/{invoiceId}/download':
    get:
      summary: Get invoice link
      description: This will return URL of the invoice PDF
      operationId: getOrganizationInvoicePDF
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/invoiceId'
      tags:
        - Billing
      responses:
        '200':
          description: Get invoice PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/downloadInvoices':
    post:
      summary: Download all invoices
      operationId: organizationDownloadAllInvoices
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '202':
          description: You will receive an email containing your invoices
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/creditCard':
    get:
      summary: List organization credit cards
      operationId: listOrganizationCreditCards
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: List cfredit cards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add credit card
      operationId: addCreditCard
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardRequest'
      responses:
        '201':
          description: Add credit card
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCard'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/creditCard/{creditCardId}':
    delete:
      summary: Delete credit card
      operationId: deleteCreditCard
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/creditCardId'
      tags:
        - Billing
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/project':
    get:
      summary: List projects
      operationId: listProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Projects
      responses:
        '200':
          description: List projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a project
      operationId: createProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Create project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Project name within the organization is already taken
  '/organization/{organizationId}/project/stats':
    get:
      summary: List total number of services and environments for each project of the organization
      description: 'Returns a list of project ids, and for each its total numberof services and environments'
      operationId: getOrganizationProjectStats
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Projects
      responses:
        '200':
          description: Get number of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster':
    get:
      summary: List organization clusters
      operationId: listOrganizationCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Clusters
      responses:
        '200':
          description: List clusters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a cluster
      operationId: createCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRequest'
      responses:
        '201':
          description: Create cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/status':
    get:
      summary: List all clusters statuses
      description: Returns a list of clusters with only their id and status.
      operationId: getOrganizationClusterStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Clusters
      responses:
        '200':
          description: Get statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}':
    delete:
      summary: Delete a cluster
      operationId: deleteCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a cluster
      operationId: editCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRequest'
      responses:
        '200':
          description: Edited the cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/status':
    get:
      summary: Get cluster status
      operationId: getClusterStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/routingTable':
    get:
      summary: Get routing table
      description: Retrieve network routing table where each line corresponds to a route between a destination and a target.
      operationId: getRoutingTable
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: Routing table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRoutingTable'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit routing table
      description: Edit routing table by returning updated table.
      operationId: editRoutingTable
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRoutingTableRequest'
      responses:
        '201':
          description: Updated routing table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRoutingTable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/aws/credentials':
    get:
      summary: List AWS credentials
      operationId: listAWSCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: list credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentialsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create AWS credentials set
      operationId: createAWSCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsCredentialsRequest'
      responses:
        '201':
          description: Credentials created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/aws/credentials/{credentialsId}':
    put:
      summary: Edit a set of AWS credentials
      operationId: editAWSCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsCredentialsRequest'
      responses:
        '200':
          description: Edit a CustomDomain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a set of AWS credentials
      operationId: deleteAWSCredentials
      parameters:
        - $ref: '#/components/parameters/credentialsId'
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/digitalOcean/credentials':
    get:
      summary: List DO credentials
      operationId: listDOCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: list credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentialsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create Digital Ocean credentials set
      operationId: createDOCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoCredentialsRequest'
      responses:
        '201':
          description: Credentials created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/digitalOcean/credentials/{credentialsId}':
    put:
      summary: Edit a set of Digital Ocean credentials
      operationId: editDOCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoCredentialsRequest'
      responses:
        '200':
          description: Edit a CustomDomain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a set of Digital Ocean credentials
      operationId: deleteDOCredentials
      parameters:
        - $ref: '#/components/parameters/credentialsId'
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/scaleway/credentials':
    get:
      summary: List Scaleway credentials
      operationId: listScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: list credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentialsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create Scaleway credentials set
      operationId: createScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalewayCredentialsRequest'
      responses:
        '201':
          description: Credentials created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/scaleway/credentials/{credentialsId}':
    put:
      summary: Edit a set of Scaleway credentials
      operationId: editScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalewayCredentialsRequest'
      responses:
        '200':
          description: Edit a CustomDomain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a set of Scaleway credentials
      operationId: deleteScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/credentialsId'
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/account/gitAuthProvider':
    get:
      summary: Get git provider accounts
      operationId: getOrganizationGitProviderAccount
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitAuthProviderResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/github/repository':
    get:
      summary: Get github repositories of the connected user
      operationId: getOrganizationGithubRepositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get github repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/github/repository/branch':
    get:
      summary: Get github branches of the specified repository
      operationId: getOrganizationGithubRepositoryBranches
      tags:
        - Organization Account Git Repositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
      responses:
        '200':
          description: Get github repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/gitlab/repository':
    get:
      summary: Get gitlab repositories of the connected user
      operationId: getOrganizationGitlabRepositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get gitlab repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/gitlab/repository/branch':
    get:
      summary: Get gitlab branches of the specified repository
      operationId: getOrganizationGitlabRepositoryBranches
      tags:
        - Organization Account Git Repositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository to retrieve the branches
      responses:
        '200':
          description: Get gitlab repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/bitbucket/repository':
    get:
      summary: Get bitbucket repositories of the connected user
      operationId: getOrganizationBitbucketRepositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get bitbucket repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/bitbucket/repository/branch':
    get:
      summary: Get bitbucket branches of the specified repository
      operationId: getOrganizationBitbucketRepositoryBranches
      tags:
        - Organization Account Git Repositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
      responses:
        '200':
          description: Get bitbucket repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  /cloudProvider:
    get:
      summary: List Cloud providers available
      operationId: listCloudProvider
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list cloud providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudProviderResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /aws/region:
    get:
      summary: List AWS regions
      operationId: listAWSRegions
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRegionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /aws/clusterFeature:
    get:
      summary: List AWS features available
      operationId: listAWSFeatures
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list features available for AWS cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFeatureResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /aws/instanceType:
    get:
      summary: List AWS available instance types
      operationId: listAWSInstanceType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for AWS cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /digitalOcean/region:
    get:
      summary: List DO regions
      operationId: listDORegions
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRegionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /digitalOcean/clusterFeature:
    get:
      summary: List DO features available
      operationId: listDOFeatures
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list features available for Digital Ocean cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFeatureResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /digitalOcean/instanceType:
    get:
      summary: List DO available instance types
      operationId: listDOInstanceType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for Digital Ocean cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scaleway/region:
    get:
      summary: List Scaleway regions
      operationId: listScalewayRegions
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRegionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scaleway/clusterFeature:
    get:
      summary: List Scaleway features available
      operationId: listScalewayFeatures
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list features available for Scaleway cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFeatureResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scaleway/instanceType:
    get:
      summary: List Scaleway available instance types
      operationId: listScalewayInstanceType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for Scaleway cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/cloudProviderInfo':
    get:
      summary: Get cluster cloud provider info and credentials
      operationId: getOrganizationCloudProviderInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: get cloud provider info and credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCloudProviderInfo'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Specify cluster cloud provider info and credentials
      operationId: specifyClusterCloudProviderInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterCloudProviderInfoRequest'
      responses:
        '201':
          description: Create cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCloudProviderInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/isReady':
    get:
      summary: Know if a cluster is ready to be deployed or not
      operationId: getClusterReadinessStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: Get Cluster Readiness Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterReadinessStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/deploy':
    post:
      summary: Deploy a cluster
      description: allows to deploy a cluster
      operationId: deployCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '201':
          description: Deploy cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/update':
    post:
      summary: Update a cluster Version
      description: allows to update cluster version
      operationId: UpdateCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '201':
          description: Update cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/stop':
    post:
      summary: Stop cluster
      description: Cluster stop has been requester.
      operationId: StopCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '202':
          description: Update cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Cluster is already stopped or an operation is in progress
  '/project/{projectId}':
    get:
      summary: Get project by ID
      operationId: getProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Main Calls
      responses:
        '200':
          description: Get project by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a project
      description: To edit a project you must have the admin permission
      operationId: editProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Edit a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Project name within the organization is already taken
    delete:
      summary: Delete a project
      description: To delete a project you must have the admin permission
      operationId: deleteProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/deploymentRule':
    get:
      summary: List project deployment rules
      description: List project deployment rules
      operationId: listProjectDeploymentRules
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Deployment Rule
      responses:
        '200':
          description: Get project deployment rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRuleResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a deployment rule
      description: Create a deployment rule
      operationId: createDeploymentRule
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeploymentRuleRequest'
      responses:
        '201':
          description: Create deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/deploymentRule/{deploymentRuleId}':
    get:
      summary: Get a project deployment rule
      description: Get a project deployment rule
      operationId: getProjectDeploymentRule
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Project Deployment Rule
      responses:
        '200':
          description: Get project deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a project deployment rule
      description: Edit a project deployment rule
      operationId: editProjectDeployemtnRule
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Project Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeploymentRuleRequest'
      responses:
        '200':
          description: Edit a project deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a project deployment rule
      description: Delete a project deployment rule
      operationId: deleteProjectDeploymentRule
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Project Deployment Rule
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/deploymentRule/order':
    put:
      summary: Update deployment rules priority order
      description: Update deployment rules priority order
      operationId: updateDeploymentRulesPriorityOrder
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeploymentRulesPriorityOrderRequest'
      responses:
        '200':
          description: Update deployment rules priority order
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment':
    get:
      summary: List environments
      operationId: listEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      responses:
        '200':
          description: List environments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an environment
      operationId: createEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '201':
          description: Create environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment name within the project is already taken
  '/project/{projectId}/environmentVariable':
    get:
      summary: List project environment variables
      operationId: listProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Environment Variable
      responses:
        '200':
          description: List project environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the project
      description: |
        - Add an environment variable to the project.
          - If the environment variable key already exists, then it will be replaced by the new one.
          - If the environment variable value points toward an existing environment variable key, it will be considered as an alias.
      operationId: createProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from a project
      description: |
        - To delete an environment variable you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the project
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the project level
      description: |
        - Allows you to override at project level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at project level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createProjectEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the project level
      description: |
        - Allows you to add an alias at project level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at project level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - Only 1 alias level is allowed. You can't create an alias on an alias
      operationId: createProjectEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret':
    get:
      summary: List project secrets
      operationId: listProjectSecrets
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Secret
      responses:
        '200':
          description: List project secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the project
      description: |
        - Add a secret to the project.
          - If the secret key already exists, then it will be replaced by the new one.
          - If the secret value points toward an existing secret key, it will be considered as an alias.
      operationId: createProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Added a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret/{secretId}':
    delete:
      summary: Delete a secret from a project
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well  operationId: deleteProjectSecret
      operationId: deleteProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the project
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the project level
      description: |
        - Allows you to override at project level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at project level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createProjectSecretOverride
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the project level
      description: |
        - Allows you to add an alias at project level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at project level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - Only 1 alias level is allowed. You can't create an alias on an alias
      operationId: createProjectSecretAlias
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment/status':
    get:
      summary: List environments statuses
      description: Returns a list of environments with only their id and status.
      operationId: getProjectEnvironmentsStatus
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatusList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment/stats':
    get:
      summary: List total number of services for each environment of the project
      description: 'Returns a list of environment ids, and for each its total numberof services'
      operationId: getProjectEnvironmentServiceNumber
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      responses:
        '200':
          description: Get number of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}':
    get:
      summary: Get environment by ID
      operationId: getEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '200':
          description: Get environment by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment
      description: To edit an environment you must have the admin permission
      operationId: editEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentEditRequest'
      responses:
        '200':
          description: Edit an environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment name within the project is already taken
    delete:
      summary: Delete an environment
      description: To delete an environment you must have the admin permission
      operationId: deleteEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/status':
    get:
      summary: Get environment status
      operationId: getEnvironmentStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploymentRule':
    get:
      summary: Get environment deployment rule
      operationId: getEnvironmentDeploymentRule
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Deployment Rule
      responses:
        '200':
          description: Get deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDeploymentRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploymentRule/{deploymentRuleId}':
    put:
      summary: Edit an environment deployment rule
      operationId: editEnvironmentDeploymentRule
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Environment Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentDeploymentRuleEditRequest'
      responses:
        '200':
          description: Edit environment deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDeploymentRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploy':
    post:
      summary: Deploy environment
      description: This will deploy all the services of this environment to their latest version.
      operationId: deployEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: Deploy environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/stop':
    post:
      summary: Stop environment
      operationId: stopEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: Environment stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment is already stopped or an operation is in progress
  '/environment/{environmentId}/restart':
    post:
      summary: Restart environment
      operationId: restartEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRestartRequest'
      responses:
        '202':
          description: Environment restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/cancelDeployment':
    post:
      summary: Cancel environment deployment
      description: Cancel the current deployment of your environment.
      operationId: cancelEnvironmentDeployment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: environment deployment cancelling has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment deployment is already cancelled or an operation is in progress
  '/environment/{environmentId}/clone':
    post:
      summary: Clone environment
      description: 'You must provide a name. This will create a new environment, with the same configuration, and same applications and databases. Database data is not cloned.'
      operationId: cloneEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneRequest'
      responses:
        '202':
          description: Environment clone has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/application':
    get:
      summary: List applications
      operationId: listApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - name: toUpdate
          in: query
          description: return (or not) results that must be updated
          required: false
          schema:
            type: boolean
            default: false
      tags:
        - Applications
      responses:
        '200':
          description: List applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an application
      operationId: createApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '201':
          description: Create application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application name within the environment is already taken
  '/environment/{environmentId}/application/status':
    get:
      summary: List all environment applications statuses
      description: Returns a list of applications with only their id and status.
      operationId: getEnvironmentApplicationStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/instance':
    get:
      summary: List running instances with CPU and RAM usage for each application
      operationId: getEnvironmentApplicationCurrentInstance
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: Know current resource consumption for each application of the environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApplicationsInstanceResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/currentStorage':
    get:
      summary: List current storage disk usage for each application
      operationId: getEnvironmentApplicationCurrentStorage
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: Current storage disk usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApplicationsStorageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/currentScale':
    get:
      summary: List current scaling information for each application
      description: 'Returns min, max, and running number of instances for each application'
      operationId: getEnvironmentApplicationCurrentScale
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: list applications with current scaling
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApplicationsCurrentScaleResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/supportedLanguage':
    get:
      summary: List supported languages
      description: Returns list of languages supported by Buildpacks.
      operationId: getEnvironmentApplicationSupportedLanguages
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: Supported languages list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApplicationsSupportedLanguageList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/deploy':
    post:
      summary: Deploy applications
      description: Deploy to the last commit the applications you specified.
      operationId: deployAllApplications
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployAllRequest'
      responses:
        '202':
          description: Deployed applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/log':
    get:
      summary: List environment deployment logs
      operationId: listEnvironmentLog
      description: This returns the last 1000 environment deployment logs.
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Logs
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentLogResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploymentHistory':
    get:
      summary: List environment deployments
      description: 'List previous and current environment deployments with the status deployment and the related services. By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listEnvironmentDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Environment Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentHistoryEnvironmentPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Variable
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the environment
      description: |
        - Add an environment variable to the environment.
          - If the environment variable key already exists, then it will be replaced by the new one.
          - If the environment variable value points toward an existing environment variable key, it will be considered as an alias.
      operationId: createEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from an environment
      description: |
        - To delete an environment variable you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the environment
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the environment level
      description: |
        - Allows you to override at environment level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at environment level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createEnvironmentEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the environment level
      description: |
        - Allows you to add an alias at environment level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at environment level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - Only 1 alias level is allowed. You can't create an alias on an alias
      operationId: createEnvironmentEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret':
    get:
      summary: List environment secrets
      operationId: listEnvironmentSecrets
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Secret
      responses:
        '200':
          description: List environment secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the environment
      description: |
        - Add a secret to the environment.
          - If the secret key already exists, then it will be replaced by the new one.
          - If the secret value points toward an existing secret key, it will be considered as an alias.
      operationId: createEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Added a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret/{secretId}':
    delete:
      summary: Delete a secret from the environment
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well  operationId: deleteEnvironmentSecret
      operationId: deleteEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the environment
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the environment level
      description: |
        - Allows you to override at environment level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at environment level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createEnvironmentSecretOverride
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the environment level
      description: |
        - Allows you to add an alias at environment level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at environment level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - Only 1 alias level is allowed. You can't create an alias on an alias
      operationId: createEnvironmentSecretAlias
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/link':
    get:
      summary: List all URLs of the environment
      description: This will return all the custom domains and Qovery autogenerated domain for all the applications within this environment
      operationId: listEnvironmentLinks
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '200':
          description: List links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/databaseConfiguration':
    get:
      summary: 'List eligible database types, versions and modes for the environment'
      operationId: listEnvironmentDatabaseConfig
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: List eligible database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseConfigurationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}':
    get:
      summary: Get application by ID
      operationId: getApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: Get application by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit application
      description: |
        - To edit the application you must have the admin permission.
        - For port edition, if you provide a port id, we will update the corresponding port. If you don't we will create a new one. If you remove a port from the payload, we will delete it.
        - For storage edition, if you provide a storage id, we will update the corresponding storage. If you don't we will create a new one. If you remove a storage from the payload, we will delete it.
      operationId: editApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationEditRequest'
      responses:
        '200':
          description: Edit application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application name within the environment is already taken
    delete:
      summary: Delete application
      description: To delete the application you must have the admin permission
      operationId: deleteApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/status':
    get:
      summary: Get application status
      operationId: getApplicationStatus
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/deploymentRestriction':
    get:
      summary: Get application deployment restrictions
      description: Get application deployment restrictions
      operationId: getApplicationDeploymentRestrictions
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Deployment Restriction
      responses:
        '200':
          description: Get application deployment restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeploymentRestrictionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an application deployment restriction
      description: Create an application deployment restriction
      operationId: createApplicationDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDeploymentRestrictionRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeploymentRestriction'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          description: An application deployment restriction with same properties already exists for this application
  '/application/{applicationId}/deploymentRestriction/{deploymentRestrictionId}':
    put:
      summary: Edit an application deployment restriction
      description: Edit an application deployment restriction
      operationId: editApplicationDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - name: deploymentRestrictionId
          in: path
          description: Deployment Restriction ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Application Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDeploymentRestrictionRequest'
      responses:
        '200':
          description: Edit an application deployment restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeploymentRestriction'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete an application deployment restriction
      description: Delete an application deployment restriction
      operationId: deleteApplicationDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/paths/~1application~1%7BapplicationId%7D~1deploymentRestriction~1%7BdeploymentRestrictionId%7D/put/parameters/1'
      tags:
        - Application Deployment Restriction
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/contributor':
    get:
      summary: List contributors
      operationId: listApplicationContributor
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: List application contributors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/tag':
    get:
      summary: List tags
      operationId: listApplicationTag
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: List application tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add application tag
      operationId: createApplicationTag
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
      responses:
        '201':
          description: Create application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/tag/{tagId}':
    delete:
      summary: Delete application tag
      operationId: deleteApplicationTag
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/tagId'
      tags:
        - Application Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/instance':
    get:
      summary: List currently running instances of the application with their CPU and RAM metrics
      operationId: getApplicationCurrentInstance
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Know current resource consumption of the application for each running instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/currentStorage':
    get:
      summary: List current storage disk usage
      operationId: getApplicationCurrentStorageDisk
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Know current storage disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDiskResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/currentScale':
    get:
      summary: Get current scaling of the application
      description: 'Returns min, max, and running number of instances of the application'
      operationId: getApplicationCurrentScale
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Get current scaling of the application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCurrentScale'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/cpu':
    get:
      summary: Get CPU consumption metric over time for the application
      operationId: getApplicationMetricCpu
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: CPU consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricCPUResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/memory':
    get:
      summary: Get Memory consumption metric over time for the application
      operationId: getApplicationMetricMemory
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Memory consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMemoryResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/healthCheck':
    get:
      summary: Get Health Check latency  metric over time for the application
      description: The value returned corresponds to the 95th centile
      operationId: getApplicationMetricHealthCheck
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Health Check Latency
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricGenericResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/storage':
    get:
      summary: Get Storage consumption metric over time for the application
      operationId: getApplicationMetricStorage
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Storage consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricStorageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/restart':
    get:
      summary: List application restarts
      description: Get application restart message and timestamp.
      operationId: getApplicationMetricRestart
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Restarts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRestart'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/dependency':
    get:
      summary: List application dependencies
      operationId: listApplicationDependency
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Dependency
      responses:
        '200':
          description: List dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/dependency/{targetApplicationId}':
    post:
      summary: Add application dependency to this application.
      description: Add application dependency to this application to prevent this application starting before the linked dependencies
      operationId: createApplicationDependency
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - Dependency
      responses:
        '200':
          description: Add application dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Remove application dependency to this application.
      operationId: removeApplicationDependency
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - Dependency
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/commit':
    get:
      summary: List last commits
      description: Returns list of the last 100 commits made on the repository linked to the application
      operationId: listApplicationCommit
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/startId'
        - $ref: '#/components/parameters/gitCommitId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: List commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/deploy':
    post:
      summary: Deploy application
      description: You must provide a git commit id
      operationId: deployApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
      responses:
        '202':
          description: Deploy application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/application/{applicationId}/stop':
    post:
      summary: Stop application
      operationId: stopApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      responses:
        '202':
          description: Application stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application is already stopped or an operation is in progress
  '/application/{applicationId}/restart':
    post:
      summary: Restart application
      operationId: restartApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      responses:
        '202':
          description: Application restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/application/{applicationId}/deploymentHistory':
    get:
      summary: List application deploys
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter. You can also filter by status (FAILED or SUCCESS), and git_commit_id'
      operationId: listApplicationDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Application Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentHistoryPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/event':
    get:
      summary: List application events
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listApplicationEvent
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Application Event
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Environment Variable
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the application
      description: |
        - Add an environment variable to the application.
      operationId: createApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/import':
    post:
      summary: Import variables
      description: 'Import environment variables in a defined scope, with a defined visibility.'
      operationId: importEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableImportRequest'
      responses:
        '201':
          description: Import environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableImport'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from an application
      description: |
        - To delete an environment variable from an application you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the application
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the application level
      description: |
        - Allows you to override at application level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at application level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createApplicationEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the application level
      description: |
        - Allows you to add an alias at application level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at application level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - Only 1 alias level is allowed. You can't create an alias on an alias
      operationId: createApplicationEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret':
    get:
      summary: List application secrets
      description: 'Secrets are like environment variables, but they are secured and can''t be revealed.'
      operationId: listApplicationSecrets
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Secret
      responses:
        '200':
          description: List secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the application
      description: |
        - Add a secret to the application.
      operationId: createApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Add a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret/{secretId}':
    delete:
      summary: Delete a secret from an application
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well
      operationId: deleteApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the application
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the application level
      description: |
        - Allows you to override at application level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at application level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createApplicationSecretOverride
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the application level
      description: |
        - Allows you to add an alias at application level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at application level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - Only 1 alias level is allowed. You can't create an alias on an alias
      operationId: createApplicationSecretAlias
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/customDomain':
    get:
      summary: List application custom domains
      operationId: listApplicationCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Custom Domain
      responses:
        '200':
          description: List custom domains
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomainResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add custom domain to the application.
      description: Add a custom domain to this application in order not to use qovery autogenerated domain
      operationId: createApplicationCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Custom Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainRequest'
      responses:
        '201':
          description: Added application custom domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/customDomain/{customDomainId}':
    put:
      summary: Edit a Custom Domain
      description: To edit a Custom Domain  you must have the project user permission
      operationId: editCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Custom Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainRequest'
      responses:
        '200':
          description: Edit a CustomDomain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a Custom Domain
      description: To delete an CustomDomain you must have the project user permission
      operationId: deleteCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Custom Domain
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/customDomain/{customDomainId}/status':
    get:
      summary: Get Custom Domain status
      operationId: getCustomDomainStatus
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Custom Domain
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/log':
    get:
      summary: List logs
      operationId: listApplicationLog
      description: This will list the last 1000 logs of the application
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Logs
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/network':
    get:
      summary: Get Application Network information
      description: Get status of the application network settings.
      operationId: getApplicationNetwork
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Configuration
      responses:
        '200':
          description: Network information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNetwork'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit Application Network
      description: Edit the Network settings of the application.
      operationId: editApplicationNetwork
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationNetworkRequest'
      responses:
        '201':
          description: Updated application network setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNetwork'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/database':
    get:
      summary: List linked databases
      operationId: listApplicationDatabase
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Database
      responses:
        '200':
          description: List linked databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/database/{targetDatabaseId}':
    post:
      summary: Link a database to the application
      operationId: attachDatabasetoApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetDatabaseId'
      tags:
        - Application Database
      responses:
        '201':
          description: Linked the database to the application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: This database is already linked to the application
    delete:
      summary: Remove database link to this application.
      operationId: removeDatabaseFromApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetDatabaseId'
      tags:
        - Application Database
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/logicalDatabase':
    get:
      summary: List linked logical databases
      operationId: listApplicationLogicalDatabase
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Database
      responses:
        '200':
          description: List linked databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalDatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/logicalDatabase/{targetLogicalDatabaseId}':
    post:
      summary: Link a logical database to the application
      operationId: attachLogicalDatabasetoApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetLogicalDatabaseId'
      tags:
        - Application Database
      responses:
        '201':
          description: Linked the Logical database to the application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalDatabase'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: This logical database is already linked to the application
    delete:
      summary: Remove logical database link to this application.
      operationId: removeLogicalDatabaseFromApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/targetLogicalDatabaseId'
      tags:
        - Application Database
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/link':
    get:
      summary: List all URLs of the application
      description: This will return all the custom domains and Qovery autogenerated domain for the given application
      operationId: listApplicationLinks
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: List links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/database':
    get:
      summary: List environment databases
      operationId: listDatabase
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: List databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a database
      operationId: createDatabase
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseRequest'
      responses:
        '201':
          description: 'Create database '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Database name within the environment is already taken
  '/environment/{environmentId}/database/status':
    get:
      summary: List all environment databases statuses
      description: Returns a list of databases with only their id and status.
      operationId: getEnvironmentDatabaseStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/database/currentMetric':
    get:
      summary: List current metric consumption for each database
      operationId: listEnvironmentDatabaseCurrentMetric
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: List current metric for each database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDatabasesCurrentMetricResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}':
    get:
      summary: Get database by ID
      operationId: getDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: Get database  by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: 'Edit a database '
      description: To edit a database  you must have the admin permission
      operationId: editDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseEditRequest'
      responses:
        '200':
          description: 'Edit a database '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Database  name within the environment is already taken
    delete:
      summary: 'Delete a database '
      description: To delete a database you must have the admin permission
      operationId: deleteDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/status':
    get:
      summary: Get database status
      operationId: getDatabaseStatus
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/version':
    get:
      summary: List eligible versions for the database
      operationId: listDatabaseVersion
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: List eligible versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/masterCredentials':
    get:
      summary: Get master credentials of the database
      operationId: getDatabaseMasterCredentials
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: get credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit database  master credentials
      operationId: editDatabaseCredentials
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsRequest'
      responses:
        '200':
          description: Edit database credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/logicalDatabase':
    get:
      summary: List logical databases of a database
      description: 'A logical database exists inside a database. The database is a service that exists within an environment, that you can deploy, and that has allocated resources. A database can have several logical databases'
      operationId: listLogicalDatabaseDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Logical Database
      responses:
        '200':
          description: List logical databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalDatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a logical database on the database
      description: 'If you don''t specify credentials, Qovery will autogenerate them.'
      operationId: createLogicalDatabaseOnDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Logical Database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalDatabaseRequest'
      responses:
        '201':
          description: Created database on the database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalDatabase'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Logical Database with this name already exists on the database
  '/database/{databaseId}/application':
    get:
      summary: List applications using the database
      operationId: listDatabaseApplication
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Application
      responses:
        '200':
          description: List linked applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/application/{targetApplicationId}':
    delete:
      summary: 'Remove an application from this database '
      operationId: removeApplicationFromDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - Database Application
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/restart':
    post:
      summary: Retart database
      operationId: restartDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: Database  restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/stop':
    post:
      summary: Stop database
      operationId: stopDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: Database  stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/deploy':
    post:
      summary: 'Deploy database '
      operationId: deployDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: 'Deploy database '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/currentMetric':
    get:
      summary: 'Get current metric consumption of the database '
      operationId: getDatabaseCurrentMetric
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Get database  current metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseCurrentMetric'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/cpu':
    get:
      summary: Get CPU consumption metric over time for the database
      operationId: getDatabaseMetricCpu
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: CPU consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricCPUDatapointResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/memory':
    get:
      summary: Get Memory consumption metric over time for the database
      operationId: getDatabaseMetricMemory
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Memory consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMemoryDatapointResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/storage':
    get:
      summary: Get Storage consumption metric over time for the database
      operationId: getDatabaseMetricStorage
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Storage consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricStorageDatapointResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/healthCheck':
    get:
      summary: Get Health Check latency  metric over time for the database
      description: The value returned corresponds to the 95th centile
      operationId: getDatabaseMetricHealthCheck
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Health Check Latency
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricGenericResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/restart':
    get:
      summary: List database restarts
      description: Get database restart message and timestamp.
      operationId: getDatabaseMetricRestart
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Restarts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRestart'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/backup':
    get:
      summary: List database  backups
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listDatabaseBackup
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Backups
      responses:
        '200':
          description: List backups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: 'Add a backup to the Database '
      operationId: addBackupDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Backups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRequest'
      responses:
        '201':
          description: Added backup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/backup/{backupId}':
    delete:
      summary: Remove database  backup
      operationId: removeDatabaseBackup
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/backupId'
      tags:
        - Backups
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/event':
    get:
      summary: List database  events
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listDatabaseEvent
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Database Event
      responses:
        '200':
          description: List events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/logicalDatabase/{logicalDatabaseId}':
    get:
      summary: Get logical database by ID
      description: 'A logical database exists inside a database. The database is a service that exists within an environment, that you can deploy, and that has allocated resources. A database can have several logical databases'
      operationId: getLogicalDatabase
      parameters:
        - $ref: '#/components/parameters/logicalDatabaseId'
      tags:
        - Logical Database
      responses:
        '200':
          description: Get logical database by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalDatabase'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a logical database
      operationId: editLogicalDatabase
      parameters:
        - $ref: '#/components/parameters/logicalDatabaseId'
      tags:
        - Logical Database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalDatabaseRequest'
      responses:
        '200':
          description: Edit a Logical Database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalDatabase'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a Logical database
      description: To delete a logical database you must have the project user permission
      operationId: deleteLogicalDatabase
      parameters:
        - $ref: '#/components/parameters/logicalDatabaseId'
      tags:
        - Logical Database
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/logicalDatabase/{logicalDatabaseId}/credentials':
    get:
      summary: Get  credentials of the logical database
      operationId: getLogicalDatabaseCredentials
      parameters:
        - $ref: '#/components/parameters/logicalDatabaseId'
      tags:
        - Logical Database
      responses:
        '200':
          description: get credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit logical database credentials
      operationId: editLogicalDatabaseCredentials
      parameters:
        - $ref: '#/components/parameters/logicalDatabaseId'
      tags:
        - Logical Database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsRequest'
      responses:
        '200':
          description: Edit logical database credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/logicalDatabase/{logicalDatabaseId}/application':
    get:
      summary: List linked applications
      operationId: listLogicalDatabaseApplication
      parameters:
        - $ref: '#/components/parameters/logicalDatabaseId'
      tags:
        - Logical Database
      responses:
        '200':
          description: List linked applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /account:
    get:
      summary: Get Account information
      operationId: getAccountInformation
      tags:
        - Account Info
      responses:
        '200':
          description: Get account info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'
        '401':
          $ref: '#/components/responses/401'
  /account/gitAuthProvider:
    get:
      deprecated: true
      summary: Get git provider accounts
      operationId: getGitProviderAccount
      tags:
        - Git repositories
      responses:
        '200':
          description: Get account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitAuthProviderResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/github/repository:
    get:
      deprecated: true
      summary: Get github repositories of the connected user
      operationId: getGithubRepositories
      tags:
        - Git repositories
      responses:
        '200':
          description: Get github repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/github/repository/branch:
    get:
      deprecated: true
      summary: Get github branches of the specified repository
      operationId: getGithubRepositoryBranches
      tags:
        - Git repositories
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
      responses:
        '200':
          description: Get github repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/gitlab/repository:
    get:
      deprecated: true
      summary: Get gitlab repositories of the connected user
      operationId: getGitlabRepositories
      tags:
        - Git repositories
      responses:
        '200':
          description: Get gitlab repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/gitlab/repository/branch:
    get:
      deprecated: true
      summary: Get gitlab branches of the specified repository
      operationId: getGitlabRepositoryBranches
      tags:
        - Git repositories
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository to retrieve the branches
      responses:
        '200':
          description: Get gitlab repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/bitbucket/repository:
    get:
      deprecated: true
      summary: Get bitbucket repositories of the connected user
      operationId: getBitbucketRepositories
      tags:
        - Git repositories
      responses:
        '200':
          description: Get bitbucket repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/bitbucket/repository/branch:
    get:
      deprecated: true
      summary: Get bitbucket branches of the specified repository
      operationId: getBitbucketRepositoryBranches
      tags:
        - Git repositories
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
      responses:
        '200':
          description: Get bitbucket repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/referral:
    get:
      summary: Get your referral information
      operationId: getAccountReferral
      tags:
        - Referral & Rewards
      responses:
        '200':
          description: Get referral info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
        '401':
          $ref: '#/components/responses/401'
  /account/rewardClaim:
    post:
      summary: Claim a reward
      description: A same code can be claimed only 3 times at max
      operationId: postAccountRewardClaim
      tags:
        - Referral & Rewards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardClaim'
      responses:
        '200':
          description: Claim reward
  /admin/userSignUp:
    get:
      summary: Get Sign up information
      description: Retrieve the Sign Up information of the user
      operationId: getUserSignUp
      tags:
        - User Sign Up
      responses:
        '200':
          description: 'If a previous sign up request for the same user has been found, the information is returned in the payload'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUp'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Send Sign Up request
      description: Send a Sign Up request containing the user information
      operationId: createUserSignUp
      tags:
        - User Sign Up
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '200':
          description: Sign up request stored
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  parameters:
    targetLogicalDatabaseId:
      name: targetLogicalDatabaseId
      in: path
      description: Target database ID
      required: true
      schema:
        type: string
        format: uuid
    targetDatabaseId:
      name: targetDatabaseId
      in: path
      description: Target database ID
      required: true
      schema:
        type: string
        format: uuid
    creditCardId:
      name: creditCardId
      in: path
      description: Credit Card ID
      required: true
      schema:
        type: string
        format: uuid
    secretId:
      name: secretId
      in: path
      description: Secret ID
      required: true
      schema:
        type: string
        format: uuid
    projectId:
      name: projectId
      in: path
      description: Project ID
      required: true
      schema:
        type: string
        format: uuid
    organizationId:
      name: organizationId
      in: path
      description: Organization ID
      required: true
      schema:
        type: string
        format: uuid
    environmentVariableId:
      name: environmentVariableId
      in: path
      description: Environment Variable ID
      required: true
      schema:
        type: string
        format: uuid
    clusterId:
      name: clusterId
      in: path
      description: Cluster ID
      required: true
      schema:
        type: string
        format: uuid
    eventId:
      name: eventId
      in: path
      description: Event ID
      required: true
      schema:
        type: string
        format: uuid
    tagId:
      name: tagId
      in: path
      description: Tag ID
      required: true
      schema:
        type: string
        format: uuid
    targetApplicationId:
      name: targetApplicationId
      in: path
      description: Target application ID
      required: true
      schema:
        type: string
        format: uuid
    invoiceId:
      name: invoiceId
      in: path
      description: Invoice ID
      required: true
      schema:
        type: string
        format: uuid
    applicationId:
      name: applicationId
      in: path
      description: Application ID
      required: true
      schema:
        type: string
        format: uuid
    deploymentRuleId:
      name: deploymentRuleId
      in: path
      description: Deployment Rule ID
      required: true
      schema:
        type: string
        format: uuid
    credentialsId:
      name: credentialsId
      in: path
      description: Credentials ID
      required: true
      schema:
        type: string
        format: uuid
    backupId:
      name: backupId
      in: path
      description: Database Backup ID
      required: true
      schema:
        type: string
        format: uuid
    logicalDatabaseId:
      name: logicalDatabaseId
      in: path
      description: Logical Database ID
      required: true
      schema:
        type: string
        format: uuid
    databaseId:
      name: databaseId
      in: path
      description: Database ID
      required: true
      schema:
        type: string
        format: uuid
    customDomainId:
      name: customDomainId
      in: path
      description: Custom Domain ID
      required: true
      schema:
        type: string
        format: uuid
    instanceId:
      name: instanceId
      in: path
      description: Instance ID
      required: true
      schema:
        type: string
        format: uuid
    environmentId:
      name: environmentId
      in: path
      description: Environment ID
      required: true
      schema:
        type: string
        format: uuid
    gitCommitId:
      name: gitCommitId
      in: query
      description: Git Commit ID
      schema:
        type: string
        format: uuid
    startId:
      name: startId
      in: query
      description: Starting point after which to return results
      required: false
      schema:
        type: string
        format: uuid
    tail:
      name: tail
      in: query
      description: Number of last results to return
      required: true
      schema:
        type: integer
        format: int32
    limit:
      name: limit
      in: query
      description: How many items to return at one time (max 100)
      required: false
      schema:
        type: integer
        format: int32
    lastId:
      name: lastId
      in: query
      description: ID of the last object after which to return all results
      required: true
      schema:
        type: string
        format: uuid
    status:
      name: status
      in: query
      description: status
      schema:
        type: string
    lastSeconds:
      name: lastSeconds
      in: query
      description: Up to how many seconds in the past to ask analytics results
      required: true
      schema:
        type: number
  schemas:
    ApplicationGitRepositoryRequest:
      type: object
      required:
        - provider
        - owner
        - name
        - url
      properties:
        url:
          type: string
          description: application git repository URL
          example: 'https://github.com/Qovery/simple-node-app'
        branch:
          type: string
          description: |
            Name of the branch to use. This is optional
            If not specified, then the branch used is the `main` or `master` one
          example: feat/text_xxx
        root_path:
          type: string
          default: /
          description: indicates the root path of the application.
    OrganizationRequest:
      type: object
      required:
        - name
        - plan
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
        plan:
          $ref: '#/components/schemas/PlanEnum'
        website_url:
          type: string
          nullable: true
        repository:
          type: string
          nullable: true
        logo_url:
          type: string
          nullable: true
        icon_url:
          type: string
          nullable: true
    MetricCPU:
      type: object
      required:
        - instance_name
        - data
      properties:
        instance_name:
          type: string
          example: instance 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricCPUDatapoint'
    ApplicationStorageRequest:
      type: object
      properties:
        storage:
          type: array
          items:
            type: object
            required:
              - type
              - size
              - mount_point
            properties:
              type:
                $ref: '#/components/schemas/StorageTypeEnum'
              size:
                type: integer
                description: unit is GB
                example: 16
              mount_point:
                type: string
                example: /mnt/images
    ClusterStatusResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterStatus'
    ClusterInstanceTypeResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            required:
              - type
              - name
              - cpu
              - ram_in_gb
            properties:
              type:
                type: string
                example: T3A_XLARGE
              name:
                type: string
                example: t3a.xlarge
              cpu:
                type: integer
                example: 2
              ram_in_gb:
                type: integer
                example: 8
    MetricGeneric:
      type: object
      required:
        - instance_name
        - data
      properties:
        instance_name:
          type: string
          example: instance 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricGenericDatapoint'
    ApplicationStorage:
      type: object
      properties:
        storage:
          type: array
          items:
            type: object
            required:
              - type
              - size
              - mount_point
            properties:
              id:
                type: string
                format: uuid
              type:
                $ref: '#/components/schemas/StorageTypeEnum'
              size:
                type: integer
                description: unit is GB
                example: 16
              mount_point:
                type: string
                example: /mnt/images
    ApplicationDependencyRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Set application ID
          format: uuid
    Organization:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/OrganizationRequest'
        - type: object
          properties:
            owner:
              type: string
              format: uuid
              description: uuid of the user owning the organization
    MetricStorageDatapoint:
      type: object
      required:
        - created_at
        - requested_in_mb
        - consumed_in_mb
        - consumed_in_percent
      properties:
        created_at:
          type: string
          format: date-time
        requested_in_gb:
          type: integer
        consumed_in_gb:
          type: number
        consumed_in_percent:
          type: number
    ProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
    BillingInfoRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
        - address
        - zip
        - country_code
        - city
      properties:
        first_name:
          type: string
          example: Forrest
        last_name:
          type: string
          example: Gump
        email:
          type: string
          format: email
          example: forrest@gump.com
          description: 'email used for billing, and to receive all invoices by email'
        address:
          type: string
          example: 21 Jenny Street
        city:
          type: string
          example: Greenbow
        zip:
          type: string
          example: '36744'
        state:
          type: string
          example: Alabama
          description: only for US
        country_code:
          type: string
          description: ISO code of the country
          example: US
        company:
          type: string
          description: name of the company to bill
        vat_number:
          type: string
    ProjectDeploymentRule:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ProjectDeploymentRuleRequest'
        - type: object
          properties:
            priority_index:
              type: integer
              description: used to select the first deployment rule to match new created environments
              nullable: false
    ProjectDeploymentRulesPriorityOrderRequest:
      type: object
      properties:
        project_deployment_rule_ids_in_order:
          type: array
          items:
            type: string
            format: uuid
            description: project deployment rule id
    DeployAllRequest:
      type: object
      properties:
        applications:
          type: array
          items:
            type: object
            required:
              - application_id
              - git_commit_id
            properties:
              application_id:
                type: string
                format: uuid
                description: id of the application to be deployed.
              git_commit_id:
                type: string
                description: Commit ID to deploy.
    ProjectResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    ProjectStatsResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectStats'
    Value:
      type: object
      required:
        - value
      properties:
        value:
          type: string
    Database:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/DatabaseRequest'
        - type: object
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            host:
              type: string
            port:
              type: integer
              example: 5432
            maximum_cpu:
              type: integer
              description: Maximum cpu that can be allocated to the database based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
              default: 250
              example: 1250
            maximum_memory:
              type: integer
              description: Maximum memory that can be allocated to the database based on organization cluster configuration. unit is MB. 1024 MB = 1GB
              default: 256
              example: 1024
            disk_encrypted:
              type: boolean
              description: indicates if the database disk is encrypted or not
    SecretRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: key is case sensitive
        value:
          type: string
          description: value of the secret. Clear value will never be returned
    Key:
      type: object
      required:
        - key
      properties:
        key:
          type: string
    EnvironmentApplicationsCurrentScaleResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentApplicationsCurrentScale'
    MemberResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    DatabaseRequest:
      type: object
      required:
        - name
        - type
        - version
        - mode
      properties:
        name:
          type: string
          description: name is case insensitive
        type:
          $ref: '#/components/schemas/DatabaseTypeEnum'
        version:
          type: string
          example: '10.1'
        mode:
          $ref: '#/components/schemas/DatabaseModeEnum'
        accessibility:
          $ref: '#/components/schemas/DatabaseAccessibilityEnum'
        cpu:
          type: integer
          description: unit is millicores (m). 1000m = 1 cpu
          default: 250
          example: 1250
        memory:
          type: integer
          description: unit is MB. 1024 MB = 1GB
          default: 256
          example: 1024
        storage:
          type: integer
          description: unit is MB
          default: 10240
    PaginationData:
      type: object
      required:
        - page
        - page_size
      properties:
        page:
          type: number
          example: 1
        page_size:
          type: number
          example: 20
    DatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Database'
    Link:
      type: object
      properties:
        url:
          type: string
    MetricStorageDatapointResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricStorageDatapoint'
    DeploymentHistoryEnvironment:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/StateEnum'
            applications:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryApplication'
            databases:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryDatabase'
    Log:
      type: object
      required:
        - id
        - created_at
        - message
      properties:
        id:
          type: string
          format: uuid
          example: 4aa76065-68b3-41ef-aa1d-46be67012bef
        created_at:
          type: string
          format: date-time
          example: '2022-04-19T15:36:12.024Z'
        message:
          type: string
        pod_name:
          type: string
          example: app-z4aa76065-57d84cbbdb-xcg8v
        application_commit_id:
          type: string
          example: 2bfd61fe45946c74f318050b26210be486c43a39
    MetricMemory:
      type: object
      required:
        - instance_name
        - data
      properties:
        instance_name:
          type: string
          example: instance 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricMemoryDatapoint'
    EnvironmentTotalNumber:
      type: object
      required:
        - number
      properties:
        environment_total_number:
          type: number
    EnvironmentApplicationsStorage:
      type: object
      required:
        - application
        - instances
      properties:
        application:
          type: string
          format: uuid
        disks:
          type: array
          items:
            $ref: '#/components/schemas/StorageDisk'
    MetricCPUDatapoint:
      type: object
      required:
        - created_at
        - requested_in_float
        - consumed_in_number
        - consumed_in_percent
      properties:
        created_at:
          type: string
          format: date-time
        requested_in_number:
          type: number
        consumed_in_number:
          type: number
        consumed_in_percent:
          type: number
    Version:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: '10.1'
    DatabaseEditRequest:
      type: object
      properties:
        name:
          type: string
          description: name is case-insensitive
        version:
          type: string
          example: '10.1'
        accessibility:
          $ref: '#/components/schemas/DatabaseAccessibilityEnum'
        cpu:
          type: integer
          description: unit is millicores (m). 1000m = 1 cpu
          default: 250
          example: 1250
        memory:
          type: integer
          description: unit is MB. 1024 MB = 1GB
          default: 256
          example: 1024
        storage:
          type: integer
          description: unit is GB
          example: 4
    DeploymentHistoryPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistory'
    ClusterCredentialsRequest:
      $ref: '#/components/schemas/CluserCredentials'
    Member:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - email
          properties:
            name:
              type: string
            nickname:
              type: string
            email:
              type: string
              format: email
            profile_picture_url:
              type: string
              format: uri
            last_activity_at:
              type: string
              format: date-time
              description: last time the user was connected
            role:
              $ref: '#/components/schemas/InviteMemberRoleEnum'
    ClusterStatus:
      type: object
      properties:
        cluster_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/StateEnum'
        is_deployed:
          type: boolean
    InvoiceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    EnvironmentApplicationsInstanceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            required:
              - application
              - instances
            properties:
              application:
                type: string
                format: uuid
              instances:
                type: array
                items:
                  $ref: '#/components/schemas/Instance'
    Invoice:
      allOf:
        - $ref: '#/components/schemas/Cost'
        - type: object
          required:
            - id
            - created_at
            - status
            - total_in_cents
            - total
            - currency_code
          properties:
            id:
              type: string
              format: uuid
            created_at:
              type: string
              format: date-time
            status:
              $ref: '#/components/schemas/InvoiceStatusEnum'
    EnvironmentLog:
      type: object
      required:
        - id
        - created_at
        - service
        - status
        - message
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        scope:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/EnvironmentLogTypeEnum'
            name:
              type: string
            id:
              type: string
              format: uuid
        state:
          $ref: '#/components/schemas/StatusKindEnum'
        message:
          type: string
          nullable: true
          description: Log message
        execution_id:
          type: string
          description: Only for errors. Helps Qovery team to investigate.
        hint:
          type: string
          example: only for errors. it gives a possible action to the user -- Markdown can be injected
    GitAuthProvider:
      type: object
      required:
        - name
        - owner
      properties:
        id:
          type: string
        name:
          type: string
          example: GITHUB
        owner:
          type: string
          example: John Doe
        use_bot:
          type: boolean
    OrganizationEditRequest:
      type: object
      required:
        - name
        - plan
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
        website_url:
          type: string
          nullable: true
        repository:
          type: string
          nullable: true
        logo_url:
          type: string
          nullable: true
        icon_url:
          type: string
          nullable: true
    ClusterCloudProviderInfoRequest:
      type: object
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProviderEnum'
        credentials:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
        region:
          type: string
    MetricGenericDatapoint:
      type: object
      required:
        - created_at
        - value
      properties:
        created_at:
          type: string
          readOnly: true
          format: date-time
        value:
          type: number
    ServiceTotalNumber:
      type: object
      required:
        - number
      properties:
        service_total_number:
          type: number
    BackupRequest:
      type: object
      required:
        - name
        - message
      properties:
        name:
          type: string
        message:
          type: string
    DeployRequest:
      type: object
      required:
        - git_commit_id
      properties:
        git_commit_id:
          type: string
          description: Commit ID to deploy
    AccountInfoEditRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        profile_picture_url:
          type: string
    BackupResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Backup'
    ProjectCurrentCostResponseList:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCurrentCost'
    Healthcheck:
      type: object
      properties:
        protocol:
          type: string
          enum:
            - TCP
            - HTTP
            - None
        value:
          type: string
    Commit:
      type: object
      required:
        - git_commit_id
        - created_at
        - author_name
        - message
        - tag
      properties:
        created_at:
          type: string
          format: date-time
        git_commit_id:
          type: string
        tag:
          type: string
          example: v2.1.1
        message:
          type: string
        author_name:
          type: string
        author_avatar_url:
          type: string
        commit_page_url:
          type: string
    GenericObjectCurrentCost:
      type: object
      required:
        - id
        - name
        - consumed_time_in_seconds
        - cost
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        consumed_time_in_seconds:
          type: integer
          example: 3600
        cost:
          $ref: '#/components/schemas/Cost'
    ApplicationRequest:
      allOf:
        - $ref: '#/components/schemas/ApplicationStorageRequest'
        - $ref: '#/components/schemas/ApplicationPortRequest'
        - type: object
          required:
            - name
            - git_repository
          properties:
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this application
              nullable: true
            git_repository:
              $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
            build_mode:
              $ref: '#/components/schemas/BuildModeEnum'
            dockerfile_path:
              type: string
              description: The path of the associated Dockerfile. Only if you are using build_mode = DOCKER
              nullable: true
            buildpack_language:
              $ref: '#/components/schemas/BuildPackLanguageEnum'
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              default: 250
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              default: 256
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no application running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthcheck:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Specify if the environment preview option is activated or not for this application.
                If activated, a preview environment will be automatically cloned at each pull request.
              default: true
    Base:
      type: object
      required:
        - id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: date-time
        updated_at:
          type: string
          readOnly: true
          format: date-time
    ApplicationEditRequest:
      allOf:
        - $ref: '#/components/schemas/ApplicationStorage'
        - $ref: '#/components/schemas/ApplicationPort'
        - type: object
          properties:
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this application
            git_repository:
              $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
            build_mode:
              $ref: '#/components/schemas/BuildModeEnum'
            dockerfile_path:
              type: string
              description: The path of the associated Dockerfile
            buildpack_language:
              $ref: '#/components/schemas/BuildPackLanguageEnum'
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              default: 250
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              default: 256
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no application running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthcheck:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Specify if the environment preview option is activated or not for this application.
                If activated, a preview environment will be automatically cloned at each pull request.
              default: true
            sticky_session:
              type: boolean
              description: |
                Specify if the sticky session option (also called persistant session) is activated or not for this application.
                If activated, user will be redirected by the load balancer to the same instance each time he access to the application.
              default: false
    DeploymentHistoryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentHistory'
    BudgetThreshold:
      allOf:
        - $ref: '#/components/schemas/Budget'
    EventResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    DeploymentHistory:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            commit:
              $ref: '#/components/schemas/Commit'
            status:
              $ref: '#/components/schemas/DeploymentHistoryStatusEnum'
    DeploymentHistoryApplication:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            commit:
              $ref: '#/components/schemas/Commit'
            status:
              $ref: '#/components/schemas/StateEnum'
    DeploymentHistoryDatabase:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            status:
              $ref: '#/components/schemas/StateEnum'
    OrganizationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    ClusterRequest:
      allOf:
        - $ref: '#/components/schemas/ClusterBase'
        - $ref: '#/components/schemas/ClusterFeatureRequest'
    ClusterCloudProviderInfo:
      type: object
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProviderEnum'
        credentials:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
        region:
          type: string
    Application:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ApplicationStorage'
        - $ref: '#/components/schemas/ApplicationPort'
        - type: object
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            git_repository:
              $ref: '#/components/schemas/ApplicationGitRepository'
            maximum_cpu:
              type: integer
              description: Maximum cpu that can be allocated to the application based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
              default: 250
              example: 1250
            maximum_memory:
              type: integer
              description: Maximum memory that can be allocated to the application based on organization cluster configuration. unit is MB. 1024 MB = 1GB
              default: 256
              example: 1024
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this application
              nullable: true
            build_mode:
              $ref: '#/components/schemas/BuildModeEnum'
            dockerfile_path:
              type: string
              description: The path of the associated Dockerfile. Only if you are using build_mode = DOCKER
              nullable: true
            buildpack_language:
              $ref: '#/components/schemas/BuildPackLanguageEnum'
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              default: 250
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              default: 256
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no application running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthcheck:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Specify if the environment preview option is activated or not for this application.
                If activated, a preview environment will be automatically cloned at each pull request.
              default: true
    CustomDomainRequest:
      type: object
      required:
        - domain
      properties:
        domain:
          type: string
          description: your custom domain
          example: my.domain.tld
    EnvironmentLogPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/EnvironmentLog'
    ProjectDeploymentRuleRequest:
      type: object
      required:
        - name
        - mode
        - cluster_id
        - timezone
        - start_time
        - stop_time
        - weekdays
        - wildcard
      properties:
        name:
          type: string
          description: name is case insensitive
          example: project-rule
        description:
          type: string
          nullable: true
          example: description project rule
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
        cluster_id:
          type: string
          format: uuid
        auto_deploy:
          type: boolean
          default: false
        auto_stop:
          type: boolean
          default: false
        auto_delete:
          type: boolean
          default: false
        timezone:
          type: string
          example: UTC
        start_time:
          type: string
          format: date-time
          example: 1970-01-01T08:00:00.000Z
        stop_time:
          type: string
          format: date-time
          example: 1970-01-01T19:00:00.000Z
        weekdays:
          type: array
          items:
            $ref: '#/components/schemas/WeekdayEnum'
        wildcard:
          type: string
          default: ''
          description: wildcard pattern composed of '?' and/or '*' used to target new created environments
    EnvironmentStats:
      allOf:
        - $ref: '#/components/schemas/ReferenceObject'
        - $ref: '#/components/schemas/ServiceTotalNumber'
    Name:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    UnexpectedError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    InstanceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
    ClusterReadinessStatus:
      type: object
      properties:
        is_ready:
          type: boolean
    CustomDomain:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/CustomDomainRequest'
        - type: object
          properties:
            validation_domain:
              type: string
              description: URL provided by Qovery. You must create a CNAME on your DNS provider using that URL
            status:
              type: string
              enum:
                - deploying
                - checking
                - ready
                - error
    AccountInfo:
      type: object
      required:
        - username
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        nickname:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        profile_picture_url:
          type: string
    LogicalDatabaseRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
    Service:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - id
          properties:
            type:
              $ref: '#/components/schemas/ServiceTypeEnum'
            name:
              type: string
              description: name of the service
            id:
              type: string
              description: 'uuid of the associated service (application, database, job, gateway...)'
              format: uuid
            deployed_commit_id:
              type: string
              description: Git commit ID corresponding to the deployed version of the application
            last_updated_by:
              type: string
              format: uuid
              description: uuid of the user that made the last update
            consumed_resources_in_percent:
              type: number
              description: global overview of resources consumption of the service
            service_typology:
              type: string
              example: container
              description: 'describes the typology of service (container, postgresl, redis...)'
            service_version:
              type: string
              description: for databases this field exposes the database version
              example: v12
            to_update:
              type: boolean
    ApplicationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    ApplicationNetwork:
      type: object
      properties:
        sticky_session:
          type: boolean
          description: |
            Specify if the sticky session option (also called persistant session) is activated or not for this application.
            If activated, user will be redirected by the load balancer to the same instance each time he access to the application. 
          default: false
    ApplicationNetworkRequest:
      type: object
      properties:
        sticky_session:
          type: boolean
          description: |
            Specify if the sticky session option (also called persistant session) is activated or not for this application.
            If activated, user will be redirected by the load balancer to the same instance each time he access to the application. 
          default: false
    ApplicationDeploymentRestrictionRequest:
      type: object
      required:
        - mode
        - type
        - value
      properties:
        mode:
          $ref: '#/components/schemas/DeploymentRestrictionModeEnum'
        type:
          $ref: '#/components/schemas/DeploymentRestrictionTypeEnum'
        value:
          type: string
          description: 'For `PATH` restrictions, the value must not start with `/`'
          example: application1/src/
    ApplicationDeploymentRestriction:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ApplicationDeploymentRestrictionRequest'
    ApplicationDeploymentRestrictionResponseList:
      type: object
      properties:
        deployment_restrictions:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDeploymentRestriction'
    RemainingCredits:
      allOf:
        - $ref: '#/components/schemas/Cost'
        - type: object
    BillingStatus:
      type: object
      properties:
        is_valid:
          type: boolean
        message:
          type: string
    ServiceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    EnvironmentDeploymentRule:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - timezone
            - start_time
            - stop_time
            - weekdays
          properties:
            auto_deploy:
              type: boolean
              default: true
            auto_stop:
              type: boolean
              default: false
            auto_delete:
              type: boolean
              default: false
            auto_preview:
              type: boolean
              default: false
            timezone:
              type: string
              example: UTC
            start_time:
              type: string
              format: date-time
              example: 1970-01-01T08:00:00.000Z
            stop_time:
              type: string
              format: date-time
              example: 1970-01-01T19:00:00.000Z
            weekdays:
              type: array
              items:
                $ref: '#/components/schemas/WeekdayEnum'
    MetricMemoryDatapoint:
      type: object
      required:
        - created_at
        - requested_in_mb
        - consumed_in_mb
        - consumed_in_percent
      properties:
        created_at:
          type: string
          format: date-time
        requested_in_mb:
          type: integer
        consumed_in_mb:
          type: integer
        consumed_in_percent:
          type: number
    EnvironmentResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
    LogicalDatabase:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/LogicalDatabaseRequest'
        - type: object
          properties:
            database:
              $ref: '#/components/schemas/ReferenceObject'
    CurrentCost:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/PlanEnum'
        remaining_trial_day:
          type: integer
          description: number of days remaining before the end of the trial period
        remaining_credits:
          $ref: '#/components/schemas/RemainingCredits'
        cost:
          $ref: '#/components/schemas/Cost'
    PaidUsage:
      type: object
      properties:
        max_deployments_per_month:
          type: integer
        consumed_deployments:
          type: integer
        monthly_plan_cost:
          type: number
        monthly_plan_cost_in_cents:
          type: integer
        remaining_deployments:
          type: integer
        deployments_exceeded:
          type: boolean
        renewal_at:
          type: string
          readOnly: true
          format: date-time
    CommunityUsage:
      allOf:
        - $ref: '#/components/schemas/ProjectCurrentCostResponseList'
    DatabaseVersionMode:
      type: object
      properties:
        name:
          type: string
          example: '10.1'
        supported_mode:
          $ref: '#/components/schemas/DatabaseModeEnum'
    Project:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            description:
              type: string
            organization:
              $ref: '#/components/schemas/ReferenceObject'
    GitAuthProviderResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitAuthProvider'
    LinkResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ClusterRegion:
      type: object
      required:
        - name
        - country_code
        - country
        - city
      properties:
        name:
          type: string
        country_code:
          type: string
        country:
          type: string
        city:
          type: string
    CredentialsRequest:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    Budget:
      type: object
      properties:
        total_in_cents:
          type: integer
          example: 30000
        total:
          type: number
          example: 300
        currency_code:
          type: string
          example: USD
    CreditCard:
      type: object
      required:
        - id
        - created_at
        - expiry_month
        - expiry_year
        - last_digit
        - is_expired
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        expiry_month:
          type: integer
          example: 6
        expiry_year:
          type: integer
          example: 2025
        last_digit:
          type: string
          example: '7890'
        is_expired:
          type: boolean
    BillingPeriod:
      allOf:
        - $ref: '#/components/schemas/BillingStart'
        - $ref: '#/components/schemas/BillingEnd'
    MetricStorage:
      type: object
      required:
        - instance_name
        - data
      properties:
        storage_id:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricStorageDatapoint'
    EnvironmentVariableEditRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: key is case sensitive
        value:
          type: string
          description: value of the env variable.
    EnvironmentLogResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentLog'
    DeploymentHistoryEnvironmentPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryEnvironment'
    AliasedSecret:
      type: object
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
          example: QOVERY_DATABASE_PSQL_NAME
        scope:
          $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
    EnvironmentVariableResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
    VariableImportRequest:
      type: object
      required:
        - vars
        - overwrite
      properties:
        overwrite:
          type: boolean
          default: false
        vars:
          type: array
          items:
            type: object
            required:
              - name
              - value
              - scope
              - is_secret
            properties:
              name:
                type: string
              value:
                type: string
              scope:
                $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
              is_secret:
                type: boolean
    VariableImport:
      type: object
      required:
        - total_variables_to_import
        - successful_imported_variables
      properties:
        total_variables_to_import:
          type: number
        successful_imported_variables:
          type: array
          items:
            type: object
            required:
              - name
              - scope
              - is_secret
            properties:
              name:
                type: string
              value:
                type: string
                description: Optional if the variable is secret
              scope:
                $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
              is_secret:
                type: boolean
    ReferenceObject:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
    LogResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Log'
    MetricCPUDatapointResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricCPUDatapoint'
    MetricGenericResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricGeneric'
    EnvironmentRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        cluster:
          type: string
          format: uuid
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
    CloneRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        cluster_id:
          type: string
          format: uuid
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
    MetricMemoryDatapointResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricMemoryDatapoint'
    ClusterBase:
      type: object
      required:
        - name
        - cloud_provider
        - region
      properties:
        name:
          type: string
          description: name is case-insensitive
        description:
          type: string
        cloud_provider:
          $ref: '#/components/schemas/CloudProviderEnum'
        region:
          type: string
        auto_update:
          type: boolean
        cpu:
          type: integer
          description: unit is millicores (m). 1000m = 1 cpu
          default: 250
          example: 1250
        memory:
          type: integer
          description: unit is MB. 1024 MB = 1GB
          default: 256
          example: 1024
        min_running_nodes:
          type: integer
          default: 1
        max_running_nodes:
          type: integer
          default: 1
        instance_type:
          type: string
          example: T3A_LARGE
          description: 'the instance type to be used for this cluster. The list of values can be retrieved via the endpoint /{CloudProvider}/instanceType'
        disk_size:
          type: integer
          example: 50
          default: 20
          description: the disk size to be used for the node configuration
    Cluster:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ClusterBase'
        - type: object
          properties:
            estimated_cloud_provider_cost:
              type: integer
              description: 'This is an estimation of the cost this cluster will represent on your cloud proider bill, based on your current configuration'
            status:
              $ref: '#/components/schemas/StateEnum'
            features:
              type: array
              items:
                $ref: '#/components/schemas/ClusterFeature'
            has_access:
              type: boolean
            version:
              type: string
            is_default:
              type: boolean
    BackupPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - $ref: '#/components/schemas/BackupResponseList'
    TagRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    RewardClaim:
      type: object
      properties:
        type:
          type: string
          enum:
            - INVITATION
        code:
          type: string
          example: xDowkWEl
    ClusterRegionResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterRegion'
    Credentials:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    LogicalDatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/LogicalDatabase'
    EnvironmentVariableRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: key is case sensitive
        value:
          type: string
          description: value of the env variable.
    ClusterCredentials:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ProjectDeploymentRuleResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDeploymentRule'
    MetricCPUResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricCPU'
    DatabaseConfigurationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseConfiguration'
    ProjectStats:
      allOf:
        - $ref: '#/components/schemas/ReferenceObject'
        - $ref: '#/components/schemas/ServiceTotalNumber'
        - $ref: '#/components/schemas/EnvironmentTotalNumber'
    EnvironmentRestartRequest:
      type: object
      properties:
        restart_db:
          type: boolean
          default: false
    BillingEnd:
      type: object
      properties:
        billing_ended_on:
          type: string
          format: date-time
    SecretResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Secret'
    Environment:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - name
            - cloud_provider
            - mode
            - cluster_id
          properties:
            name:
              type: string
              description: name is case insensitive
            project:
              $ref: '#/components/schemas/ReferenceObject'
            last_updated_by:
              type: string
              format: uuid
              description: uuid of the user that made the last update
            cloud_provider:
              type: object
              properties:
                provider:
                  type: string
                  example: aws
                cluster:
                  type: string
                  example: us-east-2
            mode:
              $ref: '#/components/schemas/EnvironmentModeEnum'
            cluster_id:
              type: string
              format: uuid
    Cost:
      type: object
      required:
        - total_in_cents
        - total
        - currency_code
      properties:
        total_in_cents:
          type: integer
          example: 30000
        total:
          type: number
          example: 300
        currency_code:
          type: string
          example: USD
    MetricMemoryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricMemory'
    CreditCardRequest:
      type: object
      required:
        - number
        - cvv
        - expiry_month
        - expiry_year
      properties:
        number:
          type: string
        cvv:
          type: string
        expiry_month:
          type: integer
          example: 6
        expiry_year:
          type: integer
          example: 2025
    CustomDomainResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomDomain'
    EnvironmentEditRequest:
      type: object
      properties:
        name:
          type: string
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
    OrganizationCurrentCost:
      allOf:
        - $ref: '#/components/schemas/CurrentCost'
        - type: object
          properties:
            paid_usage:
              $ref: '#/components/schemas/PaidUsage'
            community_usage:
              $ref: '#/components/schemas/CommunityUsage'
    GitRepositoryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitRepository'
    ApplicationPort:
      type: object
      properties:
        ports:
          type: array
          items:
            type: object
            required:
              - internal_port
              - publicly_accessible
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                nullable: true
              internal_port:
                type: integer
                example: 8080
                description: The listening port of your application
              external_port:
                type: integer
                example: 8080
                description: The exposed port for your application. This is optional. If not set a default port will be used.
              publicly_accessible:
                type: boolean
                description: Expose the port to the world
              protocol:
                $ref: '#/components/schemas/PortProtocolEnum'
    OrganizationCreditCodeRequest:
      type: object
      properties:
        code:
          type: string
    EnvironmentStatsResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentStats'
    EnvironmentStatusList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Status'
    Secret:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - scope
          properties:
            key:
              type: string
              description: key is case sensitive
            overridden_secret:
              $ref: '#/components/schemas/OverriddenSecret'
            aliased_secret:
              $ref: '#/components/schemas/AliasedSecret'
            scope:
              $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
    Status:
      type: object
      required:
        - state
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/StateEnum'
        message:
          type: string
          nullable: true
          description: message related to the state
        service_deployment_status:
          $ref: '#/components/schemas/ServiceDeploymentStatusEnum'
    EnvironmentDatabasesCurrentMetric:
      type: object
      properties:
        database:
          type: string
          format: uuid
        cpu:
          type: object
          properties:
            requested_in_float:
              type: number
            consumed_in_number:
              type: number
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        memory:
          type: object
          properties:
            requested_in_mb:
              type: integer
            consumed_in_mb:
              type: integer
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        storage:
          type: object
          properties:
            requested_in_gb:
              type: integer
            consumed_in_gb:
              type: integer
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    Backup:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/BackupRequest'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/Status'
    DeploymentRuleRequest:
      type: object
      required:
        - name
        - mode
        - cluster
        - auto_stop
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
        cluster:
          type: string
          format: uuid
        auto_deploy:
          type: boolean
          default: true
        auto_stop:
          type: boolean
          default: false
        timezone:
          type: string
          nullable: false
          default: Europe/London
          description: specify value only if auto_stop = false
        start_time:
          type: string
          format: date-time
          nullable: true
          description: specify value only if auto_stop = false
        stop_time:
          type: string
          format: date-time
          nullable: true
          description: specify value only if auto_stop = false
        weekdays:
          type: array
          nullable: true
          description: specify value only if auto_stop = false
          items:
            $ref: '#/components/schemas/WeekdayEnum'
    ProjectCurrentCost:
      allOf:
        - $ref: '#/components/schemas/GenericObjectCurrentCost'
        - type: object
          properties:
            environments:
              type: array
              items:
                $ref: '#/components/schemas/GenericObjectCurrentCost'
    EnvironmentVariable:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/EnvironmentVariableRequest'
        - type: object
          required:
            - scope
          properties:
            overridden_variable:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                key:
                  type: string
                value:
                  type: string
                scope:
                  $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
            aliased_variable:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                key:
                  type: string
                  example: QOVERY_DATABASE_PSQL_NAME
                value:
                  type: string
                scope:
                  $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
            scope:
              $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
            service_name:
              type: string
    Referral:
      type: object
      properties:
        total_invited:
          type: integer
          example: 2
        invitation_link:
          type: string
          example: 'https://join.qovery.com/xDowkWEl'
    BillingStart:
      type: object
      properties:
        billing_started_on:
          type: string
          format: date-time
    UserResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    CreditCardResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CreditCard'
    ReferenceObjectStatus:
      allOf:
        - $ref: '#/components/schemas/ReferenceObject'
        - $ref: '#/components/schemas/Status'
    ApplicationPortRequest:
      type: object
      properties:
        ports:
          type: array
          items:
            type: object
            required:
              - internal_port
              - publicly_accessible
            properties:
              name:
                type: string
                nullable: true
              internal_port:
                type: integer
                example: 8080
                description: The listening port of your application
              external_port:
                type: integer
                example: 8080
                description: The exposed port for your application. This is optional. If not set a default port will be used.
              publicly_accessible:
                type: boolean
                description: Expose the port to the world
              protocol:
                $ref: '#/components/schemas/PortProtocolEnum'
    ClusterCredentialsResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterCredentials'
    CommitPaginatedResponseList:
      allOf:
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Commit'
        - $ref: '#/components/schemas/PaginationData'
    ClusterResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
    OverriddenSecret:
      type: object
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        scope:
          $ref: '#/components/schemas/EnvironmentVariableScopeEnum'
    BillingInfo:
      type: object
      required:
        - first_name
        - last_name
        - email
        - address
        - zip
        - country_code
        - city
      properties:
        first_name:
          type: string
          example: Forrest
        last_name:
          type: string
          example: Gump
        email:
          type: string
          format: email
          example: forrest@gump.com
          description: 'email used for billing, and to receive all invoices by email'
        address:
          type: string
          example: 21 Jenny Street
        city:
          type: string
          example: Greenbow
        zip:
          type: string
          example: '36744'
        state:
          type: string
          example: Alabama
          description: only for US
        country_code:
          type: string
          description: ISO code of the country
          example: US
        company:
          type: string
          description: name of the company to bill
        vat_number:
          type: string
    EnvironmentDeploymentRuleEditRequest:
      type: object
      required:
        - timezone
        - start_time
        - stop_time
        - weekdays
      properties:
        auto_deploy:
          type: boolean
          default: true
        auto_delete:
          type: boolean
          default: false
        auto_stop:
          type: boolean
          default: false
        timezone:
          type: string
          example: UTC
        start_time:
          type: string
          format: date-time
          example: 1970-01-01T08:00:00.000Z
        stop_time:
          type: string
          format: date-time
          example: 1970-01-01T19:00:00.000Z
        weekdays:
          type: array
          items:
            $ref: '#/components/schemas/WeekdayEnum'
    ReferenceObjectStatusResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceObjectStatus'
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: date-time
        updated_at:
          type: string
          readOnly: true
          format: date-time
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        profile_picture_url:
          type: string
          format: uri
    StorageDisk:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        storage_id:
          type: string
        requested_in_gb:
          type: integer
        consumed_in_gb:
          type: number
        consumed_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    ApplicationGitRepository:
      type: object
      properties:
        has_access:
          type: boolean
        provider:
          $ref: '#/components/schemas/GitProviderEnum'
        owner:
          type: string
          example: John Doe
        url:
          type: string
          format: uri
        name:
          type: string
          description: repository name
          example: simple-node-app
        branch:
          type: string
        root_path:
          type: string
        deployed_commit_id:
          type: string
          description: Git commit ID corresponding to the deployed version of the app
        deployed_commit_date:
          type: string
          readOnly: true
          format: date-time
          description: Git commit date corresponding to the deployed version of the app
        deployed_commit_contributor:
          type: string
          format: uuid
          description: Git commit user corresponding to the deployed version of the app
        deployed_commit_tag:
          type: string
          example: v1.0.1
    TagResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    SecretEditRequest:
      type: object
      properties:
        value:
          type: string
        key:
          type: string
    EventPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Event'
    Instance:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        name:
          type: string
          example: instance 1
        cpu:
          type: object
          properties:
            requested_in_float:
              type: number
            consumed_in_number:
              type: number
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        memory:
          type: object
          properties:
            requested_in_mb:
              type: integer
            consumed_in_mb:
              type: integer
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    MetricStorageResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricStorage'
    MetricRestart:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            required:
              - datetime
              - message
            properties:
              datetime:
                type: string
                format: date-time
              message:
                type: string
    Event:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            commit:
              $ref: '#/components/schemas/Commit'
            status:
              $ref: '#/components/schemas/Status'
            type:
              type: string
              description: DRAFT - we have to specify here all the possible events
            log:
              $ref: '#/components/schemas/ReferenceObject'
    EnvironmentDatabasesCurrentMetricResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentDatabasesCurrentMetric'
    ApplicationCurrentScale:
      type: object
      properties:
        min:
          type: integer
        max:
          type: integer
        running:
          type: integer
        running_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        updated_at:
          type: string
          readOnly: true
          format: date-time
    VersionResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Version'
    CommitResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Commit'
    EnvironmentApplicationsCurrentScale:
      type: object
      properties:
        application:
          type: string
          format: uuid
        min:
          type: integer
        max:
          type: integer
        running:
          type: integer
        running_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        updated_at:
          type: string
          readOnly: true
          format: date-time
    Tag:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
    EnvironmentApplicationsStorageResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentApplicationsStorage'
    EnvironmentApplicationsSupportedLanguageList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentApplicationsSupportedLanguage'
    EnvironmentApplicationsSupportedLanguage:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Ruby
    DatabaseConfiguration:
      type: object
      properties:
        database_type:
          $ref: '#/components/schemas/DatabaseTypeEnum'
        version:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseVersionMode'
    DatabaseCurrentMetric:
      type: object
      properties:
        cpu:
          type: object
          properties:
            requested_in_float:
              type: number
            consumed_in_number:
              type: number
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        memory:
          type: object
          properties:
            requested_in_mb:
              type: integer
            consumed_in_mb:
              type: integer
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        storage:
          type: object
          properties:
            requested_in_gb:
              type: integer
            consumed_in_gb:
              type: integer
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    GitRepository:
      type: object
      required:
        - name
        - url
        - id
      properties:
        id:
          type: string
        name:
          type: string
          example: simple-node-app
        url:
          type: string
          example: 'https://github.com/Qovery/simple-node-app'
        default_branch:
          type: string
          example: master
        is_private:
          type: boolean
    LogPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Log'
    StorageDiskResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StorageDisk'
    CostRange:
      type: object
      required:
        - total_in_cents
        - total
        - currency_code
      properties:
        min_cost_in_cents:
          type: integer
          example: 15000
        min_cost:
          type: number
          example: 150
        max_cost_in_cents:
          type: integer
          example: 30000
        max_cost:
          type: number
          example: 300
        currency_code:
          type: string
          example: USD
    CloudProvider:
      type: object
      properties:
        short_name:
          type: string
        name:
          type: string
        logo_url:
          type: string
        regions:
          type: array
          items:
            $ref: '#/components/schemas/ClusterRegion'
    InviteMember:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - email
            - role
            - invitation_link
            - invitation_status
            - inviter
          properties:
            email:
              type: string
              format: email
            role:
              $ref: '#/components/schemas/InviteMemberRoleEnum'
            invitation_link:
              type: string
              format: uri
            invitation_status:
              $ref: '#/components/schemas/InviteStatusEnum'
            inviter:
              type: string
            logo_url:
              type: string
              format: uri
    TransferOwnershipRequest:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: string
          format: uuid
    CluserCredentials:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        access_key_id:
          type: string
        secret_access_key:
          type: string
    AwsCredentialsRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        access_key_id:
          type: string
        secret_access_key:
          type: string
    DoCredentialsRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        token:
          type: string
        spaces_access_id:
          type: string
        spaces_secret_key:
          type: string
    ScalewayCredentialsRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        scaleway_access_key:
          type: string
        scaleway_secret_key:
          type: string
        scaleway_project_id:
          type: string
    InviteMemberRequest:
      type: object
      required:
        - email
        - role
      properties:
        email:
          type: string
        role:
          $ref: '#/components/schemas/InviteMemberRoleEnum'
    ClusterFeatureRequest:
      type: object
      properties:
        features:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                nullable: false
              value:
                type: string
                nullable: true
    ClusterFeature:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        cost_per_month_in_cents:
          type: integer
          nullable: true
          example: 9900
        cost_per_month:
          type: number
          nullable: true
          example: 99
        currency_code:
          type: string
          nullable: true
          example: USD
        value_type:
          type: string
          nullable: false
          enum:
            - BOOLEAN
        value:
          oneOf:
            - type: string
            - type: boolean
          nullable: true
        is_value_updatable:
          type: boolean
          default: false
        accepted_values:
          type: array
          items:
            oneOf:
              - type: string
              - type: boolean
    ClusterRoutingTable:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              destination:
                type: string
              target:
                type: string
              description:
                type: string
    ClusterRoutingTableRequest:
      type: object
      required:
        - routes
      properties:
        routes:
          type: array
          items:
            type: object
            required:
              - destination
              - target
              - description
            properties:
              destination:
                type: string
              target:
                type: string
              description:
                type: string
    ClusterFeatureResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterFeature'
    InviteMemberResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/InviteMember'
    CloudProviderResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CloudProvider'
    GitRepositoryBranchResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitRepositoryBranch'
    GitRepositoryBranch:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: main
    BuildPackLanguageEnum:
      type: string
      description: Development language of the application
      nullable: true
      enum:
        - CLOJURE
        - GO
        - GRADLE
        - GRAILS
        - JAVA
        - JVM
        - NODE_JS
        - PHP
        - PLAY
        - PYTHON
        - SCALA
    OrganizationApiTokenScope:
      type: string
      enum:
        - ADMIN
    OrganizationApiTokenCreateRequest:
      type: object
      required:
        - name
        - scope
      properties:
        name:
          type: string
        description:
          type: string
        scope:
          $ref: '#/components/schemas/OrganizationApiTokenScope'
    OrganizationApiTokenResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationApiToken'
    OrganizationApiToken:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            scope:
              $ref: '#/components/schemas/OrganizationApiTokenScope'
    OrganizationApiTokenCreate:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            token:
              type: string
              description: the generated token to send in 'Authorization' header prefixed by 'Token '
            scope:
              $ref: '#/components/schemas/OrganizationApiTokenScope'
    SignUp:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/SignUpRequest'
    SignUpRequest:
      type: object
      required:
        - first_name
        - last_name
        - user_email
        - type_of_use
        - qovery_usage
      properties:
        first_name:
          type: string
        last_name:
          type: string
        user_email:
          type: string
        type_of_use:
          $ref: '#/components/schemas/TypeOfUseEnum'
        qovery_usage:
          type: string
        company_name:
          type: string
          nullable: true
        company_size:
          $ref: '#/components/schemas/CompanySizeEnum'
        user_role:
          type: string
          nullable: true
        qovery_usage_other:
          type: string
          nullable: true
        user_questions:
          type: string
          nullable: true
        current_step:
          type: string
          nullable: true
        dx_auth:
          type: boolean
          nullable: true
    TypeOfUseEnum:
      type: string
      enum:
        - PERSONAL
        - SCHOOL
        - WORK
    CompanySizeEnum:
      type: string
      enum:
        - 1-10
        - 11-50
        - 51-200
        - 201-500
        - 500+
    BuildModeEnum:
      type: string
      enum:
        - BUILDPACKS
        - DOCKER
      description: |
        `DOCKER` requires `dockerfile_path`
        `BUILDPACKS` does not require any `dockerfile_path`
      default: BUILDPACKS
    EnvironmentVariableScopeEnum:
      type: string
      enum:
        - APPLICATION
        - BUILT_IN
        - ENVIRONMENT
        - PROJECT
    GitProviderEnum:
      type: string
      enum:
        - BITBUCKET
        - GITHUB
        - GITLAB
    ThresholdMetricStatusEnum:
      type: string
      enum:
        - Alert
        - OK
        - Warning
    PortProtocolEnum:
      type: string
      default: HTTP
      enum:
        - HTTP
        - HTTPS
        - TCP
        - UDP
    WeekdayEnum:
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
      example: MONDAY
    ServiceDeploymentStatusEnum:
      type: string
      nullable: true
      enum:
        - NEVER_DEPLOYED
        - OUT_OF_DATE
        - UP_TO_DATE
    DeploymentHistoryStatusEnum:
      type: string
      enum:
        - FAILED
        - SUCCESS
    DeploymentRestrictionModeEnum:
      type: string
      description: Match mode will rebuild app only if specified items are updated. Exclude mode will not rebuild app if specified items are updated.
      enum:
        - EXCLUDE
        - MATCH
      example: MATCH
    DeploymentRestrictionTypeEnum:
      type: string
      enum:
        - PATH
      example: PATH
    DatabaseTypeEnum:
      type: string
      enum:
        - MONGODB
        - MYSQL
        - POSTGRESQL
        - REDIS
    DatabaseModeEnum:
      type: string
      enum:
        - CONTAINER
        - MANAGED
    DatabaseAccessibilityEnum:
      type: string
      default: PRIVATE
      enum:
        - PRIVATE
        - PUBLIC
    EnvironmentModeEnum:
      type: string
      enum:
        - DEVELOPMENT
        - PREVIEW
        - PRODUCTION
        - STAGING
    CloudProviderEnum:
      type: string
      enum:
        - AWS
        - DIGITAL_OCEAN
        - SCALEWAY
    InviteMemberRoleEnum:
      type: string
      enum:
        - ADMIN
        - DEVELOPER
        - OWNER
        - VIEWER
    EnvironmentLogTypeEnum:
      type: string
      enum:
        - APPLICATION
        - DATABASE
        - ENVIRONMENT
    InviteStatusEnum:
      type: string
      enum:
        - EXPIRED
        - PENDING
    PlanEnum:
      type: string
      enum:
        - BUSINESS
        - COMMUNITY
        - ENTERPRISE
        - FREE
        - PROFESSIONAL
    InvoiceStatusEnum:
      type: string
      enum:
        - NOT_PAID
        - PAID
        - PAYMENT_DUE
        - PENDING
        - POSTED
        - UNKNOWN
        - VOIDED
    ServiceTypeEnum:
      type: string
      description: 'type of the service (application, database, job, gateway...)'
      enum:
        - APPLICATION
        - DATABASE
    StorageTypeEnum:
      type: string
      enum:
        - FAST_SSD
    StatusKindEnum:
      type: string
      enum:
        - CANCELED
        - CANCELING
        - DELETED
        - DELETE_ERROR
        - DELETE_IN_PROGRESS
        - DEPLOYED
        - DEPLOYMENT_ERROR
        - DEPLOYMENT_IN_PROGRESS
        - ERROR
        - PAUSED
        - PAUSE_ERROR
        - PAUSE_IN_PROGRESS
        - WAITING
    StateEnum:
      type: string
      enum:
        - BUILDING
        - CANCELED
        - CANCELING
        - DELETED
        - DELETE_ERROR
        - DELETE_QUEUED
        - DELETING
        - DEPLOYED
        - DEPLOYING
        - DEPLOYMENT_ERROR
        - DEPLOYMENT_QUEUED
        - QUEUED
        - READY
        - RUNNING
        - STOPPED
        - STOPPING
        - STOP_ERROR
        - STOP_QUEUED
  responses:
    '204':
      description: no content
    '400':
      description: Bad request
    '401':
      description: Access token is missing or invalid
    '403':
      description: Access forbidden
    '404':
      description: Resource not found
    '409':
      description: Conflict
    204-deletion:
      description: The resource was deleted successfully
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
