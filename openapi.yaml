openapi: 3.0.0
info:
  version: 1.0.3
  title: Qovery API
  description: |
    - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider.
    - ℹ️ The API is stable and still in development.
  contact:
    name: Qovery Product Team
    url: 'https://www.qovery.com'
    email: support+api+documentation@qovery.com
  x-logo:
    url: 'https://raw.githubusercontent.com/Qovery/public-resources/master/qovery_new_logo_white.svg'
    altText: Qovery
tags:
  - name: Account
  - name: Account Info
  - name: Admin
  - name: Application
  - name: Application Actions
  - name: Application Configuration
  - name: Application Database
  - name: Application Deployment Restriction
  - name: Application Deployment History
  - name: Application Environment Variable
  - name: Application Event
  - name: Application Logs
  - name: Application Main Calls
  - name: Application Metrics
  - name: Application Secret
  - name: Applications
  - name: Container
  - name: Container Actions
  - name: Container Configuration
  - name: Container Database
  - name: Container Deployment History
  - name: Container Environment Variable
  - name: Container Logs
  - name: Container Main Calls
  - name: Container Metrics
  - name: Container Registry
  - name: Container Secret
  - name: Containers
  - name: Deployment Stage Main Calls
  - name: Job
  - name: Job Actions
  - name: Job Configuration
  - name: Job Database
  - name: Job Deployment Restriction
  - name: Job Deployment History
  - name: Job Environment Variable
  - name: Job Logs
  - name: Job Main Calls
  - name: Job Metrics
  - name: Job Registry
  - name: Job Secret
  - name: Jobs
  - name: Helm
  - name: Helm Actions
  - name: Helm Configuration
  - name: Helm Database
  - name: Helm Deployment Restriction
  - name: Helm Deployment History
  - name: Helm Environment Variable
  - name: Helm Logs
  - name: Helm Main Calls
  - name: Helm Metrics
  - name: Helm Registry
  - name: Helm Secret
  - name: Helms
  - name: Backups
  - name: Billing
  - name: Cloud Provider
  - name: Cloud Provider Credentials
  - name: Clusters
  - name: Custom Domain
  - name: Container Custom Domain
  - name: Database
  - name: Database Actions
  - name: Database Application
  - name: Database Container
  - name: Database Deployment History
  - name: Database Event
  - name: Database Main Calls
  - name: Database Metrics
  - name: Databases
  - name: Environment
  - name: Environment Actions
  - name: Environment Deployment History
  - name: Environment Deployment Rule
  - name: Environment Logs
  - name: Environment Main Calls
  - name: Environment Secret
  - name: Environment Variable
  - name: Environments
  - name: Git
  - name: Github App
  - name: Git repositories
  - name: Members
  - name: Organization
  - name: Organization Account Git Repositories
  - name: Organization Main Calls
  - name: Organization Custom Role
  - name: Organization Api Token
  - name: Organization Webhook
  - name: Organization Event
  - name: Project
  - name: Project Deployment Rule
  - name: Project Environment Variable
  - name: Project Main Calls
  - name: Project Secret
  - name: Projects
  - name: Referral & Rewards
  - name: Container Registries
  - name: User Sign Up
  - name: Variable Main Calls
x-tagGroups:
  - name: Organization
    tags:
      - Organization Main Calls
      - Organization Api Token
      - Organization Account Git Repositories
      - Organization Webhook
      - Organization Custom Role
      - Organization Event
      - Projects
      - Members
      - Billing
      - Clusters
      - Cloud Provider
      - Cloud Provider Credentials
      - Github App
      - Container Registries
  - name: Project
    tags:
      - Project Main Calls
      - Environments
      - Project Deployment Rule
      - Project Environment Variable
      - Project Secret
  - name: Environment
    tags:
      - Environment Main Calls
      - Applications
      - Containers
      - Databases
      - Jobs
      - Helms
      - Environment Actions
      - Environment Logs
      - Environment Deployment History
      - Environment Deployment Rule
      - Environment Variable
      - Environment Secret
      - Environment Export
  - name: Deployment Stage
    tags:
      - Deployment Stage Main Calls
  - name: Application
    tags:
      - Application Main Calls
      - Application Actions
      - Application Configuration
      - Custom Domain
      - Application Metrics
      - Application Database
      - Application Logs
      - Application Deployment Restriction
      - Application Deployment History
      - Application Environment Variable
      - Application Secret
      - Application Event
  - name: Container
    tags:
      - Container Main Calls
      - Container Actions
      - Container Configuration
      - Container Custom Domain
      - Container Metrics
      - Container Database
      - Container Logs
      - Container Deployment History
      - Container Environment Variable
      - Container Secret
  - name: Database
    tags:
      - Database Main Calls
      - Database Actions
      - Database Metrics
      - Database Applications
      - Database Deployment History
      - Database Containers
      - Database Application
      - Database Container
      - Backups
      - Database Event
  - name: Job
    tags:
      - Job Main Calls
      - Job Actions
      - Job Configuration
      - Job Custom Domain
      - Job Deployment Restriction
      - Job Metrics
      - Job Deployment History
      - Job Environment Variable
      - Job Secret
  - name: Helm
    tags:
      - Helm Main Calls
      - Helm Actions
      - Helm Configuration
      - Helm Custom Domain
      - Helm Deployment Restriction
      - Helm Metrics
      - Helm Deployment History
      - Helm Environment Variable
      - Helm Secret
  - name: Account
    tags:
      - Account Info
      - Git repositories
      - Referral & Rewards
  - name: Git
    tags:
      - Git repositories
  - name: Variable
    tags:
      - Variable Main Calls
  - name: Admin
    tags:
      - User Sign Up
servers:
  - url: 'https://api.qovery.com'
paths:
  /organization:
    get:
      summary: List user organizations
      operationId: listOrganization
      tags:
        - Organization Main Calls
      responses:
        '200':
          description: List organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an organization
      operationId: createOrganization
      tags:
        - Organization Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '201':
          description: Create organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization name is already taken
  '/organization/{organizationId}':
    get:
      summary: Get organization by ID
      operationId: getOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      responses:
        '200':
          description: Get organization by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization
      description: To edit an organization you must have the admin permission
      operationId: editOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationEditRequest'
      responses:
        '200':
          description: Edit an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization name is already taken
    delete:
      summary: Delete an organization
      description: To delete an organization you must have the admin permission
      operationId: deleteOrganization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/apiToken':
    get:
      summary: List organization api tokens
      description: List organization api tokens
      operationId: listOrganizationApiTokens
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Api Token
      responses:
        '200':
          description: List organization api tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationApiTokenResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an organization api token
      description: Create an organization api token. You can use the generated token to interact in a programmatic way with our API.
      operationId: createOrganizationApiToken
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Api Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationApiTokenCreateRequest'
      responses:
        '201':
          description: Organization api token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationApiTokenCreate'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization Api Token name is already taken
  '/organization/{organizationId}/apiToken/{apiTokenId}':
    delete:
      summary: Delete organization api token
      description: Delete organization api token
      operationId: deleteOrganizationApiToken
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - name: apiTokenId
          in: path
          description: Organization Api Token ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Organization Api Token
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/availableRole':
    get:
      summary: List organization available roles
      description: List organization available roles
      operationId: listOrganizationAvailableRoles
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      responses:
        '200':
          description: List organization available roles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAvailableRoleList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/gitToken':
    get:
      summary: List organization git tokens
      description: List organization git tokens
      operationId: listOrganizationGitTokens
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Main Calls
      responses:
        '200':
          description: List organization git tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitTokenResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/member':
    get:
      summary: Get organization members
      operationId: getOrganizationMembers
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      responses:
        '200':
          description: Get members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization member role
      description: Edit an organization member role
      operationId: editOrganizationMemberRole
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRoleUpdateRequest'
      responses:
        '200':
          description: Edit an organization member role
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Remove a member
      operationId: deleteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
                  format: uuid
      tags:
        - Members
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/inviteMember':
    get:
      summary: Get invited members
      operationId: getOrganizationInvitedMembers
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      responses:
        '200':
          description: Get invited members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteMemberResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Invite someone in the organization
      operationId: postInviteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteMemberRequest'
      responses:
        '201':
          description: User invited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteMember'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: User already invited
  '/organization/{organizationId}/inviteMember/{inviteId}':
    get:
      summary: Get member invitation
      operationId: getMemberInvitation
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/inviteId'
      tags:
        - Members
      responses:
        '200':
          description: Get member invitation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteMember'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Accept Invite in the organization
      operationId: postAcceptInviteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/inviteId'
      tags:
        - Members
      responses:
        '201':
          description: User invited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteMember'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: User already invited
    delete:
      summary: Remove an invited member
      operationId: deleteInviteMember
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/inviteId'
      tags:
        - Members
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/transferOwnership':
    post:
      summary: Transfer organization ownership to another user
      operationId: postOrganizationTransferOwnership
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOwnershipRequest'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/currentCost':
    get:
      summary: Get organization current cost
      operationId: getOrganizationCurrentCost
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Cost
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCurrentCost'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/creditCode':
    post:
      summary: Add credit code
      operationId: addCreditCode
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreditCodeRequest'
      responses:
        '200':
          description: add credit code
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/changePlan':
    post:
      summary: Change organization plan
      operationId: changePlan
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationChangePlanRequest'
      responses:
        '200':
          description: plan has been successfully changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/currentCost':
    get:
      summary: Get cluster current cost
      operationId: getClusterCurrentCost
      description: |
        Get your cluster cost range. We are unable to give a precise cost of your infrastructure at the moment.
        But Qovery guarantees that the cost of your cluster will not exceed the max range.
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Billing
      responses:
        '200':
          description: Get cluster cost
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostRange'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/billingInfo':
    get:
      summary: Get organization billing info
      operationId: getOrganizationBillingInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Billing Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfo'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit Organization Billing Info
      operationId: editOrganizationBillingInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingInfoRequest'
      responses:
        '200':
          description: Edit billing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/billingStatus':
    get:
      summary: Get organization billing status
      description: |
        This endpoint returns a "is_valid" boolean field reflecting the billing status of the organization:
        - If true, the organization billing is valid
        - For Startup organization, it returns false if there is at least 1 invoice unpaid since 1 week
        - For Community organization, it returns false if there is no credit left
      operationId: getOrganizationBillingStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Billing Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/invoice':
    get:
      summary: List organization invoices
      operationId: listOrganizationInvoice
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: List Invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/invoice/{invoiceId}':
    get:
      summary: Get organization invoice
      operationId: getOrganizationInvoice
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/invoiceId'
      tags:
        - Billing
      responses:
        '200':
          description: Get Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/invoice/{invoiceId}/download':
    get:
      summary: Get invoice link
      description: This will return URL of the invoice PDF
      operationId: getOrganizationInvoicePDF
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/invoiceId'
      tags:
        - Billing
      responses:
        '200':
          description: Get invoice PDF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/downloadInvoices':
    post:
      summary: Download all invoices
      operationId: organizationDownloadAllInvoices
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '202':
          description: You will receive an email containing your invoices
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/creditCard':
    get:
      summary: List organization credit cards
      operationId: listOrganizationCreditCards
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      responses:
        '200':
          description: List cfredit cards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add credit card
      operationId: addCreditCard
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardRequest'
      responses:
        '201':
          description: Add credit card
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCard'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/creditCard/{creditCardId}':
    delete:
      summary: Delete credit card
      operationId: deleteCreditCard
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/creditCardId'
      tags:
        - Billing
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/project':
    get:
      summary: List projects
      operationId: listProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Projects
      responses:
        '200':
          description: List projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a project
      operationId: createProject
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Create project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Project name within the organization is already taken
  '/organization/{organizationId}/project/stats':
    get:
      summary: List total number of services and environments for each project of the organization
      description: 'Returns a list of project ids, and for each its total numberof services and environments'
      operationId: getOrganizationProjectStats
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Projects
      responses:
        '200':
          description: Get number of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster':
    get:
      summary: List organization clusters
      operationId: listOrganizationCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Clusters
      responses:
        '200':
          description: List clusters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a cluster
      operationId: createCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRequest'
      responses:
        '201':
          description: Create cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/status':
    get:
      summary: List all clusters statuses
      description: Returns a list of clusters with only their id and status.
      operationId: getOrganizationClusterStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Clusters
      responses:
        '200':
          description: Get statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}':
    delete:
      summary: Delete a cluster
      operationId: deleteCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
        - in: query
          name: deleteMode
          schema:
            $ref: '#/components/schemas/ClusterDeleteMode'
      tags:
        - Clusters
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a cluster
      operationId: editCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRequest'
      responses:
        '200':
          description: Edited the cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/status':
    get:
      summary: Get cluster status
      operationId: getClusterStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatusGet'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/advancedSettings':
    get:
      summary: Get advanced settings
      description: Get list and values of the advanced settings of the cluster.
      operationId: getClusterAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: Advanced settings list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit advanced settings
      description: Edit advanced settings by returning table of advanced settings.
      operationId: editClusterAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterAdvancedSettings'
      responses:
        '201':
          description: Updated advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAdvancedSettings'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/routingTable':
    get:
      summary: Get routing table
      description: Retrieve network routing table where each line corresponds to a route between a destination and a target.
      operationId: getRoutingTable
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: Routing table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRoutingTable'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit routing table
      description: Edit routing table by returning updated table.
      operationId: editRoutingTable
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterRoutingTableRequest'
      responses:
        '201':
          description: Updated routing table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRoutingTable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/logs':
    get:
      summary: List Cluster Logs
      description: List Cluster Logs
      operationId: listClusterLogs
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: list cluster logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLogsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/aws/credentials':
    get:
      summary: List AWS credentials
      operationId: listAWSCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: list credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentialsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create AWS credentials set
      operationId: createAWSCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsCredentialsRequest'
      responses:
        '201':
          description: Credentials created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/aws/credentials/{credentialsId}':
    get:
      summary: Get a set of AWS credentials
      operationId: getAWSCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: Get a set of AWS credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a set of AWS credentials
      operationId: editAWSCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsCredentialsRequest'
      responses:
        '200':
          description: Edit a set of AWS credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a set of AWS credentials
      operationId: deleteAWSCredentials
      parameters:
        - $ref: '#/components/parameters/credentialsId'
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/digitalOcean/credentials':
    get:
      summary: List DO credentials
      operationId: listDOCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: list credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentialsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create Digital Ocean credentials set
      operationId: createDOCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoCredentialsRequest'
      responses:
        '201':
          description: Credentials created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/digitalOcean/credentials/{credentialsId}':
    get:
      summary: Get a set of Digital Ocean credentials
      operationId: getDOCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: Get a set of Digital Ocean credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a set of Digital Ocean credentials
      operationId: editDOCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoCredentialsRequest'
      responses:
        '200':
          description: Edit a set of Digital Ocean credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a set of Digital Ocean credentials
      operationId: deleteDOCredentials
      parameters:
        - $ref: '#/components/parameters/credentialsId'
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/scaleway/credentials':
    get:
      summary: List Scaleway credentials
      operationId: listScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: list credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentialsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create Scaleway credentials set
      operationId: createScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalewayCredentialsRequest'
      responses:
        '201':
          description: Credentials created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/scaleway/credentials/{credentialsId}':
    get:
      summary: Get a set of Scaleway credentials
      operationId: getScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      responses:
        '200':
          description: Get a set of Scaleway credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a set of Scaleway credentials
      operationId: editScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/credentialsId'
      tags:
        - Cloud Provider Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalewayCredentialsRequest'
      responses:
        '200':
          description: Edit a set of Scaleway credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a set of Scaleway credentials
      operationId: deleteScalewayCredentials
      parameters:
        - $ref: '#/components/parameters/credentialsId'
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Cloud Provider Credentials
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/github/connect':
    post:
      summary: Connect a github account to an organization
      operationId: organizationGithubAppConnect
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Github App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationGithubAppConnectRequest'
      responses:
        '200':
          description: Github App connected
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/github/disconnect':
    delete:
      summary: Disconnect a github account from an organization
      operationId: organizationGithubAppDisconnect
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: force
          schema:
            type: boolean
          description: Indicates if the github app should be disconnected despite github applications linked to organization
      tags:
        - Github App
      responses:
        '204':
          description: Github App disconnected
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/account/gitAuthProvider':
    get:
      summary: Get git provider accounts
      operationId: getOrganizationGitProviderAccount
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitAuthProviderResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/github/repository':
    get:
      summary: Get github repositories of the connected user
      operationId: getOrganizationGithubRepositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: gitTokenId
          schema:
            type: string
            format: uuid
          description: The git token id that must be used for the application
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get github repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/github/repository/branch':
    get:
      summary: Get github branches of the specified repository
      operationId: getOrganizationGithubRepositoryBranches
      tags:
        - Organization Account Git Repositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
        - in: query
          name: gitTokenId
          schema:
            type: string
            format: uuid
          description: The git token id that must be used for the application
      responses:
        '200':
          description: Get github repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/gitlab/repository':
    get:
      summary: Get gitlab repositories of the connected user
      operationId: getOrganizationGitlabRepositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: gitTokenId
          schema:
            type: string
            format: uuid
          description: The git token id that must be used for the application
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get gitlab repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/gitlab/repository/branch':
    get:
      summary: Get gitlab branches of the specified repository
      operationId: getOrganizationGitlabRepositoryBranches
      tags:
        - Organization Account Git Repositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository to retrieve the branches
        - in: query
          name: gitTokenId
          schema:
            type: string
            format: uuid
          description: The git token id that must be used for the application
      responses:
        '200':
          description: Get gitlab repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/bitbucket/repository':
    get:
      summary: Get bitbucket repositories of the connected user
      operationId: getOrganizationBitbucketRepositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: gitTokenId
          schema:
            type: string
            format: uuid
          description: The git token id that must be used for the application
      tags:
        - Organization Account Git Repositories
      responses:
        '200':
          description: Get bitbucket repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/account/bitbucket/repository/branch':
    get:
      summary: Get bitbucket branches of the specified repository
      operationId: getOrganizationBitbucketRepositoryBranches
      tags:
        - Organization Account Git Repositories
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
        - in: query
          name: gitTokenId
          schema:
            type: string
            format: uuid
          description: The git token id that must be used for the application
      responses:
        '200':
          description: Get bitbucket repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  '/organization/{organizationId}/webhook':
    get:
      summary: List organization webhooks
      description: List organization webhooks
      operationId: listOrganizationWebHooks
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Webhook
      responses:
        '200':
          description: List organization webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWebhookResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an organization webhook
      description: Create an organization webhook.
      operationId: createOrganizationWebhook
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationWebhookCreateRequest'
      responses:
        '201':
          description: Organization webhook created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWebhookCreateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  '/organization/{organizationId}/webhook/{webhookId}':
    get:
      summary: Get an Organization webhook
      description: Get an Organization webhook
      operationId: getOrganizationWebhook
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/webhookId'
      tags:
        - Organization Webhook
      responses:
        '200':
          description: Get organization webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWebhookResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization webhook
      description: Edit an organization webhook
      operationId: editOrganizationWebhook
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/webhookId'
      tags:
        - Organization Webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationWebhookCreateRequest'
      responses:
        '200':
          description: Edit an organization webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWebhookCreateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete organization webhook
      description: Delete organization webhook
      operationId: deleteOrganizationWebhook
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/webhookId'
      tags:
        - Organization Webhook
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/customRole':
    get:
      summary: List organization custom roles
      description: List organization custom roles
      operationId: listOrganizationCustomRoles
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Custom Role
      responses:
        '200':
          description: List organization custom roles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCustomRoleList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an organization custom role
      description: Create an organization custom role
      operationId: createOrganizationCustomRole
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Organization Custom Role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCustomRoleCreateRequest'
      responses:
        '201':
          description: Organization custom role created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCustomRole'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  '/organization/{organizationId}/customRole/{customRoleId}':
    get:
      summary: 'Get an organization custom role '
      description: 'Get an organization custom role '
      operationId: getOrganizationCustomRole
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/customRoleId'
      tags:
        - Organization Custom Role
      responses:
        '200':
          description: 'Get an organization custom role '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCustomRole'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an organization custom role
      description: Edit an organization custom role
      operationId: editOrganizationCustomRole
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/customRoleId'
      tags:
        - Organization Custom Role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCustomRoleUpdateRequest'
      responses:
        '200':
          description: Edit an organization custom role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCustomRole'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete organization custom role
      description: Delete organization custom role
      operationId: deleteOrganizationCustomRole
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/customRoleId'
      tags:
        - Organization Custom Role
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/events':
    get:
      summary: Get all events inside the organization
      description: Get all events inside the organization
      operationId: getOrganizationEvents
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: pageSize
          description: The number of events to display in the current page
          schema:
            type: number
            nullable: true
            default: 10
        - in: query
          name: fromTimestamp
          description: |
            Display events triggered since this timestamp.  
            A range of date can be specified by using `from-timestamp` with `to-timestamp`
            The format is a timestamp with nano precision
          schema:
            type: string
            nullable: true
        - in: query
          name: toTimestamp
          description: |
            Display events triggered before this timestamp.  
            A range of date can be specified by using `to-timestamp` with `from-timestamp`
            The format is a timestamp with nano precision
          schema:
            type: string
            nullable: true
        - in: query
          name: continueToken
          description: |
            Token used to fetch the next page results
            The format is a timestamp with nano precision
          schema:
            type: string
        - in: query
          name: stepBackToken
          description: |
            Token used to fetch the previous page results
            The format is a timestamp with nano precision
          schema:
            type: string
        - in: query
          name: eventType
          schema:
            $ref: '#/components/schemas/OrganizationEventType'
        - in: query
          name: targetType
          schema:
            $ref: '#/components/schemas/OrganizationEventTargetType'
        - in: query
          name: targetId
          description: |
            The target resource id to search.  
            Must be specified with the corresponding `target_type`
          schema:
            type: string
            format: uuid
            nullable: true
        - in: query
          name: subTargetType
          schema:
            $ref: '#/components/schemas/OrganizationEventSubTargetType'
        - in: query
          name: triggeredBy
          description: Information about the owner of the event (user name / apitoken / automatic action)
          schema:
            type: string
        - in: query
          name: origin
          schema:
            $ref: '#/components/schemas/OrganizationEventOrigin'
      tags:
        - Organization Event
      responses:
        '200':
          description: Get organization events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationEventResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/targets':
    get:
      summary: Get available event targets to filter events
      description: Get available event targets to filter events
      operationId: getOrganizationEventTargets
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - in: query
          name: fromTimestamp
          description: |
            Display targets available since this timestamp.  
            A range of date can be specified by using `from-timestamp` with `to-timestamp`
            The format is a timestamp with nano precision
          schema:
            type: string
            nullable: true
        - in: query
          name: toTimestamp
          description: |
            Display targets triggered before this timestamp.  
            A range of date can be specified by using `to-timestamp` with `from-timestamp`
            The format is a timestamp with nano precision
          schema:
            type: string
            nullable: true
        - in: query
          name: eventType
          schema:
            $ref: '#/components/schemas/OrganizationEventType'
        - in: query
          name: targetType
          schema:
            $ref: '#/components/schemas/OrganizationEventTargetType'
        - in: query
          name: triggeredBy
          description: Information about the owner of the event (user name / apitoken / automatic action)
          schema:
            type: string
        - in: query
          name: origin
          schema:
            $ref: '#/components/schemas/OrganizationEventOrigin'
        - in: query
          name: projectId
          description: Mandatory when requesting an environment or a service
          schema:
            type: string
            format: uuid
        - in: query
          name: environmentId
          description: Mandatory when requesting a service
          schema:
            type: string
            format: uuid
      tags:
        - Organization Event
      responses:
        '200':
          description: Get organization event targets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationEventTargetResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /cloudProvider:
    get:
      summary: List Cloud providers available
      operationId: listCloudProvider
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list cloud providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudProviderResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /aws/region:
    get:
      summary: List AWS regions
      operationId: listAWSRegions
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRegionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /aws/clusterFeature:
    get:
      summary: List AWS features available
      operationId: listAWSFeatures
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list features available for AWS cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFeatureResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /aws/instanceType:
    get:
      summary: List AWS available instance types
      operationId: listAWSInstanceType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for AWS cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /aws/managedDatabase/type:
    get:
      summary: List AWS available managed database types
      operationId: listAWSManagedDatabaseType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list AWS available managed database types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDatabaseTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/aws/managedDatabase/instanceType/{region}/{databaseType}':
    get:
      summary: List AWS available managed database instance types
      operationId: listAWSManagedDatabaseInstanceType
      parameters:
        - $ref: '#/components/parameters/region'
        - $ref: '#/components/parameters/databaseType'
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list AWS available managed database instance types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDatabaseInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/aws/ec2/instanceType/{region}':
    get:
      summary: List AWS EC2 available instance types
      operationId: listAWSEc2InstanceType
      parameters:
        - $ref: '#/components/parameters/region'
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for AWS Ec2 by region
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/aws/eks/instanceType/{region}':
    get:
      summary: List AWS EKS available instance types
      operationId: listAWSEKSInstanceType
      parameters:
        - $ref: '#/components/parameters/region'
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for AWS EKS by region
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /digitalOcean/region:
    get:
      summary: List DO regions
      operationId: listDORegions
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRegionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /digitalOcean/clusterFeature:
    get:
      summary: List DO features available
      operationId: listDOFeatures
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list features available for Digital Ocean cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFeatureResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /digitalOcean/instanceType:
    get:
      summary: List DO available instance types
      operationId: listDOInstanceType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for Digital Ocean cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /digitalOcean/managedDatabase/type:
    get:
      summary: List Digital Ocean available managed database types
      operationId: listDOManagedDatabaseType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list Digital Ocean available managed database types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDatabaseTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/digitalOcean/managedDatabase/instanceType/{region}/{databaseType}':
    get:
      summary: List Digital Ocean available managed database instance types
      operationId: listDOManagedDatabaseInstanceType
      parameters:
        - $ref: '#/components/parameters/region'
        - $ref: '#/components/parameters/databaseType'
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list Digital Ocean available managed database instance types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDatabaseInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scaleway/region:
    get:
      summary: List Scaleway regions
      operationId: listScalewayRegions
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterRegionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scaleway/clusterFeature:
    get:
      summary: List Scaleway features available
      operationId: listScalewayFeatures
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list features available for Scaleway cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFeatureResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scaleway/instanceType:
    get:
      summary: List Scaleway available instance types
      operationId: listScalewayInstanceType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for Scaleway cloud provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scaleway/managedDatabase/type:
    get:
      summary: List Scaleway available managed database types
      operationId: listSCWManagedDatabaseType
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list Scaleway available managed database types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDatabaseTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/scaleway/managedDatabase/instanceType/{zone}/{databaseType}':
    get:
      summary: List Scaleway available managed database instance types
      operationId: listSCWManagedDatabaseInstanceType
      parameters:
        - $ref: '#/paths/~1scaleway~1instanceType~1%7Bzone%7D/get/parameters/0'
        - $ref: '#/components/parameters/databaseType'
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list Scaleway available managed database instance types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDatabaseInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/scaleway/instanceType/{zone}':
    get:
      summary: List Scaleway Kapsule available instance types
      operationId: listScalewayKapsuleInstanceType
      parameters:
        - name: zone
          in: path
          description: zone name
          required: true
          schema:
            type: string
            example: fr-par-1
      tags:
        - Cloud Provider
      responses:
        '200':
          description: list the instance types available for Scaleway Kapsule by region
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInstanceTypeResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/cloudProviderInfo':
    get:
      summary: Get cluster cloud provider info and credentials
      operationId: getOrganizationCloudProviderInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: get cloud provider info and credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCloudProviderInfo'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Specify cluster cloud provider info and credentials
      operationId: specifyClusterCloudProviderInfo
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterCloudProviderInfoRequest'
      responses:
        '201':
          description: Create cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCloudProviderInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/isReady':
    get:
      summary: Know if a cluster is ready to be deployed or not
      operationId: getClusterReadinessStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '200':
          description: Get Cluster Readiness Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterReadinessStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/deploy':
    post:
      summary: Deploy a cluster
      description: allows to deploy a cluster
      operationId: deployCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '201':
          description: Deploy cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/cluster/{clusterId}/stop':
    post:
      summary: Stop cluster
      description: Cluster stop has been requester.
      operationId: StopCluster
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/clusterId'
      tags:
        - Clusters
      responses:
        '202':
          description: Update cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Cluster is already stopped or an operation is in progress
  '/organization/{organizationId}/containerRegistry':
    get:
      summary: List organization container registries
      operationId: listContainerRegistry
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Container Registries
      responses:
        '200':
          description: List container registries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a container registry
      operationId: createContainerRegistry
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Container Registries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRegistryRequest'
      responses:
        '201':
          description: Create a Container Registry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/containerRegistry/{containerRegistryId}':
    get:
      summary: Get a container registry
      operationId: getContainerRegistry
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/containerRegistryId'
      tags:
        - Container Registries
      responses:
        '200':
          description: The container registry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a container registry
      operationId: deleteContainerRegistry
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/containerRegistryId'
      tags:
        - Container Registries
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a container registry
      operationId: editContainerRegistry
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/containerRegistryId'
      tags:
        - Container Registries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRegistryRequest'
      responses:
        '200':
          description: Edited the container registry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/organization/{organizationId}/containerRegistry/{containerRegistryId}/container/status':
    get:
      summary: List all container registry container statuses
      description: Returns a list of containers with only their id and status.
      operationId: getContainerRegistryContainerStatus
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/containerRegistryId'
      tags:
        - Containers
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /availableContainerRegistry:
    get:
      summary: List supported container registries
      description: List supported container registries by Qovery and get the mandatory authentification configuration.
      operationId: listAvailableContainerRegistry
      tags:
        - Container Registries
      responses:
        '200':
          description: supported container registries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableContainerRegistryResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}':
    get:
      summary: Get project by ID
      operationId: getProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Main Calls
      responses:
        '200':
          description: Get project by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a project
      description: To edit a project you must have the admin permission
      operationId: editProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Edit a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Project name within the organization is already taken
    delete:
      summary: Delete a project
      description: To delete a project you must have the admin permission
      operationId: deleteProject
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/deploymentRule':
    get:
      summary: List project deployment rules
      description: List project deployment rules
      operationId: listProjectDeploymentRules
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Deployment Rule
      responses:
        '200':
          description: Get project deployment rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRuleResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a deployment rule
      description: Create a deployment rule
      operationId: createDeploymentRule
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeploymentRuleRequest'
      responses:
        '201':
          description: Create deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/deploymentRule/{deploymentRuleId}':
    get:
      summary: Get a project deployment rule
      description: Get a project deployment rule
      operationId: getProjectDeploymentRule
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Project Deployment Rule
      responses:
        '200':
          description: Get project deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a project deployment rule
      description: Edit a project deployment rule
      operationId: editProjectDeployemtnRule
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Project Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeploymentRuleRequest'
      responses:
        '200':
          description: Edit a project deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a project deployment rule
      description: Delete a project deployment rule
      operationId: deleteProjectDeploymentRule
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Project Deployment Rule
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/deploymentRule/order':
    put:
      summary: Update deployment rules priority order
      description: Update deployment rules priority order
      operationId: updateDeploymentRulesPriorityOrder
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeploymentRulesPriorityOrderRequest'
      responses:
        '200':
          description: Update deployment rules priority order
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment':
    get:
      summary: List environments
      operationId: listEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      responses:
        '200':
          description: List environments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an environment
      operationId: createEnvironment
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequest'
      responses:
        '201':
          description: Create environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment name within the project is already taken
  '/project/{projectId}/environmentVariable':
    get:
      summary: List project environment variables
      operationId: listProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Environment Variable
      responses:
        '200':
          description: List project environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the project
      description: |
        - Add an environment variable to the project.
          - If the environment variable key already exists, then it will be replaced by the new one.
          - If the environment variable value points toward an existing environment variable key, it will be considered as an alias.
      operationId: createProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from a project
      description: |
        - To delete an environment variable you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the project
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editProjectEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the project level
      description: |
        - Allows you to override at project level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at project level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createProjectEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the project level
      description: |
        - Allows you to add an alias at project level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at project level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - You can't create an alias on an alias
      operationId: createProjectEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Project Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret':
    get:
      summary: List project secrets
      operationId: listProjectSecrets
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Secret
      responses:
        '200':
          description: List project secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the project
      description: |
        - Add a secret to the project.
          - If the secret key already exists, then it will be replaced by the new one.
          - If the secret value points toward an existing secret key, it will be considered as an alias.
      operationId: createProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Project Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Added a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret/{secretId}':
    delete:
      summary: Delete a secret from a project
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well  operationId: deleteProjectSecret
      operationId: deleteProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the project
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editProjectSecret
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the project level
      description: |
        - Allows you to override at project level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at project level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createProjectSecretOverride
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the project level
      description: |
        - Allows you to add an alias at project level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at project level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - You can't create an alias on an alias
      operationId: createProjectSecretAlias
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Project Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment/status':
    get:
      summary: List environments statuses
      description: Returns a list of environments with only their id and status.
      operationId: getProjectEnvironmentsStatus
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatusList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/project/{projectId}/environment/stats':
    get:
      summary: List total number of services for each environment of the project
      description: 'Returns a list of environment ids, and for each its total numberof services'
      operationId: getProjectEnvironmentServiceNumber
      parameters:
        - $ref: '#/components/parameters/projectId'
      tags:
        - Environments
      responses:
        '200':
          description: Get number of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}':
    get:
      summary: Get environment by ID
      operationId: getEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '200':
          description: Get environment by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment
      description: To edit an environment you must have the admin permission
      operationId: editEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentEditRequest'
      responses:
        '200':
          description: Edit an environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment name within the project is already taken
    delete:
      summary: Delete an environment
      description: To delete an environment you must have the admin permission
      operationId: deleteEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/status':
    get:
      summary: Get environment status
      operationId: getEnvironmentStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/statuses':
    get:
      summary: Get environment statuses with services status
      operationId: getEnvironmentStatuses
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '200':
          description: Get statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatuses'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/statusesWithStages':
    get:
      summary: Get environment statuses with stages
      operationId: getEnvironmentStatusesWithStages
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Main Calls
      responses:
        '200':
          description: Get statuses with stages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatusesWithStages'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploymentStage':
    get:
      summary: List environment deployment stage
      operationId: ListEnvironmentDeploymentStage
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Deployment Stage Main Calls
      responses:
        '200':
          description: List deployment stage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create environment deployment stage
      operationId: CreateEnvironmentDeploymentStage
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Deployment Stage Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentStageRequest'
      responses:
        '200':
          description: created deployment stage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/deploymentStage/{deploymentStageId}':
    get:
      summary: Get Deployment Stage
      operationId: getDeploymentStage
      parameters:
        - $ref: '#/components/parameters/deploymentStageId'
      tags:
        - Deployment Stage Main Calls
      responses:
        '200':
          description: Get Deployment Stage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete deployment stage
      operationId: DeleteDeploymentStage
      parameters:
        - $ref: '#/components/parameters/deploymentStageId'
      tags:
        - Deployment Stage Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit deployment stage
      operationId: EditDeploymentStage
      parameters:
        - $ref: '#/components/parameters/deploymentStageId'
      tags:
        - Deployment Stage Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentStageRequest'
      responses:
        '200':
          description: created deployment stage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/deploymentStage/{deploymentStageId}/service/{serviceId}':
    put:
      summary: Attach service to deployment stage
      operationId: AttachServiceToDeploymentStage
      parameters:
        - $ref: '#/components/parameters/deploymentStageId'
        - $ref: '#/components/parameters/serviceId'
      tags:
        - Deployment Stage Main Calls
      responses:
        '200':
          description: List of deployment stages for the env
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/deploymentStage/{deploymentStageId}/moveBefore/{stageId}':
    put:
      summary: Move deployment stage before requested stage
      operationId: MoveBeforeDeploymentStage
      parameters:
        - $ref: '#/components/parameters/deploymentStageId'
        - $ref: '#/components/parameters/stageId'
      tags:
        - Deployment Stage Main Calls
      responses:
        '200':
          description: List deployment stage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/deploymentStage/{deploymentStageId}/moveAfter/{stageId}':
    put:
      summary: Move deployment stage after requested stage
      operationId: MoveAfterDeploymentStage
      parameters:
        - $ref: '#/components/parameters/deploymentStageId'
        - $ref: '#/components/parameters/stageId'
      tags:
        - Deployment Stage Main Calls
      responses:
        '200':
          description: List deployment stage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploymentRule':
    get:
      summary: Get environment deployment rule
      operationId: getEnvironmentDeploymentRule
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Deployment Rule
      responses:
        '200':
          description: Get deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDeploymentRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploymentRule/{deploymentRuleId}':
    put:
      summary: Edit an environment deployment rule
      operationId: editEnvironmentDeploymentRule
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/deploymentRuleId'
      tags:
        - Environment Deployment Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentDeploymentRuleEditRequest'
      responses:
        '200':
          description: Edit environment deployment rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDeploymentRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploy':
    post:
      summary: Deploy environment
      description: This will deploy all the services of this environment to their latest version.
      operationId: deployEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: Deploy environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/stop':
    post:
      summary: Stop environment
      operationId: stopEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: Environment stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment is already stopped or an operation is in progress
  '/environment/{environmentId}/restart':
    post:
      summary: Deprecated - Restart environment
      description: '**Deprecated** - Please use the "Redeploy environment" endpoint now'
      operationId: restartEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: Environment restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/redeploy':
    post:
      summary: Redeploy environment
      operationId: redeployEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: Environment redeploy has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/cancelDeployment':
    post:
      summary: Cancel environment deployment
      description: Cancel the current deployment of your environment.
      operationId: cancelEnvironmentDeployment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      responses:
        '202':
          description: environment deployment cancelling has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentStatus'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment deployment is already cancelled or an operation is in progress
  '/environment/{environmentId}/clone':
    post:
      summary: Clone environment
      description: 'You must provide a name. This will create a new environment, with the same configuration, and same applications and databases. Database data is not cloned.'
      operationId: cloneEnvironment
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneRequest'
      responses:
        '202':
          description: Environment clone has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/application':
    get:
      summary: List applications
      operationId: listApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/paths/~1environment~1%7BenvironmentId%7D~1job/get/parameters/1'
      tags:
        - Applications
      responses:
        '200':
          description: List applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an application
      operationId: createApplication
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '201':
          description: Create application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application name within the environment is already taken
  '/environment/{environmentId}/application/status':
    get:
      summary: List all environment applications statuses
      description: Returns a list of applications with only their id and status.
      operationId: getEnvironmentApplicationStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/currentStorage':
    get:
      summary: List current storage disk usage for each application
      operationId: getEnvironmentApplicationCurrentStorage
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: Current storage disk usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApplicationsStorageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/currentScale':
    get:
      summary: List current scaling information for each application
      description: 'Returns min, max, and running number of instances for each application'
      operationId: getEnvironmentApplicationCurrentScale
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: list applications with current scaling
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApplicationsCurrentScaleResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/supportedLanguage':
    get:
      summary: List supported languages
      description: Returns list of languages supported by Buildpacks.
      operationId: getEnvironmentApplicationSupportedLanguages
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Applications
      responses:
        '200':
          description: Supported languages list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApplicationsSupportedLanguageList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/application/deploy':
    post:
      summary: Deploy applications
      description: 'Start a deployment of the environment. Any of the services within the chosen environment based on the following rule: a service is deployed only if a new version is specified in the payload for that application/container or if there was a change in its configuration that needs to be applied (vCPU,RAM etc..)'
      operationId: deployAllApplications
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployAllRequest'
      responses:
        '202':
          description: Deployed applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/container':
    get:
      summary: List containers
      operationId: listContainer
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/paths/~1environment~1%7BenvironmentId%7D~1job/get/parameters/1'
      tags:
        - Containers
      responses:
        '200':
          description: List containers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a container
      operationId: createContainer
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Containers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRequest'
      responses:
        '201':
          description: Create container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Container name within the environment is already taken
  '/environment/{environmentId}/container/status':
    get:
      summary: List all environment container statuses
      description: Returns a list of containers with only their id and status.
      operationId: getEnvironmentContainerStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Containers
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/container/currentStorage':
    get:
      summary: List current storage disk usage for each containers
      operationId: getEnvironmentContainerCurrentStorage
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Containers
      responses:
        '200':
          description: Current storage disk usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentContainersStorageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/container/currentScale':
    get:
      summary: List current scaling information for each container
      description: 'Returns min, max, and running number of instances for each container'
      operationId: getEnvironmentContainerCurrentScale
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Containers
      responses:
        '200':
          description: list containers with current scaling
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentContainersCurrentScaleResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/service/deploy':
    post:
      summary: Deploy services
      description: Update and deploy the selected services
      operationId: deployAllServices
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployAllRequest'
      responses:
        '202':
          description: Deployed services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/service/restart-service':
    post:
      summary: Reboot services
      description: Update and reboot the selected services
      operationId: rebootServices
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootServicesRequest'
      responses:
        '202':
          description: Reboot services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/service/stop':
    post:
      summary: Stop services
      description: Stop selected services
      operationId: stopSelectedServices
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentServiceIdsAllRequest'
      responses:
        '200':
          description: Services have been triggered to be deleted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/service/delete':
    post:
      summary: Delete services
      description: Delete selected services
      operationId: deleteSelectedServices
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentServiceIdsAllRequest'
      responses:
        '200':
          description: Services have been triggered to be deleted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/organization/{organizationId}/container/deploy':
    post:
      summary: Auto deploy containers
      description: |
        Triggers a new container deploy in each environment matching the following conditions
        - environment should have the auto-deploy enabled
        - the container should have the same image name and a different tag
      operationId: autoDeployContainerEnvironments
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Containers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationContainerAutoDeployRequest'
      responses:
        '202':
          description: Deployed containers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/organization/{organizationId}/container/preview':
    post:
      summary: Preview container environments
      description: |
        Triggers a new container preview for each environment matching the following conditions
        - preview environment feature should be enabled for the container
        - the container should have the same image name and a different tag
      operationId: previewContainerEnvironments
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Containers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationContainerPreviewRequest'
      responses:
        '202':
          description: Preview environments processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/organization/{organizationId}/job/deploy':
    post:
      summary: Auto deploy jobs
      description: |
        Triggers a new job deploy in each environment matching the following conditions
        - environment should have the auto-deploy enabled
        - the job should have the same image name and a different tag
      operationId: autoDeployJobEnvironments
      parameters:
        - $ref: '#/components/parameters/organizationId'
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationJobAutoDeployRequest'
      responses:
        '202':
          description: Deployed jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/log':
    get:
      summary: List environment deployment logs
      operationId: listEnvironmentLog
      description: This returns the last 1000 environment deployment logs.
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Logs
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentLogResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/logs':
    get:
      summary: List environment deployment logs v2
      operationId: listEnvironmentLogs
      description: This returns the last 1000 environment deployment logs v2
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - in: query
          name: version
          schema:
            type: string
      tags:
        - Environment Logs
      responses:
        '200':
          description: List logs v2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentLogsResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/deploymentHistory':
    get:
      summary: List environment deployments
      description: 'List previous and current environment deployments with the status deployment and the related services. By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listEnvironmentDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Environment Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentHistoryEnvironmentPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Variable
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the environment
      description: |
        - Add an environment variable to the environment.
          - If the environment variable key already exists, then it will be replaced by the new one.
          - If the environment variable value points toward an existing environment variable key, it will be considered as an alias.
      operationId: createEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from an environment
      description: |
        - To delete an environment variable you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the environment
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editEnvironmentEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the environment level
      description: |
        - Allows you to override at environment level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at environment level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createEnvironmentEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the environment level
      description: |
        - Allows you to add an alias at environment level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at environment level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - You can't create an alias on an alias
      operationId: createEnvironmentEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret':
    get:
      summary: List environment secrets
      operationId: listEnvironmentSecrets
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Secret
      responses:
        '200':
          description: List environment secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the environment
      description: |
        - Add a secret to the environment.
          - If the secret key already exists, then it will be replaced by the new one.
          - If the secret value points toward an existing secret key, it will be considered as an alias.
      operationId: createEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Environment Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Added a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret/{secretId}':
    delete:
      summary: Delete a secret from the environment
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well  operationId: deleteEnvironmentSecret
      operationId: deleteEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the environment
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editEnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the environment level
      description: |
        - Allows you to override at environment level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at environment level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createEnvironmentSecretOverride
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the environment level
      description: |
        - Allows you to add an alias at environment level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at environment level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - You can't create an alias on an alias
      operationId: createEnvironmentSecretAlias
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Environment Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/databaseConfiguration':
    get:
      summary: 'List eligible database types, versions and modes for the environment'
      operationId: listEnvironmentDatabaseConfig
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: List eligible database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseConfigurationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/terraformExport':
    get:
      summary: Export full environment and its resources into Terraform manifests
      operationId: exportEnvironmentConfigurationIntoTerraform
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - name: exportSecrets
          in: query
          description: export Secrets from configuration and include them into Terraform export
          required: false
          schema:
            type: boolean
            default: false
      tags:
        - Environment Export
      responses:
        '200':
          description: Export full environment and its resources into Terraform manifests
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /defaultApplicationAdvancedSettings:
    get:
      summary: List default application advanced settings
      operationId: getDefaultApplicationAdvancedSettings
      tags:
        - Applications
      responses:
        '200':
          description: Default application advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /defaultClusterAdvancedSettings:
    get:
      summary: List default cluster advanced settings
      operationId: getDefaultClusterAdvancedSettings
      tags:
        - Clusters
      responses:
        '200':
          description: Default cluster advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /defaultContainerAdvancedSettings:
    get:
      summary: List default container advanced settings
      operationId: getDefaultContainerAdvancedSettings
      tags:
        - Containers
      responses:
        '200':
          description: Default container advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /defaultJobAdvancedSettings:
    get:
      summary: List default job advanced settings
      operationId: getDefaultJobAdvancedSettings
      tags:
        - Jobs
      responses:
        '200':
          description: Default job advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /defaultHelmAdvancedSettings:
    get:
      summary: List default helm advanced settings
      operationId: getDefaultHelmAdvancedSettings
      tags:
        - Helm
      responses:
        '200':
          description: Default helm advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  '/application/{applicationId}':
    get:
      summary: Get application by ID
      operationId: getApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: Get application by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit application
      description: |
        - To edit the application you must have the admin permission.
        - For port edition, if you provide a port id, we will update the corresponding port. If you don't we will create a new one. If you remove a port from the payload, we will delete it.
        - For storage edition, if you provide a storage id, we will update the corresponding storage. If you don't we will create a new one. If you remove a storage from the payload, we will delete it.
      operationId: editApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationEditRequest'
      responses:
        '200':
          description: Edit application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application name within the environment is already taken
    delete:
      summary: Delete application
      description: To delete the application you must have the admin permission
      operationId: deleteApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/status':
    get:
      summary: Get application status
      operationId: getApplicationStatus
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/deploymentRestriction':
    get:
      summary: Get application deployment restrictions
      description: Get application deployment restrictions
      operationId: getApplicationDeploymentRestrictions
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Deployment Restriction
      responses:
        '200':
          description: Get application deployment restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeploymentRestrictionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create an application deployment restriction
      description: Create an application deployment restriction
      operationId: createApplicationDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDeploymentRestrictionRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeploymentRestriction'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          description: An application deployment restriction with same properties already exists for this application
  '/application/{applicationId}/deploymentRestriction/{deploymentRestrictionId}':
    put:
      summary: Edit an application deployment restriction
      description: Edit an application deployment restriction
      operationId: editApplicationDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/deploymentRestrictionId'
      tags:
        - Application Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDeploymentRestrictionRequest'
      responses:
        '200':
          description: Edit an application deployment restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeploymentRestriction'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete an application deployment restriction
      description: Delete an application deployment restriction
      operationId: deleteApplicationDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/deploymentRestrictionId'
      tags:
        - Application Deployment Restriction
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/contributor':
    get:
      summary: List contributors
      operationId: listApplicationContributor
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: List application contributors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/instance':
    get:
      summary: List currently running instances of the application with their CPU and RAM metrics
      operationId: getApplicationCurrentInstance
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Know current resource consumption of the application for each running instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/currentStorage':
    get:
      summary: List current storage disk usage
      operationId: getApplicationCurrentStorageDisk
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Know current storage disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDiskResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/currentScale':
    get:
      summary: Get current scaling of the application
      description: 'Returns min, max, and running number of instances of the application'
      operationId: getApplicationCurrentScale
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Get current scaling of the application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCurrentScale'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/cpu':
    get:
      summary: Get CPU consumption metric over time for the application
      operationId: getApplicationMetricCpu
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: CPU consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricCPUResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/memory':
    get:
      summary: Get Memory consumption metric over time for the application
      operationId: getApplicationMetricMemory
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Memory consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMemoryResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/healthCheck':
    get:
      summary: Get Health Check latency  metric over time for the application
      description: The value returned corresponds to the 95th centile
      operationId: getApplicationMetricHealthCheck
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Health Check Latency
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricGenericResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/metric/storage':
    get:
      summary: Get Storage consumption metric over time for the application
      operationId: getApplicationMetricStorage
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Application Metrics
      responses:
        '200':
          description: Storage consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricStorageResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/commit':
    get:
      summary: List last commits
      description: Returns list of the last 100 commits made on the repository linked to the application
      operationId: listApplicationCommit
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/startId'
        - $ref: '#/components/parameters/gitCommitId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: List commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/deploy':
    post:
      summary: Deploy application
      description: You must provide a git commit id
      operationId: deployApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
      responses:
        '202':
          description: Deploy application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/application/{applicationId}/stop':
    post:
      summary: Stop application
      operationId: stopApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      responses:
        '202':
          description: Application stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application is already stopped or an operation is in progress
  '/application/{applicationId}/restart':
    post:
      summary: Deprecated - Restart application
      description: '**Deprecated** - Please use the "Redeploy application" endpoint now'
      operationId: restartApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      responses:
        '202':
          description: Application restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/application/{applicationId}/redeploy':
    post:
      summary: Redeploy application
      operationId: redeployApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      responses:
        '202':
          description: Application redeploy has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/application/{applicationId}/restart-service':
    post:
      summary: Reboot application
      operationId: rebootApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Actions
      responses:
        '202':
          description: Application reboot has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/application/{applicationId}/deploymentHistory':
    get:
      summary: List application deploys
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter. You can also filter by status (FAILED or SUCCESS), and git_commit_id'
      operationId: listApplicationDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Application Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentHistoryPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Environment Variable
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the application
      description: |
        - Add an environment variable to the application.
      operationId: createApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/import':
    post:
      summary: Import variables
      description: 'Import environment variables in a defined scope, with a defined visibility.'
      operationId: importEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableImportRequest'
      responses:
        '201':
          description: Import environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableImport'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from an application
      description: |
        - To delete an environment variable from an application you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the application
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editApplicationEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the application level
      description: |
        - Allows you to override at application level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at application level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createApplicationEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the application level
      description: |
        - Allows you to add an alias at application level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at application level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - You can't create an alias on an alias
      operationId: createApplicationEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Application Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret':
    get:
      summary: List application secrets
      description: 'Secrets are like environment variables, but they are secured and can''t be revealed.'
      operationId: listApplicationSecrets
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Secret
      responses:
        '200':
          description: List secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the application
      description: |
        - Add a secret to the application.
      operationId: createApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Add a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret/{secretId}':
    delete:
      summary: Delete a secret from an application
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well
      operationId: deleteApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the application
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION)
      operationId: editApplicationSecret
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the application level
      description: |
        - Allows you to override at application level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at application level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createApplicationSecretOverride
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the application level
      description: |
        - Allows you to add an alias at application level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at application level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - You can't create an alias on an alias
      operationId: createApplicationSecretAlias
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Application Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/customDomain':
    get:
      summary: List application custom domains
      operationId: listApplicationCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Custom Domain
      responses:
        '200':
          description: List custom domains
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomainResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add custom domain to the application.
      description: Add a custom domain to this application in order not to use qovery autogenerated domain
      operationId: createApplicationCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Custom Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainRequest'
      responses:
        '201':
          description: Added application custom domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/customDomain/{customDomainId}':
    put:
      summary: Edit a Custom Domain
      description: To edit a Custom Domain you must have the project user permission
      operationId: editCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Custom Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainRequest'
      responses:
        '200':
          description: Edit a CustomDomain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a Custom Domain
      description: To delete an CustomDomain you must have the project user permission
      operationId: deleteCustomDomain
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Custom Domain
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/customDomain/{customDomainId}/status':
    get:
      summary: Get Custom Domain status
      operationId: getCustomDomainStatus
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Custom Domain
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/log':
    get:
      summary: List logs
      operationId: listApplicationLog
      description: This will list the last 1000 logs of the application
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Logs
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/network':
    get:
      summary: Get Application Network information
      description: Get status of the application network settings.
      operationId: getApplicationNetwork
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Configuration
      responses:
        '200':
          description: Network information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNetwork'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit Application Network
      description: Edit the Network settings of the application.
      operationId: editApplicationNetwork
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationNetworkRequest'
      responses:
        '201':
          description: Updated application network setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNetwork'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/link':
    get:
      summary: List all URLs of the application
      description: This will return all the custom domains and Qovery autogenerated domain for the given application
      operationId: listApplicationLinks
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Main Calls
      responses:
        '200':
          description: List links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/advancedSettings':
    get:
      summary: Get advanced settings
      description: Get list and values of the advanced settings of the application.
      operationId: getAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Configuration
      responses:
        '200':
          description: Advanced settings list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit advanced settings
      description: Edit advanced settings by returning table of advanced settings.
      operationId: editAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Application Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationAdvancedSettings'
      responses:
        '201':
          description: Updated advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAdvancedSettings'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/application/{applicationId}/clone':
    post:
      summary: Clone application
      description: This will create a new application with the same configuration on the targeted environment Id.
      operationId: cloneApplication
      parameters:
        - $ref: '#/components/parameters/applicationId'
      tags:
        - Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneApplicationRequest'
      responses:
        '202':
          description: Application clone has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/container/{containerId}':
    get:
      summary: Get container by ID
      operationId: getContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Main Calls
      responses:
        '200':
          description: Get container by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit container
      description: |
        - To edit the container you must have the admin permission.
        - For port edition, if you provide a port id, we will update the corresponding port. If you don't we will create a new one. If you remove a port from the payload, we will delete it.
        - For storage edition, if you provide a storage id, we will update the corresponding storage. If you don't we will create a new one. If you remove a storage from the payload, we will delete it.
      operationId: editContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRequest'
      responses:
        '200':
          description: Edit container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Container name within the environment is already taken
    delete:
      summary: Delete container
      description: To delete the container you must have the admin permission
      operationId: deleteContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/status':
    get:
      summary: Get container status
      operationId: getContainerStatus
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/deploymentHistory':
    get:
      summary: List container deployments
      description: Returns the 20 last container deployments
      operationId: listContainerDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationData'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/DeploymentHistoryContainer'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/advancedSettings':
    get:
      summary: Get advanced settings
      description: Get list and values of the advanced settings of the container.
      operationId: getContainerAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Configuration
      responses:
        '200':
          description: Advanced settings list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit advanced settings
      description: Edit advanced settings by returning table of advanced settings.
      operationId: editContainerAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerAdvancedSettings'
      responses:
        '201':
          description: Updated advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAdvancedSettings'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/instance':
    get:
      summary: List currently running instances of the container with their CPU and RAM metrics
      operationId: getContainerCurrentInstance
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Metrics
      responses:
        '200':
          description: Know current resource consumption of the container for each running instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/currentStorage':
    get:
      summary: List current storage disk usage
      operationId: getContainerCurrentStorageDisk
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Metrics
      responses:
        '200':
          description: Know current storage disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDiskResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/currentScale':
    get:
      summary: Get current scaling of the container
      description: 'Returns min, max, and running number of instances of the application'
      operationId: getContainerCurrentScale
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Metrics
      responses:
        '200':
          description: Get current scaling of the container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerCurrentScale'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/deploy':
    post:
      summary: Deploy container
      description: You must provide a git commit id
      operationId: deployContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerDeployRequest'
      responses:
        '202':
          description: Deploy container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/container/{containerId}/stop':
    post:
      summary: Stop container
      operationId: stopContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Actions
      responses:
        '202':
          description: Container stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Container is already stopped or an operation is in progress
  '/container/{containerId}/restart':
    post:
      summary: Deprecated - Restart container
      description: '**Deprecated** - Please use the "Redeploy container" endpoint now'
      operationId: restartContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Actions
      responses:
        '202':
          description: Container restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/container/{containerId}/redeploy':
    post:
      summary: Redeploy container
      operationId: redeployContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Actions
      responses:
        '202':
          description: Container redeploy has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/container/{containerId}/restart-service':
    post:
      summary: Reboot container
      operationId: rebootContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Actions
      responses:
        '202':
          description: Container reboot has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/container/{containerId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listContainerEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Environment Variable
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the container
      description: |
        - Add an environment variable to the container.
      operationId: createContainerEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/environmentVariable/import':
    post:
      summary: Import variables
      description: 'Import environment variables in a defined scope, with a defined visibility.'
      operationId: importContainerEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableImportRequest'
      responses:
        '201':
          description: Import environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableImport'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from a container
      description: |
        - To delete an environment variable from an container you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteContainerEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Container Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the container
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER)
      operationId: editContainerEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Container Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the container level
      description: |
        - Allows you to override at container level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at container level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createContainerEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Container Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the container level
      description: |
        - Allows you to add an alias at container level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at container level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - You can't create an alias on an alias
      operationId: createContainerEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Container Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/secret':
    get:
      summary: List container secrets
      description: 'Secrets are like environment variables, but they are secured and can''t be revealed.'
      operationId: listContainerSecrets
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Secret
      responses:
        '200':
          description: List secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the container
      description: |
        - Add a secret to the container.
      operationId: createContainerSecret
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Add a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/secret/{secretId}':
    delete:
      summary: Delete a secret from an container
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well
      operationId: deleteContainerSecret
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Container Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the container
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER)
      operationId: editContainerSecret
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Container Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the container level
      description: |
        - Allows you to override at container level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at container level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createContainerSecretOverride
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Container Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the container level
      description: |
        - Allows you to add an alias at container level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at container level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - You can't create an alias on an alias
      operationId: createContainerSecretAlias
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Container Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/customDomain':
    get:
      summary: List container custom domains
      operationId: listContainerCustomDomain
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Custom Domain
      responses:
        '200':
          description: List custom domains
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomainResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add custom domain to the container.
      description: Add a custom domain to this container in order not to use qovery autogenerated domain
      operationId: createContainerCustomDomain
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Custom Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainRequest'
      responses:
        '201':
          description: Added container custom domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/customDomain/{customDomainId}':
    put:
      summary: Edit a Custom Domain
      description: To edit a Custom Domain  you must have the project user permission
      operationId: editContainerCustomDomain
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Container Custom Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomainRequest'
      responses:
        '200':
          description: Edit a CustomDomain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a Custom Domain
      description: To delete an CustomDomain you must have the project user permission
      operationId: deleteContainerCustomDomain
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Container Custom Domain
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/customDomain/{customDomainId}/status':
    get:
      summary: Get Custom Domain status
      operationId: getContainerCustomDomainStatus
      parameters:
        - $ref: '#/components/parameters/containerId'
        - $ref: '#/components/parameters/customDomainId'
      tags:
        - Container Custom Domain
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomain'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/log':
    get:
      summary: List logs
      operationId: listContainerLog
      description: This will list the last 1000 logs of the container
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Logs
      responses:
        '200':
          description: List logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/network':
    get:
      summary: Get Container Network information
      description: Get status of the container network settings.
      operationId: getContainerNetwork
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Configuration
      responses:
        '200':
          description: Network information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerNetwork'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit Container Network
      description: Edit the Network settings of the container.
      operationId: editContainerNetwork
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerNetworkRequest'
      responses:
        '201':
          description: Updated container network setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerNetwork'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/link':
    get:
      summary: List all URLs of the container
      description: This will return all the custom domains and Qovery autogenerated domain for the given container
      operationId: listContainerLinks
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Container Main Calls
      responses:
        '200':
          description: List links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/container/{containerId}/clone':
    post:
      summary: Clone container
      description: This will create a new container with the same configuration on the targeted environment Id.
      operationId: cloneContainer
      parameters:
        - $ref: '#/components/parameters/containerId'
      tags:
        - Containers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneContainerRequest'
      responses:
        '202':
          description: Container clone has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/environment/{environmentId}/database':
    get:
      summary: List environment databases
      operationId: listDatabase
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: List databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a database
      operationId: createDatabase
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseRequest'
      responses:
        '201':
          description: 'Create database '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Database name within the environment is already taken
  '/environment/{environmentId}/database/status':
    get:
      summary: List all environment databases statuses
      description: Returns a list of databases with only their id and status.
      operationId: getEnvironmentDatabaseStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/database/currentMetric':
    get:
      summary: List current metric consumption for each database
      operationId: listEnvironmentDatabaseCurrentMetric
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Databases
      responses:
        '200':
          description: List current metric for each database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDatabasesCurrentMetricResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}':
    get:
      summary: Get database by ID
      operationId: getDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: Get database  by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: 'Edit a database '
      description: To edit a database  you must have the admin permission
      operationId: editDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseEditRequest'
      responses:
        '200':
          description: 'Edit a database '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Database  name within the environment is already taken
    delete:
      summary: 'Delete a database '
      description: To delete a database you must have the admin permission
      operationId: deleteDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/status':
    get:
      summary: Get database status
      operationId: getDatabaseStatus
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/version':
    get:
      summary: List eligible versions for the database
      operationId: listDatabaseVersion
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: List eligible versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/masterCredentials':
    get:
      summary: Get master credentials of the database
      operationId: getDatabaseMasterCredentials
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      responses:
        '200':
          description: get credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit database  master credentials
      operationId: editDatabaseCredentials
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsRequest'
      responses:
        '200':
          description: Edit database credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/application':
    get:
      summary: List applications using the database
      operationId: listDatabaseApplication
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Application
      responses:
        '200':
          description: List linked applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/application/{targetApplicationId}':
    delete:
      summary: 'Remove an application from this database '
      operationId: removeApplicationFromDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/targetApplicationId'
      tags:
        - Database Application
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/restart':
    post:
      summary: Deprecated - Restart database
      description: '**Deprecated** - Please use the "Redeploy database" endpoint now'
      operationId: restartDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: Database  restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/redeploy':
    post:
      summary: Redeploy database
      operationId: redeployDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: Database redeploy has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/restart-service':
    post:
      summary: Retart database
      operationId: rebootDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: Database reboot has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/stop':
    post:
      summary: Stop database
      operationId: stopDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: Database  stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/deploy':
    post:
      summary: 'Deploy database '
      operationId: deployDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Actions
      responses:
        '202':
          description: 'Deploy database '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/database/{databaseId}/deploymentHistory':
    get:
      summary: List database deploys
      description: By default it returns the 20 last results. The response is paginated.
      operationId: listDatabaseDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Database Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationData'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/DeploymentHistoryDatabase'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/currentMetric':
    get:
      summary: 'Get current metric consumption of the database '
      operationId: getDatabaseCurrentMetric
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Get database  current metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseCurrentMetric'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/cpu':
    get:
      summary: Get CPU consumption metric over time for the database
      operationId: getDatabaseMetricCpu
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: CPU consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricCPUDatapointResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/memory':
    get:
      summary: Get Memory consumption metric over time for the database
      operationId: getDatabaseMetricMemory
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Memory consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMemoryDatapointResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/storage':
    get:
      summary: Get Storage consumption metric over time for the database
      operationId: getDatabaseMetricStorage
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Storage consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricStorageDatapointResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/metric/healthCheck':
    get:
      summary: Get Health Check latency  metric over time for the database
      description: The value returned corresponds to the 95th centile
      operationId: getDatabaseMetricHealthCheck
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/lastSeconds'
      tags:
        - Database Metrics
      responses:
        '200':
          description: Health Check Latency
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricGenericResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/backup':
    get:
      summary: List database  backups
      description: 'By default it returns the 20 last results. The response is paginated. In order to request the next page, you can use the startId query parameter'
      operationId: listDatabaseBackup
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/startId'
      tags:
        - Backups
      responses:
        '200':
          description: List backups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPaginatedResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: 'Add a backup to the Database '
      operationId: addBackupDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Backups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRequest'
      responses:
        '201':
          description: Added backup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/backup/{backupId}':
    delete:
      summary: Remove database  backup
      operationId: removeDatabaseBackup
      parameters:
        - $ref: '#/components/parameters/databaseId'
        - $ref: '#/components/parameters/backupId'
      tags:
        - Backups
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/database/{databaseId}/clone':
    post:
      summary: Clone database
      description: This will create a new database with the same configuration on the targeted environment Id.
      operationId: cloneDatabase
      parameters:
        - $ref: '#/components/parameters/databaseId'
      tags:
        - Databases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneDatabaseRequest'
      responses:
        '202':
          description: Database clone has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  /account:
    get:
      summary: Get Account information
      operationId: getAccountInformation
      tags:
        - Account Info
      responses:
        '200':
          description: Get account info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'
        '401':
          $ref: '#/components/responses/401'
    put:
      summary: Edit account information
      operationId: editAccountInformation
      tags:
        - Account Info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInfoEditRequest'
      responses:
        '200':
          description: Edit application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  /account/gitAuthProvider:
    get:
      deprecated: true
      summary: Get git provider accounts
      operationId: getGitProviderAccount
      tags:
        - Git repositories
      responses:
        '200':
          description: Get account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitAuthProviderResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/github/repository:
    get:
      deprecated: true
      summary: Get github repositories of the connected user
      operationId: getGithubRepositories
      tags:
        - Git repositories
      responses:
        '200':
          description: Get github repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/github/repository/branch:
    get:
      deprecated: true
      summary: Get github branches of the specified repository
      operationId: getGithubRepositoryBranches
      tags:
        - Git repositories
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
      responses:
        '200':
          description: Get github repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/gitlab/repository:
    get:
      deprecated: true
      summary: Get gitlab repositories of the connected user
      operationId: getGitlabRepositories
      tags:
        - Git repositories
      responses:
        '200':
          description: Get gitlab repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/gitlab/repository/branch:
    get:
      deprecated: true
      summary: Get gitlab branches of the specified repository
      operationId: getGitlabRepositoryBranches
      tags:
        - Git repositories
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository to retrieve the branches
      responses:
        '200':
          description: Get gitlab repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/bitbucket/repository:
    get:
      deprecated: true
      summary: Get bitbucket repositories of the connected user
      operationId: getBitbucketRepositories
      tags:
        - Git repositories
      responses:
        '200':
          description: Get bitbucket repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/bitbucket/repository/branch:
    get:
      deprecated: true
      summary: Get bitbucket branches of the specified repository
      operationId: getBitbucketRepositoryBranches
      tags:
        - Git repositories
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name of the repository where to retrieve the branches
      responses:
        '200':
          description: Get bitbucket repository branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryBranchResponseList'
        '401':
          $ref: '#/components/responses/401'
  /account/referral:
    get:
      summary: Get your referral information
      operationId: getAccountReferral
      tags:
        - Referral & Rewards
      responses:
        '200':
          description: Get referral info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
        '401':
          $ref: '#/components/responses/401'
  /account/rewardClaim:
    post:
      summary: Claim a reward
      description: A same code can be claimed only 3 times at max
      operationId: postAccountRewardClaim
      tags:
        - Referral & Rewards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardClaim'
      responses:
        '200':
          description: Claim reward
  /admin/userSignUp:
    get:
      summary: Get Sign up information
      description: Retrieve the Sign Up information of the user
      operationId: getUserSignUp
      tags:
        - User Sign Up
      responses:
        '200':
          description: 'If a previous sign up request for the same user has been found, the information is returned in the payload'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUp'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Send Sign Up request
      description: Send a Sign Up request containing the user information
      operationId: createUserSignUp
      tags:
        - User Sign Up
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '200':
          description: Sign up request stored
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/helm':
    get:
      summary: List helms
      operationId: listHelms
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - $ref: '#/paths/~1environment~1%7BenvironmentId%7D~1job/get/parameters/1'
      tags:
        - Helms
      responses:
        '200':
          description: List helms
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a helm
      operationId: createHelm
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Helms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmRequest'
      responses:
        '201':
          description: Create helm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Helm name within the environment is already taken
  '/environment/{environmentId}/helm/status':
    get:
      summary: List all environment helm statuses
      description: Returns a list of helms with only their id and status.
      operationId: getEnvironmentHelmStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Helms
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/helm/{helmId}':
    get:
      summary: Get helm by ID
      operationId: getHelm
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Main Calls
      responses:
        '200':
          description: Get helm by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit helm
      description: |
        - To edit the helm you must have the admin permission.
      operationId: editHelm
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmRequest'
      responses:
        '200':
          description: Edit helm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Helm name within the environment is already taken
    delete:
      summary: Delete helm
      description: To delete the helm you must have the admin permission
      operationId: deleteHelm
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/helm/{helmId}/advancedSettings':
    get:
      summary: Get advanced settings
      description: Get list and values of the advanced settings of the helm.
      operationId: getHelmAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Configuration
      responses:
        '200':
          description: Advanced settings list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit advanced settings
      description: Edit advanced settings by returning table of advanced settings.
      operationId: editHelmAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmAdvancedSettings'
      responses:
        '201':
          description: Updated advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmAdvancedSettings'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/helm/{helmId}/deploy':
    post:
      summary: Deploy helm
      description: You must provide a git commit id or an image tag depending on the source location of your code (git vs image repository).
      operationId: deployHelm
      parameters:
        - $ref: '#/components/parameters/helmId'
        - name: forceEvent
          in: query
          required: false
          description: |
            When filled, it indicates the target event to be deployed.  
            If the concerned helm hasn't the target event provided, the helm won't be deployed.
          schema:
            $ref: '#/components/schemas/HelmForceEvent'
      tags:
        - Helm Actions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                  description: |
                    version of the chart to deploy.
                    Cannot be set if `git_commit_id` is defined
                git_commit_id:
                  type: string
                  description: |
                    Commit to deploy
                    Cannot be set if `version` is defined
      responses:
        '202':
          description: Deploy helm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/helm/{helmId}/restart':
    post:
      summary: Deprecated - Restart helm
      description: '**Deprecated** - Please use the "Redeploy helm" endpoint now'
      operationId: restartHelm
      parameters:
        - $ref: '#/components/parameters/helmId'
        - name: forceEvent
          in: query
          required: false
          description: |
            When filled, it indicates the target event to be deployed.  
            If the concerned helm hasn't the target event provided, the helm won't be deployed.
          schema:
            $ref: '#/components/schemas/HelmForceEvent'
      tags:
        - Helm Actions
      responses:
        '202':
          description: Helm restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/helm/{helmId}/redeploy':
    post:
      summary: Redeploy helm
      operationId: redeployHelm
      parameters:
        - $ref: '#/components/parameters/helmId'
        - name: forceEvent
          in: query
          required: false
          description: |
            When filled, it indicates the target event to be deployed.  
            If the concerned helm hasn't the target event provided, the helm won't be deployed.
          schema:
            $ref: '#/components/schemas/HelmForceEvent'
      tags:
        - Helm Actions
      responses:
        '202':
          description: Helm redeploy has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/helm/{helmId}/stop':
    post:
      summary: Stop helm
      operationId: stopHelm
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Actions
      responses:
        '202':
          description: Helm stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Helm is already stopped or an operation is in progress
  '/helm/{helmId}/status':
    get:
      summary: Get helm status
      operationId: getHelmStatus
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/helm/{helmId}/deploymentHistory':
    get:
      summary: List helm deployments
      description: Returns the 20 last helm deployments
      operationId: listHelmDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationData'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Base'
                            - type: object
                              properties:
                                name:
                                  type: string
                                  description: name of the helm
                                status:
                                  $ref: '#/components/schemas/StateEnum'
                                commit:
                                  $ref: '#/components/schemas/Commit'
                                repository:
                                  type: object
                                  nullable: true
                                  description: 'If the chart source if from a repository, the chart name and its version'
                                  properties:
                                    chart_name:
                                      type: string
                                    version:
                                      type: string
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/helm/{helmId}/deploymentRestriction':
    get:
      summary: Get helm deployment restrictions
      description: Get helm deployment restrictions
      operationId: getHelmDeploymentRestrictions
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Deployment Restriction
      responses:
        '200':
          description: Get helm deployment restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmDeploymentRestrictionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a helm deployment restriction
      description: Create a helm deployment restriction
      operationId: createHelmDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/helmId'
      tags:
        - Helm Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmDeploymentRestrictionRequest'
      responses:
        '201':
          description: Added an helm deployment restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmDeploymentRestrictionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          description: A Helm deployment restriction with same properties already exists for this helm
  '/helm/{helmId}/deploymentRestriction/{deploymentRestrictionId}':
    put:
      summary: Edit a helm deployment restriction
      description: Edit a helm deployment restriction
      operationId: editHelmDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/helmId'
        - $ref: '#/components/parameters/deploymentRestrictionId'
      tags:
        - Helm Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmDeploymentRestrictionRequest'
      responses:
        '200':
          description: Edit a helm deployment restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmDeploymentRestrictionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a helm deployment restriction
      description: Delete a helm deployment restriction
      operationId: deleteHelmDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/helmId'
        - $ref: '#/components/parameters/deploymentRestrictionId'
      tags:
        - Helm Deployment Restriction
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/environment/{environmentId}/job':
    get:
      summary: List jobs
      operationId: listJobs
      parameters:
        - $ref: '#/components/parameters/environmentId'
        - name: toUpdate
          in: query
          description: return (or not) results that must be updated
          required: false
          schema:
            type: boolean
            default: false
      tags:
        - Jobs
      responses:
        '200':
          description: List jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a job
      operationId: createJob
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
      responses:
        '201':
          description: Create job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Job name within the environment is already taken
  '/environment/{environmentId}/job/status':
    get:
      summary: List all environment job statuses
      description: Returns a list of jobs with only their id and status.
      operationId: getEnvironmentJobStatus
      parameters:
        - $ref: '#/components/parameters/environmentId'
      tags:
        - Jobs
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceObjectStatusResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}':
    get:
      summary: Get job by ID
      operationId: getJob
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Main Calls
      responses:
        '200':
          description: Get job by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit job
      description: |
        - To edit the job you must have the admin permission.
      operationId: editJob
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
      responses:
        '200':
          description: Edit job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Job name within the environment is already taken
    delete:
      summary: Delete job
      description: To delete the job you must have the admin permission
      operationId: deleteJob
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/advancedSettings':
    get:
      summary: Get advanced settings
      description: Get list and values of the advanced settings of the job.
      operationId: getJobAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Configuration
      responses:
        '200':
          description: Advanced settings list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAdvancedSettings'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit advanced settings
      description: Edit advanced settings by returning table of advanced settings.
      operationId: editJobAdvancedSettings
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobAdvancedSettings'
      responses:
        '201':
          description: Updated advanced settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAdvancedSettings'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/deploy':
    post:
      summary: Deploy job
      description: You must provide a git commit id or an image tag depending on the source location of your code (git vs image repository).
      operationId: deployJob
      parameters:
        - $ref: '#/components/parameters/jobId'
        - name: forceEvent
          in: query
          required: false
          description: |
            When filled, it indicates the target event to be deployed.  
            If the concerned job hasn't the target event provided, the job won't be deployed.
          schema:
            $ref: '#/components/schemas/JobForceEvent'
      tags:
        - Job Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDeployRequest'
      responses:
        '202':
          description: Deploy job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/job/{jobId}/restart':
    post:
      summary: Deprecated - Restart job
      description: '**Deprecated** - Please use the "Redeploy job" endpoint now'
      operationId: restartJob
      parameters:
        - $ref: '#/components/parameters/jobId'
        - name: forceEvent
          in: query
          required: false
          description: |
            When filled, it indicates the target event to be deployed.  
            If the concerned job hasn't the target event provided, the job won't be deployed.
          schema:
            $ref: '#/components/schemas/JobForceEvent'
      tags:
        - Job Actions
      responses:
        '202':
          description: Job restart has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/job/{jobId}/redeploy':
    post:
      summary: Redeploy job
      operationId: redeployJob
      parameters:
        - $ref: '#/components/parameters/jobId'
        - name: forceEvent
          in: query
          required: false
          description: |
            When filled, it indicates the target event to be deployed.  
            If the concerned job hasn't the target event provided, the job won't be deployed.
          schema:
            $ref: '#/components/schemas/JobForceEvent'
      tags:
        - Job Actions
      responses:
        '202':
          description: Job redeploy has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/job/{jobId}/stop':
    post:
      summary: Stop job
      operationId: stopJob
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Actions
      responses:
        '202':
          description: Job stop has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Job is already stopped or an operation is in progress
  '/job/{jobId}/status':
    get:
      summary: Get job status
      operationId: getJobStatus
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Main Calls
      responses:
        '200':
          description: Get status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/deploymentHistory':
    get:
      summary: List job deployments
      description: Returns the 20 last job deployments
      operationId: listJobDeploymentHistory
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Deployment History
      responses:
        '200':
          description: List deployment history
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationData'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/DeploymentHistoryJobResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/deploymentRestriction':
    get:
      summary: Get job deployment restrictions
      description: Get job deployment restrictions
      operationId: getJobDeploymentRestrictions
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Deployment Restriction
      responses:
        '200':
          description: Get job deployment restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDeploymentRestrictionResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a job deployment restriction
      description: Create a job deployment restriction
      operationId: createJobDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDeploymentRestrictionRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDeploymentRestrictionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          description: A Job deployment restriction with same properties already exists for this job
  '/job/{jobId}/deploymentRestriction/{deploymentRestrictionId}':
    put:
      summary: Edit a job deployment restriction
      description: Edit a job deployment restriction
      operationId: editJobDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/deploymentRestrictionId'
      tags:
        - Job Deployment Restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDeploymentRestrictionRequest'
      responses:
        '200':
          description: Edit a job deployment restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDeploymentRestrictionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a job deployment restriction
      description: Delete a job deployment restriction
      operationId: deleteJobDeploymentRestriction
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/deploymentRestrictionId'
      tags:
        - Job Deployment Restriction
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/instance':
    get:
      summary: List currently running instances of the job with their CPU and RAM metrics
      operationId: getJobCurrentInstance
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Metrics
      responses:
        '200':
          description: Know current resource consumption of the job for each running instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/environmentVariable':
    get:
      summary: List environment variables
      operationId: listJobEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Environment Variable
      responses:
        '200':
          description: List environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add an environment variable to the job
      description: |
        - Add an environment variable to the job.
      operationId: createJobEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableRequest'
      responses:
        '201':
          description: Added an environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/environmentVariable/import':
    post:
      summary: Import variables
      description: 'Import environment variables in a defined scope, with a defined visibility.'
      operationId: importJobEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableImportRequest'
      responses:
        '201':
          description: Import environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableImport'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/environmentVariable/{environmentVariableId}':
    delete:
      summary: Delete an environment variable from a job
      description: |
        - To delete an environment variable from an job you must have the project user permission
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteJobEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Job Environment Variable
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit an environment variable belonging to the job
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the variable it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER)
      operationId: editJobEnvironmentVariable
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Job Environment Variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableEditRequest'
      responses:
        '200':
          description: Edited the environment variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/environmentVariable/{environmentVariableId}/override':
    post:
      summary: Create an environment variable override at the job level
      description: |
        - Allows you to override at job level an environment variable that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new environment variable at job level with the same key as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" field of the newly created variable
      operationId: createJobEnvironmentVariableOverride
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Job Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/environmentVariable/{environmentVariableId}/alias':
    post:
      summary: Create an environment variable alias at the job level
      description: |
        - Allows you to add an alias at job level on an existing environment variable having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new environment variable at job level with the same value as the one corresponding to the variable id in the path
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" field of the newly created variable
        - You can't create an alias on an alias
      operationId: createJobEnvironmentVariableAlias
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/environmentVariableId'
      tags:
        - Job Environment Variable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/secret':
    get:
      summary: List job secrets
      description: 'Secrets are like environment variables, but they are secured and can''t be revealed.'
      operationId: listJobSecrets
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Secret
      responses:
        '200':
          description: List secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Add a secret to the job
      description: |
        - Add a secret to the job.
      operationId: createJobSecret
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Job Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretRequest'
      responses:
        '201':
          description: Add a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/secret/{secretId}':
    delete:
      summary: Delete a secret from an job
      description: |
        - To delete a secret you must have the project user permission
        - You can't delete a BUILT_IN secret
        - If you delete a secret having override or alias, the associated override/alias will be deleted as well
      operationId: deleteJobSecret
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Job Secret
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a secret belonging to the job
      description: |
        - You can't edit a BUILT_IN secret
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
        - An override can only have a scope lower to the secret it is overriding (hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > CONTAINER)
      operationId: editJobSecret
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Job Secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretEditRequest'
      responses:
        '200':
          description: Edited the secret value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/secret/{secretId}/override':
    post:
      summary: Create a secret override at the job level
      description: |
        - Allows you to override at job level a secret that has a higher scope.
        - You only have to specify a value in the request body
        - The system will create a new secret at job level with the same key as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the overridden_secret will be exposed in the "overridden_secret" field of the newly created secret
      operationId: createJobSecretOverride
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Job Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Value'
      responses:
        '201':
          description: Create secret override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/secret/{secretId}/alias':
    post:
      summary: Create a secret alias at the job level
      description: |
        - Allows you to add an alias at job level on an existing secret having higher scope, in order to customize its key.
        - You only have to specify a key in the request body
        - The system will create a new secret at job level with the same value as the one corresponding to the secret id in the path
        - The response body will contain the newly created secret
        - Information regarding the aliased_secret will be exposed in the "aliased_secret" field of the newly created secret
        - You can't create an alias on an alias
      operationId: createJobSecretAlias
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/secretId'
      tags:
        - Job Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      responses:
        '201':
          description: Create secret alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is BUILT_IN > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/commit':
    get:
      summary: List last job commits
      description: Returns list of the last 100 commits made on the repository linked to the job
      operationId: listJobCommit
      parameters:
        - $ref: '#/components/parameters/jobId'
        - $ref: '#/components/parameters/startId'
        - $ref: '#/components/parameters/gitCommitId'
      tags:
        - Job Main Calls
      responses:
        '200':
          description: List job commits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/job/{jobId}/clone':
    post:
      summary: Clone job
      description: This will create a new job with the same configuration on the targeted environment Id.
      operationId: cloneJob
      parameters:
        - $ref: '#/components/parameters/jobId'
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneJobRequest'
      responses:
        '202':
          description: Job clone has been requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Operation is in progress
  '/service/{serviceId}/deploymentStage':
    get:
      summary: Get Service Deployment Stage
      operationId: getServiceDeploymentStage
      parameters:
        - $ref: '#/components/parameters/serviceId'
      tags:
        - Deployment Stage Main Calls
      responses:
        '200':
          description: Get Service Deployment Stage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStageResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /variable:
    get:
      summary: List variables
      description: Returns a list of variables. The result can be filtered by using the query parameters.
      operationId: listVariables
      parameters:
        - in: query
          name: parent_id
          schema:
            type: string
            format: uuid
          description: 'it filters the list by returning only the variables accessible by the selected parent_id. This field shall contain the id of a project, environment or service depending on the selected scope. Example, if scope = APPLICATION and parent_id=<application_id>, the result will contain any variable accessible by the application. The result will contain also any variable declared at an higher scope.'
        - in: query
          name: scope
          schema:
            $ref: '#/components/schemas/APIVariableScopeEnum'
          description: 'the type of the parent_id (application, project, environment etc..).'
        - in: query
          name: is_secret
          schema:
            type: boolean
            nullable: true
            description: it filters the list by returning only the variables of type secret or not
      tags:
        - Variable Main Calls
      responses:
        '200':
          description: List variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponseList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: Create a variable
      description: |
        - Create a variable with the scope defined in the request body.
      operationId: createVariable
      tags:
        - Variable Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableRequest'
      responses:
        '201':
          description: Create a variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/variable/{variableId}/alias':
    post:
      summary: Create a variable alias
      description: |
        - Allows you to create an alias of one of the existing variables.
        - You have to specify an alias (key) in the request body, the scope and the parent id of the alias (project id, environment id or service id)
        - The system will create a new variable at the requested level with the same value as the one corresponding to the variable id passed as path parameter.
        - The response body will contain the newly created variable
        - Information regarding the aliased_variable will be exposed in the "aliased_variable" or in the "aliased_secret" field of the newly created variable
        - You can't create an alias on an alias
      operationId: createVariableAlias
      parameters:
        - $ref: '#/components/parameters/variableId'
      tags:
        - Variable Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableAliasRequest'
      responses:
        '201':
          description: Create variable alias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '400':
          description: Can't create an alias on a higher scope. Aliases can only be created from one scope to a lower scope. Scope hierarchy is ORGANIZATION > PROJECT > ENVIRONMENT > CONTAINER
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/variable/{variableId}/override':
    post:
      summary: Create a variable override
      description: |
        - Allows you to override a variable that has a higher scope.
        - You have to specify a value (override) in the request body and the scope and the parent id of the variable to override (project id, environment id or service id)
        - The system will create a new environment variable at the requested level with the same key as the one corresponding to the variable id passed as path parameter.
        - The response body will contain the newly created variable
        - Information regarding the overridden_variable will be exposed in the "overridden_variable" or in the "overridden_secret" field of the newly created variable
      operationId: createVariableOverride
      parameters:
        - $ref: '#/components/parameters/variableId'
      tags:
        - Variable Main Calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableOverrideRequest'
      responses:
        '201':
          description: Create variable override
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '400':
          description: Can't create an override on a higher scope. Overrides can only be created from one scope to a lower scope. Scope hierarchy is ORGANIZATION > PROJECT > ENVIRONMENT > APPLICATION
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/variable/{variableId}':
    delete:
      summary: Delete a variable
      description: |
        - To delete a variable
        - You can't delete a BUILT_IN variable
        - If you delete a variable having override or alias, the associated override/alias will be deleted as well
      operationId: deleteVariable
      parameters:
        - $ref: '#/components/parameters/variableId'
      tags:
        - Variable Main Calls
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Edit a variable
      description: |
        - You can't edit a BUILT_IN variable
        - For an override, you can't edit the key
        - For an alias, you can't edit the value
      operationId: editVariable
      parameters:
        - $ref: '#/components/parameters/variableId'
      tags:
        - Variable Main Calls
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableEditRequest'
      responses:
        '200':
          description: Edited variable value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  parameters:
    applicationId:
      name: applicationId
      in: path
      description: Application ID
      required: true
      schema:
        type: string
        format: uuid
    backupId:
      name: backupId
      in: path
      description: Database Backup ID
      required: true
      schema:
        type: string
        format: uuid
    clusterId:
      name: clusterId
      in: path
      description: Cluster ID
      required: true
      schema:
        type: string
        format: uuid
    containerId:
      name: containerId
      in: path
      description: Container ID
      required: true
      schema:
        type: string
        format: uuid
    containerRegistryId:
      name: containerRegistryId
      in: path
      description: Container Registry ID
      required: true
      schema:
        type: string
        format: uuid
    credentialsId:
      name: credentialsId
      in: path
      description: Credentials ID
      required: true
      schema:
        type: string
        format: uuid
    creditCardId:
      name: creditCardId
      in: path
      description: Credit Card ID
      required: true
      schema:
        type: string
        format: uuid
    customDomainId:
      name: customDomainId
      in: path
      description: Custom Domain ID
      required: true
      schema:
        type: string
        format: uuid
    customRoleId:
      name: customRoleId
      in: path
      description: Custom Role ID
      required: true
      schema:
        type: string
        format: uuid
    databaseId:
      name: databaseId
      in: path
      description: Database ID
      required: true
      schema:
        type: string
        format: uuid
    databaseType:
      name: databaseType
      in: path
      description: Database type
      required: true
      schema:
        type: string
        example: MYSQL
    deploymentStageId:
      name: deploymentStageId
      in: path
      description: Deployment Stage ID
      required: true
      schema:
        type: string
        format: uuid
    stageId:
      name: stageId
      in: path
      description: Deployment Stage ID
      required: true
      schema:
        type: string
        format: uuid
    deploymentRestrictionId:
      name: deploymentRestrictionId
      in: path
      description: Deployment Restriction ID
      required: true
      schema:
        type: string
        format: uuid
    deploymentRuleId:
      name: deploymentRuleId
      in: path
      description: Deployment Rule ID
      required: true
      schema:
        type: string
        format: uuid
    environmentId:
      name: environmentId
      in: path
      description: Environment ID
      required: true
      schema:
        type: string
        format: uuid
    environmentVariableId:
      name: environmentVariableId
      in: path
      description: Environment Variable ID
      required: true
      schema:
        type: string
        format: uuid
    eventId:
      name: eventId
      in: path
      description: Event ID
      required: true
      schema:
        type: string
        format: uuid
    inviteId:
      name: inviteId
      in: path
      description: Invite ID
      required: true
      schema:
        type: string
        format: uuid
    region:
      name: region
      in: path
      description: region name
      required: true
      schema:
        type: string
        example: us-east-2
    jobId:
      name: jobId
      in: path
      description: Job ID
      required: true
      schema:
        type: string
        format: uuid
    gitCommitId:
      name: gitCommitId
      in: query
      description: Git Commit ID
      schema:
        type: string
        format: uuid
    instanceId:
      name: instanceId
      in: path
      description: Instance ID
      required: true
      schema:
        type: string
        format: uuid
    invoiceId:
      name: invoiceId
      in: path
      description: Invoice ID
      required: true
      schema:
        type: string
        format: uuid
    lastId:
      name: lastId
      in: query
      description: ID of the last object after which to return all results
      required: true
      schema:
        type: string
        format: uuid
    lastSeconds:
      name: lastSeconds
      in: query
      description: Up to how many seconds in the past to ask analytics results
      required: true
      schema:
        type: number
    limit:
      name: limit
      in: query
      description: How many items to return at one time (max 100)
      required: false
      schema:
        type: integer
        format: int32
    organizationId:
      name: organizationId
      in: path
      description: Organization ID
      required: true
      schema:
        type: string
        format: uuid
    projectId:
      name: projectId
      in: path
      description: Project ID
      required: true
      schema:
        type: string
        format: uuid
    secretId:
      name: secretId
      in: path
      description: Secret ID
      required: true
      schema:
        type: string
        format: uuid
    startId:
      name: startId
      in: query
      description: Starting point after which to return results
      required: false
      schema:
        type: string
        format: uuid
    status:
      name: status
      in: query
      description: status
      schema:
        type: string
    tagId:
      name: tagId
      in: path
      description: Tag ID
      required: true
      schema:
        type: string
        format: uuid
    tail:
      name: tail
      in: query
      description: Number of last results to return
      required: true
      schema:
        type: integer
        format: int32
    targetApplicationId:
      name: targetApplicationId
      in: path
      description: Target application ID
      required: true
      schema:
        type: string
        format: uuid
    targetDatabaseId:
      name: targetDatabaseId
      in: path
      description: Target database ID
      required: true
      schema:
        type: string
        format: uuid
    serviceId:
      name: serviceId
      in: path
      description: Service ID of an application/job/container/database
      required: true
      schema:
        type: string
        format: uuid
    webhookId:
      name: webhookId
      in: path
      description: Webhook ID
      required: true
      schema:
        type: string
        format: uuid
    variableId:
      name: variableId
      in: path
      description: Variable ID
      required: true
      schema:
        type: string
        format: uuid
    helmId:
      name: helmId
      in: path
      description: Helm ID
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    AccountInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        nickname:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        profile_picture_url:
          type: string
        communication_email:
          type: string
    AccountInfoEditRequest:
      type: object
      properties:
        communication_email:
          type: string
          nullable: false
          description: The email to be used for official Qovery communications
    SecretAlias:
      type: object
      required:
        - id
        - key
        - scope
        - mount_path
        - variable_type
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
          example: QOVERY_DATABASE_PSQL_NAME
        mount_path:
          type: string
        scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        variable_type:
          $ref: '#/components/schemas/APIVariableTypeEnum'
    Application:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ServiceStorage'
        - type: object
          required:
            - healthchecks
            - name
            - environment
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            git_repository:
              $ref: '#/components/schemas/ApplicationGitRepository'
            maximum_cpu:
              type: integer
              description: Maximum cpu that can be allocated to the application based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
              example: 16000
            maximum_memory:
              type: integer
              description: Maximum memory that can be allocated to the application based on organization cluster configuration. unit is MB. 1024 MB = 1GB
              example: 16384
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this application
              nullable: true
            build_mode:
              $ref: '#/components/schemas/BuildModeEnum'
            dockerfile_path:
              type: string
              description: The path of the associated Dockerfile. Only if you are using build_mode = DOCKER
              nullable: true
            buildpack_language:
              $ref: '#/components/schemas/BuildPackLanguageEnum'
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no application running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthchecks:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Specify if the environment preview option is activated or not for this application.  
                If activated, a preview environment will be automatically cloned at each pull request.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
              default: true
            ports:
              $ref: '#/components/schemas/ServicePortResponseList'
            arguments:
              type: array
              items:
                type: string
            entrypoint:
              type: string
              description: optional entrypoint when launching container
            auto_deploy:
              type: boolean
              description: Specify if the application will be automatically updated after receiving a new commit.
    ApplicationAdvancedSettings:
      type: object
      properties:
        deployment.custom_domain_check_enabled:
          type: boolean
          description: disable custom domain check when deploying an application
          default: true
        deployment.termination_grace_period_seconds:
          type: integer
          description: define how long in seconds an application is supposed to be stopped gracefully
          default: 60
        deployment.affinity.node.required:
          type: object
          additionalProperties:
            type: string
          description: Set pod placement on specific Kubernetes nodes labels
        deployment.antiaffinity.pod:
          type: string
          default: Preferred
          enum:
            - Preferred
            - Requirred
          description: |
            Define how you want pods affinity to behave:
            * `Preferred` allows, but does not require, pods of a given service are not co-located (or co-hosted) on a single node
            * `Requirred` ensures that the pods of a given service are not co-located (or co-hosted) on a single node (safer in term of availability but can be expensive depending on the number of replicas)
        deployment.update_strategy.type:
          type: string
          enum:
            - RollingUpdate
            - Recreate
          default: RollingUpdate
          description: |
            * `RollingUpdate` gracefully rollout new versions, and automatically rollback if the new version fails to start
            * `Recreate` stop all current versions and create new ones once all old ones have been shutdown
        deployment.update_strategy.rolling_update.max_unavailable_percent:
          type: integer
          default: 25
          description: Define the percentage of a maximum number of pods that can be unavailable during the update process
        deployment.update_strategy.rolling_update.max_surge_percent:
          type: integer
          default: 25
          description: Define the percentage of the maximum number of pods that can be created over the desired number of pods
        build.timeout_max_sec:
          type: integer
          default: 1800
        build.cpu_max_in_milli:
          type: integer
          description: define the max cpu resources (in milli)
          default: 4000
        build.ram_max_in_gib:
          type: integer
          description: define the max ram resources (in gib)
          default: 8
        network.ingress.proxy_body_size_mb:
          type: integer
          default: 100
        network.ingress.enable_cors:
          type: boolean
          default: false
        network.ingress.cors_allow_origin:
          type: string
          default: '*'
        network.ingress.cors_allow_methods:
          type: string
          default: 'GET, PUT, POST, DELETE, PATCH, OPTIONS'
        network.ingress.cors_allow_headers:
          type: string
          default: 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization'
        network.ingress.proxy_buffer_size_kb:
          type: integer
          default: 4
          description: header buffer size used while reading response header from upstream
        network.ingress.keepalive_time_seconds:
          type: integer
          default: 3600
          description: Limits the maximum time (in seconds) during which requests can be processed through one keepalive connection
        network.ingress.keepalive_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) during which an idle keepalive connection to an upstream server will stay open.
        network.ingress.send_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for transmitting a response to the client
        network.ingress.proxy_connect_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for establishing a connection to a proxied server
        network.ingress.proxy_send_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for transmitting a request to the proxied server
        network.ingress.proxy_read_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for reading a response from the proxied server
        network.ingress.proxy_buffering:
          type: string
          default: 'on'
          description: Allows to enable or disable nginx `proxy-buffering`
        network.ingress.proxy_request_buffering:
          type: string
          default: 'on'
          description: Allows to enable or disable nginx `proxy-request-buffering`
        network.ingress.whitelist_source_range:
          type: string
          description: |
            list of source ranges to allow access to ingress proxy. 
            This property can be used to whitelist source IP ranges for ingress proxy.
            The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1
            To allow all source ranges, set 0.0.0.0/0.
          default: 0.0.0.0/0
        network.ingress.denylist_source_range:
          type: string
          default: ''
          description: |
            list of source ranges to deny access to ingress proxy. 
            This property can be used to blacklist source IP ranges for ingress proxy.
            The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1
        network.ingress.basic_auth_env_var:
          type: string
          default: ''
          description: |
            Set the name of an environment variable to use as a basic authentication (`login:crypted_password`) from `htpasswd` command.
        network.ingress.enable_sticky_session:
          type: boolean
          default: false
          description: |
            Enable the load balancer to bind a user's session to a specific target.
            This ensures that all requests from the user during the session are sent to the same target
        network.ingress.grpc_send_timeout_seconds:
          type: integer
          description: Sets a timeout (in seconds) for transmitting a request to the grpc server
          default: 60
        network.ingress.grpc_read_timeout_seconds:
          type: integer
          description: Sets a timeout (in seconds) for transmitting a request to the grpc server
          default: 60
        network.ingress.extra_headers:
          type: string
          default: '{}'
          description: Allows to define response headers
          example: '{"X-Frame-Options":"DENY ","X-Content-Type-Options":"nosniff"}'
        hpa.cpu.average_utilization_percent:
          type: integer
          description: Percentage value of cpu usage at which point pods should scale up.
          default: 60
        security.service_account_name:
          type: string
          default: ''
          description: |
            Allows you to set an existing Kubernetes service account name
        security.read_only_root_filesystem:
          type: boolean
          default: false
          description: |
            Mounts the container's root filesystem as read-only
    ApplicationCurrentScale:
      type: object
      properties:
        min:
          type: integer
        max:
          type: integer
        running:
          type: integer
        running_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        updated_at:
          type: string
          readOnly: true
          format: date-time
    ApplicationDeploymentRestriction:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ApplicationDeploymentRestrictionRequest'
    ApplicationDeploymentRestrictionRequest:
      type: object
      required:
        - mode
        - type
        - value
      properties:
        mode:
          $ref: '#/components/schemas/DeploymentRestrictionModeEnum'
        type:
          $ref: '#/components/schemas/DeploymentRestrictionTypeEnum'
        value:
          type: string
          description: 'For `PATH` restrictions, the value must not start with `/`'
          example: application1/src/
    ApplicationDeploymentRestrictionResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDeploymentRestriction'
    ApplicationEditRequest:
      allOf:
        - $ref: '#/components/schemas/ServiceStorageRequest'
        - type: object
          required:
            - healthchecks
          properties:
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this application
            git_repository:
              $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
            build_mode:
              $ref: '#/components/schemas/BuildModeEnum'
            dockerfile_path:
              type: string
              description: The path of the associated Dockerfile
            buildpack_language:
              $ref: '#/components/schemas/BuildPackLanguageEnum'
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              default: 500
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              default: 512
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no application running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthchecks:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Specify if the environment preview option is activated or not for this application.  
                If activated, a preview environment will be automatically cloned at each pull request.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
              default: true
            ports:
              $ref: '#/components/schemas/ServicePortResponseList'
            arguments:
              type: array
              items:
                type: string
            entrypoint:
              type: string
              description: optional entrypoint when launching container
            auto_deploy:
              type: boolean
              nullable: true
              description: Specify if the application will be automatically updated after receiving a new commit.
    ApplicationGitRepository:
      type: object
      properties:
        has_access:
          type: boolean
        provider:
          $ref: '#/components/schemas/GitProviderEnum'
        owner:
          type: string
          example: John Doe
        url:
          type: string
          format: uri
        name:
          type: string
          description: repository name
          example: simple-node-app
        branch:
          type: string
        root_path:
          type: string
        deployed_commit_id:
          type: string
          description: Git commit ID corresponding to the deployed version of the app
        deployed_commit_date:
          type: string
          readOnly: true
          format: date-time
          description: Git commit date corresponding to the deployed version of the app
        deployed_commit_contributor:
          type: string
          format: uuid
          description: Git commit user corresponding to the deployed version of the app
        deployed_commit_tag:
          type: string
          example: v1.0.1
        git_token_id:
          type: string
          format: uuid
          nullable: true
    ApplicationGitRepositoryRequest:
      type: object
      required:
        - provider
        - owner
        - name
        - url
      properties:
        url:
          type: string
          description: application git repository URL
          example: 'https://github.com/Qovery/simple-node-app'
        branch:
          type: string
          description: |
            Name of the branch to use. This is optional
            If not specified, then the branch used is the `main` or `master` one
          example: feat/text_xxx
        root_path:
          type: string
          default: /
          description: indicates the root path of the application.
        git_token_id:
          type: string
          format: uuid
          description: The git token id on Qovery side
          nullable: true
    ApplicationNetwork:
      type: object
      properties:
        sticky_session:
          type: boolean
          description: |
            Specify if the sticky session option (also called persistant session) is activated or not for this application.
            If activated, user will be redirected by the load balancer to the same instance each time he access to the application. 
          default: false
    ApplicationNetworkRequest:
      type: object
      properties:
        sticky_session:
          type: boolean
          description: |
            Specify if the sticky session option (also called persistant session) is activated or not for this application.
            If activated, user will be redirected by the load balancer to the same instance each time he access to the application. 
          default: false
    ServicePort:
      type: object
      required:
        - id
        - internal_port
        - publicly_accessible
        - protocol
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        internal_port:
          type: integer
          example: 8080
          description: The listening port of your service.
        external_port:
          type: integer
          example: 8080
          description: The exposed port for your service. This is optional. If not set a default port will be used.
        publicly_accessible:
          type: boolean
          description: Expose the port to the world
        is_default:
          type: boolean
          description: is the default port to use for domain
        protocol:
          $ref: '#/components/schemas/PortProtocolEnum'
    ServicePortResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ServicePort'
    ServicePortRequest:
      type: object
      properties:
        ports:
          type: array
          items:
            type: object
            required:
              - internal_port
              - publicly_accessible
            properties:
              name:
                type: string
              internal_port:
                type: integer
                example: 8080
                description: The listening port of your service.
              external_port:
                type: integer
                example: 8080
                description: The exposed port for your service. This is optional. If not set a default port will be used.
              publicly_accessible:
                type: boolean
                description: Expose the port to the world
              is_default:
                type: boolean
                description: is the default port to use for domain
              protocol:
                $ref: '#/components/schemas/PortProtocolEnum'
    ApplicationRequest:
      allOf:
        - $ref: '#/components/schemas/ServiceStorageRequest'
        - $ref: '#/components/schemas/ServicePortRequest'
        - type: object
          required:
            - name
            - git_repository
            - healthchecks
          properties:
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this application
              nullable: true
            git_repository:
              $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
            build_mode:
              $ref: '#/components/schemas/BuildModeEnum'
            dockerfile_path:
              type: string
              description: The path of the associated Dockerfile. Only if you are using build_mode = DOCKER
              nullable: true
            buildpack_language:
              $ref: '#/components/schemas/BuildPackLanguageEnum'
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              default: 500
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              default: 512
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no application running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthchecks:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Specify if the environment preview option is activated or not for this application.  
                If activated, a preview environment will be automatically cloned at each pull request.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
              default: true
            arguments:
              type: array
              items:
                type: string
            entrypoint:
              type: string
              description: optional entrypoint when launching container
            auto_deploy:
              type: boolean
              nullable: true
              description: Specify if the application will be automatically updated after receiving a new commit.
    ApplicationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    ServiceStorage:
      type: object
      properties:
        storage:
          type: array
          items:
            type: object
            required:
              - id
              - type
              - size
              - mount_point
            properties:
              id:
                type: string
                format: uuid
              type:
                $ref: '#/components/schemas/StorageTypeEnum'
              size:
                type: integer
                description: unit is GB
                example: 16
              mount_point:
                type: string
                example: /mnt/images
    ServiceStorageRequest:
      type: object
      properties:
        storage:
          type: array
          items:
            type: object
            required:
              - type
              - size
              - mount_point
            properties:
              id:
                type: string
                format: uuid
              type:
                $ref: '#/components/schemas/StorageTypeEnum'
              size:
                type: integer
                description: |
                  unit is GB
                  Minimum size is 4 GB
                example: 16
              mount_point:
                type: string
                example: /mnt/images
    AvailableContainerRegistryResponse:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/ContainerRegistryKindEnum'
        required_config:
          type: object
          additionalProperties: true
        is_mandatory:
          type: boolean
    AvailableContainerRegistryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AvailableContainerRegistryResponse'
    AwsCredentialsRequest:
      type: object
      required:
        - name
        - access_key_id
        - secret_access_key
      properties:
        name:
          type: string
        access_key_id:
          type: string
        secret_access_key:
          type: string
    Backup:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/BackupRequest'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/Status'
    BackupPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - $ref: '#/components/schemas/BackupResponseList'
    BackupRequest:
      type: object
      required:
        - name
        - message
      properties:
        name:
          type: string
        message:
          type: string
    BackupResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Backup'
    Base:
      type: object
      required:
        - id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: date-time
        updated_at:
          type: string
          readOnly: true
          format: date-time
    BillingEnd:
      type: object
      properties:
        billing_ended_on:
          type: string
          format: date-time
    BillingInfo:
      type: object
      properties:
        first_name:
          type: string
          example: Forrest
          nullable: true
        last_name:
          type: string
          example: Gump
          nullable: true
        email:
          type: string
          format: email
          example: forrest@gump.com
          description: 'email used for billing, and to receive all invoices by email'
          nullable: true
        address:
          type: string
          example: 21 Jenny Street
          nullable: true
        city:
          type: string
          example: Greenbow
          nullable: true
        zip:
          type: string
          example: '36744'
          nullable: true
        state:
          type: string
          example: Alabama
          description: only for US
          nullable: true
        country_code:
          type: string
          description: ISO code of the country
          example: US
          nullable: true
        company:
          type: string
          description: name of the company to bill
          nullable: true
        vat_number:
          type: string
          nullable: true
    BillingInfoRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
        - address
        - zip
        - country_code
        - city
      properties:
        first_name:
          type: string
          example: Forrest
        last_name:
          type: string
          example: Gump
        email:
          type: string
          format: email
          example: forrest@gump.com
          description: 'email used for billing, and to receive all invoices by email'
        address:
          type: string
          example: 21 Jenny Street
        city:
          type: string
          example: Greenbow
        zip:
          type: string
          example: '36744'
        state:
          type: string
          example: Alabama
          description: only for US
        country_code:
          type: string
          description: ISO code of the country
          example: US
        company:
          type: string
          description: name of the company to bill
        vat_number:
          type: string
    BillingPeriod:
      allOf:
        - $ref: '#/components/schemas/BillingStart'
        - $ref: '#/components/schemas/BillingEnd'
    BillingStart:
      type: object
      properties:
        billing_started_on:
          type: string
          format: date-time
    BillingStatus:
      type: object
      properties:
        is_valid:
          type: boolean
        message:
          type: string
    Budget:
      type: object
      properties:
        total_in_cents:
          type: integer
          example: 30000
        total:
          type: number
          example: 300
        currency_code:
          type: string
          example: USD
    BudgetThreshold:
      allOf:
        - $ref: '#/components/schemas/Budget'
    BuildModeEnum:
      type: string
      enum:
        - BUILDPACKS
        - DOCKER
      description: |
        `DOCKER` requires `dockerfile_path`
        `BUILDPACKS` does not require any `dockerfile_path`
      default: BUILDPACKS
    BuildPackLanguageEnum:
      type: string
      description: Development language of the application
      nullable: true
      enum:
        - CLOJURE
        - GO
        - GRADLE
        - GRAILS
        - JAVA
        - JVM
        - NODE_JS
        - PHP
        - PLAY
        - PYTHON
        - SCALA
    CloneRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        cluster_id:
          type: string
          format: uuid
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
        apply_deployment_rule:
          type: boolean
          default: false
    CloneApplicationRequest:
      type: object
      required:
        - name
        - environment_id
      properties:
        name:
          type: string
        environment_id:
          type: string
          format: uuid
    CloneContainerRequest:
      type: object
      required:
        - name
        - environment_id
      properties:
        name:
          type: string
        environment_id:
          type: string
          format: uuid
    CloneDatabaseRequest:
      type: object
      required:
        - name
        - environment_id
      properties:
        name:
          type: string
        environment_id:
          type: string
          format: uuid
    CloneJobRequest:
      type: object
      required:
        - name
        - environment_id
      properties:
        name:
          type: string
        environment_id:
          type: string
          format: uuid
    CloudProvider:
      type: object
      properties:
        short_name:
          type: string
        name:
          type: string
        logo_url:
          type: string
        regions:
          type: array
          items:
            $ref: '#/components/schemas/ClusterRegion'
    CloudProviderEnum:
      type: string
      enum:
        - AWS
        - DO
        - SCW
    CloudProviderResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CloudProvider'
    Cluster:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - name
            - cloud_provider
            - region
          properties:
            name:
              type: string
              description: name is case-insensitive
            description:
              type: string
            region:
              type: string
            cloud_provider:
              $ref: '#/components/schemas/CloudProviderEnum'
            min_running_nodes:
              type: integer
              default: 1
            max_running_nodes:
              type: integer
              default: 1
            disk_size:
              type: integer
              example: 50
              default: 20
              description: Unit is in GB. The disk size to be used for the node configuration
            instance_type:
              type: string
              example: T3A_LARGE
              description: 'the instance type to be used for this cluster. The list of values can be retrieved via the endpoint /{CloudProvider}/instanceType'
            kubernetes:
              $ref: '#/components/schemas/KubernetesEnum'
            cpu:
              type: integer
              example: 10000
              description: unit is millicores (m). 1000m = 1 cpu
            memory:
              type: integer
              example: 4096
              description: unit is MB. 1024 MB = 1GB
            estimated_cloud_provider_cost:
              type: integer
              description: 'This is an estimation of the cost this cluster will represent on your cloud proider bill, based on your current configuration'
            status:
              $ref: '#/components/schemas/ClusterStateEnum'
            has_access:
              type: boolean
            version:
              type: string
            is_default:
              type: boolean
            production:
              type: boolean
              description: specific flag to indicate that this cluster is a production one
            ssh_keys:
              description: Indicate your public ssh_key to remotely connect to your EC2 instance.
              type: array
              items:
                type: string
            features:
              type: array
              items:
                $ref: '#/components/schemas/ClusterFeature'
            deployment_status:
              $ref: '#/components/schemas/ClusterDeploymentStatusEnum'
    ClusterDeleteMode:
      type: string
      description: |
        Indicates the mode to apply on cluster deletion  
        **"hard delete"** means that we delete directly from our database, this is different from a **"trigger delete"** that cleans the resource
        - `DEFAULT`: this is the normal way, trigger delete the cluster only if no environment linked to this cluster remains
        - `DELETE_CLUSTER_AND_QOVERY_CONFIG`: hard delete environments linked to this cluster then trigger delete the cluster
        - `DELETE_QOVERY_CONFIG`: ⚠️ ⚠️ ⚠️ hard delete environments linked to this cluster then hard delete the cluster - whole cluster ressources **are not deleted** on our side and must be deleted on your side
      enum:
        - DEFAULT
        - DELETE_CLUSTER_AND_QOVERY_CONFIG
        - DELETE_QOVERY_CONFIG
      example: DEFAULT
      default: DEFAULT
    ClusterLogs:
      type: object
      properties:
        type:
          type: string
          description: log level
          example: info
        timestamp:
          type: string
          description: log date creation
          format: date-time
          example: '2022-06-22T14:20:17.733084815Z'
        step:
          description: log step
          example: Create
          type: string
          enum:
            - LoadConfiguration
            - Create
            - Created
            - CreateError
            - Pause
            - Paused
            - PauseError
            - Delete
            - Deleted
            - DeleteError
            - RetrieveClusterConfig
            - RetrieveClusterResources
            - ValidateSystemRequirements
            - UnderMigration
            - Unknown
        message:
          type: object
          properties:
            safe_message:
              type: string
              description: log global message
              example: Preparing to delete EKS cluster.
        error:
          type: object
          description: Present only for `error` log
          properties:
            tag:
              type: string
              description: log error tag
              example: CANNOT_UNINSTALL_HELM_CHART
            user_log_message:
              type: string
              description: log details about the error
              example: Wasn't able to delete all objects type Cert-Manager
            link:
              type: string
              description: link to our documentation
            hint_message:
              type: string
              description: hint the user can follow
            event_details:
              type: object
              properties:
                provider_kind:
                  type: string
                  description: cloud provider used
                  example: aws
                region:
                  type: string
                  example: eu-west-3
                transmitter:
                  type: object
                  properties:
                    type:
                      type: string
                      example: kubernetes
                    id:
                      type: string
                      example: za6ecdf3f
                    name:
                      type: string
                      example: cluster-name
            underlying_error:
              type: object
              properties:
                message:
                  type: string
                  description: technical details about the error
        details:
          type: object
          description: 'Present only for `info`, `warning` and `debug` logs'
          properties:
            provider_kind:
              type: string
              description: cloud provider used
              example: aws
            region:
              type: string
              example: eu-west-3
            transmitter:
              type: object
              properties:
                type:
                  type: string
                  example: kubernetes
                id:
                  type: string
                  example: za6ecdf3f
                name:
                  type: string
                  example: cluster-name
    ClusterCloudProviderInfo:
      type: object
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProviderEnum'
        credentials:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
        region:
          type: string
    ClusterCloudProviderInfoRequest:
      type: object
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProviderEnum'
        credentials:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
        region:
          type: string
    ClusterCredentials:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ClusterCredentialsResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterCredentials'
    ClusterFeature:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: false
        description:
          type: string
          nullable: true
        cost_per_month_in_cents:
          type: integer
          nullable: true
          example: 9900
        cost_per_month:
          type: number
          nullable: true
          example: 99
        currency_code:
          type: string
          nullable: true
          example: USD
        value_type:
          type: string
          nullable: false
          enum:
            - BOOLEAN
        value:
          oneOf:
            - type: string
            - type: boolean
          nullable: true
        is_value_updatable:
          type: boolean
          default: false
        accepted_values:
          type: array
          items:
            oneOf:
              - type: string
              - type: boolean
    ClusterFeatureResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterFeature'
    ClusterInstanceTypeResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            required:
              - type
              - name
              - cpu
              - ram_in_gb
              - bandwidth_in_gbps
              - bandwidth_guarantee
            properties:
              type:
                type: string
                example: T3A_XLARGE
              name:
                type: string
                example: t3a.xlarge
              cpu:
                type: integer
                example: 2
              ram_in_gb:
                type: integer
                example: 8
              bandwidth_in_gbps:
                type: string
                example: '5.2'
              bandwidth_guarantee:
                type: string
                example: UpTo
              architecture:
                type: string
                example: ARM64
    ClusterReadinessStatus:
      type: object
      properties:
        is_ready:
          type: boolean
    ClusterRegion:
      type: object
      required:
        - name
        - country_code
        - country
        - city
      properties:
        name:
          type: string
        country_code:
          type: string
        country:
          type: string
        city:
          type: string
    ClusterRegionResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterRegion'
    ClusterRequest:
      type: object
      required:
        - name
        - cloud_provider
        - region
      properties:
        name:
          type: string
          description: name is case-insensitive
        description:
          type: string
        region:
          type: string
        cloud_provider:
          $ref: '#/components/schemas/CloudProviderEnum'
        min_running_nodes:
          type: integer
          default: 1
        max_running_nodes:
          type: integer
          default: 1
        disk_size:
          type: integer
          example: 50
          default: 20
          description: Unit is in GB. The disk size to be used for the node configuration
        instance_type:
          type: string
          example: T3A_LARGE
          description: 'the instance type to be used for this cluster. The list of values can be retrieved via the endpoint /{CloudProvider}/instanceType'
        kubernetes:
          $ref: '#/components/schemas/KubernetesEnum'
        production:
          type: boolean
          description: specific flag to indicate that this cluster is a production one
        ssh_keys:
          description: Indicate your public ssh_key to remotely connect to your EC2 instance.
          type: array
          items:
            type: string
        features:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                nullable: false
              value:
                oneOf:
                  - type: string
                  - type: boolean
                nullable: true
    ClusterResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
    ClusterLogsResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterLogs'
    ClusterRoutingTable:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              destination:
                type: string
              target:
                type: string
              description:
                type: string
    ClusterRoutingTableRequest:
      type: object
      required:
        - routes
      properties:
        routes:
          type: array
          items:
            type: object
            required:
              - destination
              - target
              - description
            properties:
              destination:
                type: string
              target:
                type: string
              description:
                type: string
    ClusterStatus:
      type: object
      properties:
        cluster_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/ClusterStateEnum'
        is_deployed:
          type: boolean
    ClusterStatusGet:
      type: object
      properties:
        cluster_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/ClusterStateEnum'
        is_deployed:
          type: boolean
        last_execution_id:
          type: string
          example: f73e3833-922a-48a5-9dbd-6163f43f9143-1656410242
    ClusterStatusResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClusterStatusGet'
    ClusterAdvancedSettings:
      type: object
      properties:
        aws.cloudwatch.eks_logs_retention_days:
          type: integer
          default: 90
          description: Set the number of retention days for EKS Cloudwatch logs
        aws.vpc.enable_s3_flow_logs:
          type: boolean
          default: false
          description: Enable flow logs for on the VPC and store them in an S3 bucket
        aws.vpc.flow_logs_retention_days:
          type: integer
          default: 365
          description: Set the number of retention days for flow logs. Disable with value "0"
        loki.log_retention_in_week:
          type: integer
          default: 12
          description: For how long in week loki is going to keep logs of your applications
        registry.image_retention_time:
          type: integer
          default: 31536000
          description: Configure the number of seconds before cleaning images in the registry
        cloud_provider.container_registry.tags:
          type: object
          additionalProperties:
            type: string
          description: Add additional tags on the cluster dedicated registry
        load_balancer.size:
          type: string
          default: lb-s
          description: Select the size of the main load_balancer (only effective for Scaleway)
        database.postgresql.deny_public_access:
          type: boolean
          default: false
          description: Deny public access to any PostgreSQL database
        database.postgresql.allowed_cidrs:
          type: array
          default:
            - 0.0.0.0/0
          items:
            type: string
          description: List of CIDRs allowed to access the PostgreSQL database
        database.mysql.deny_public_access:
          type: boolean
          default: false
          description: Deny public access to any MySql database
        database.mysql.allowed_cidrs:
          type: array
          default:
            - 0.0.0.0/0
          items:
            type: string
          description: List of CIDRs allowed to access the MySql database
        database.mongodb.deny_public_access:
          type: boolean
          default: false
          description: Deny public access to any MongoDB/DocumentDB database
        database.mongodb.allowed_cidrs:
          type: array
          default:
            - 0.0.0.0/0
          items:
            type: string
          description: List of CIDRs allowed to access the MongoDB/DocumentDB database
        database.redis.deny_public_access:
          type: boolean
          default: false
          description: Deny public access to any Redis database
        database.redis.allowed_cidrs:
          type: array
          default:
            - 0.0.0.0/0
          items:
            type: string
          description: List of CIDRs allowed to access the Redis database
        aws.iam.admin_group:
          type: string
          default: Admins
          description: AWS IAM group name with cluster access
        aws.eks.ec2.metadata_imds:
          type: string
          default: optional
          enum:
            - optional
            - required
          description: |
            Specify the [IMDS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) version you want to use:
              * `required`: IMDS V2 only
              * `optional`: IMDS V1 + V2
        pleco.resources_ttl:
          type: integer
          default: -1
          deprecated: true
        registry.mirroring_mode:
          $ref: '#/components/schemas/RegistryMirroringModeEnum'
        nginx.vcpu.request_in_milli:
          type: integer
          default: 100
          description: vcpu request in millicores
        nginx.vcpu.limit_in_milli:
          type: integer
          default: 500
          description: vcpu limit in millicores
        nginx.memory.request_in_mib:
          type: integer
          default: 768
          description: memory request in MiB
        nginx.memory.limit_in_mib:
          type: integer
          default: 768
          description: memory limit in MiB
        nginx.hpa.cpu_utilization_percentage_threshold:
          type: integer
          default: 50
          description: hpa cpu threshold in percentage
        nginx.hpa.memory_utilization_percentage_threshold:
          type: integer
          default: 50
          description: hpa memory threshold in percentage
        nginx.hpa.min_number_instances:
          type: integer
          default: 2
          description: hpa minimum number of instances
        nginx.hpa.max_number_instances:
          type: integer
          default: 25
          description: hpa maximum number of instances
    Commit:
      type: object
      nullable: true
      required:
        - git_commit_id
        - created_at
        - author_name
        - message
        - tag
      properties:
        created_at:
          type: string
          format: date-time
        git_commit_id:
          type: string
        tag:
          type: string
          example: v2.1.1
        message:
          type: string
        author_name:
          type: string
        author_avatar_url:
          type: string
        commit_page_url:
          type: string
    CommitPaginatedResponseList:
      allOf:
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Commit'
        - $ref: '#/components/schemas/PaginationData'
    CommitResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Commit'
    CommunityUsage:
      allOf:
        - $ref: '#/components/schemas/ProjectCurrentCostResponseList'
    CompanySizeEnum:
      type: string
      enum:
        - 1-10
        - 11-50
        - 51-200
        - 201-500
        - 500+
    ContainerAdvancedSettings:
      type: object
      properties:
        deployment.custom_domain_check_enabled:
          type: boolean
          description: disable custom domain check when deploying an application
          default: true
        deployment.termination_grace_period_seconds:
          type: integer
          description: define how long in seconds an application is supposed to be stopped gracefully
          default: 60
        deployment.affinity.node.required:
          type: object
          additionalProperties:
            type: string
          description: Set pod placement on specific Kubernetes nodes labels
        deployment.antiaffinity.pod:
          type: string
          default: Preferred
          enum:
            - Preferred
            - Requirred
          description: |
            Define how you want pods affinity to behave:
            * `Preferred` allows, but does not require, pods of a given service are not co-located (or co-hosted) on a single node
            * `Requirred` ensures that the pods of a given service are not co-located (or co-hosted) on a single node (safer in term of availability but can be expensive depending on the number of replicas)
        deployment.update_strategy.type:
          type: string
          enum:
            - RollingUpdate
            - Recreate
          default: RollingUpdate
          description: |
            * `RollingUpdate` gracefully rollout new versions, and automatically rollback if the new version fails to start
            * `Recreate` stop all current versions and create new ones once all old ones have been shutdown
        deployment.update_strategy.rolling_update.max_unavailable_percent:
          type: integer
          default: 25
          description: Define the percentage of a maximum number of pods that can be unavailable during the update process
        deployment.update_strategy.rolling_update.max_surge_percent:
          type: integer
          default: 25
          description: Define the percentage of the maximum number of pods that can be created over the desired number of pods
        network.ingress.proxy_body_size_mb:
          type: integer
          default: 100
        network.ingress.enable_cors:
          type: boolean
          default: false
        network.ingress.cors_allow_origin:
          type: string
          default: '*'
        network.ingress.cors_allow_methods:
          type: string
          default: 'GET, PUT, POST, DELETE, PATCH, OPTIONS'
        network.ingress.cors_allow_headers:
          type: string
          default: 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization'
        network.ingress.proxy_buffer_size_kb:
          type: integer
          default: 4
          description: header buffer size used while reading response header from upstream
        network.ingress.keepalive_time_seconds:
          type: integer
          default: 3600
          description: Limits the maximum time (in seconds) during which requests can be processed through one keepalive connection
        network.ingress.keepalive_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) during which an idle keepalive connection to an upstream server will stay open.
        network.ingress.send_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for transmitting a response to the client
        network.ingress.proxy_connect_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for establishing a connection to a proxied server
        network.ingress.proxy_send_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for transmitting a request to the proxied server
        network.ingress.proxy_read_timeout_seconds:
          type: integer
          default: 60
          description: Sets a timeout (in seconds) for reading a response from the proxied server
        network.ingress.proxy_buffering:
          type: string
          default: 'on'
          description: Allows to enable or disable nginx `proxy-buffering`
        network.ingress.proxy_request_buffering:
          type: string
          default: 'on'
          description: Allows to enable or disable nginx `proxy-request-buffering`
        network.ingress.grpc_send_timeout_seconds:
          type: integer
          description: Sets a timeout (in seconds) for transmitting a request to the grpc server
          default: 60
        network.ingress.grpc_read_timeout_seconds:
          type: integer
          description: Sets a timeout (in seconds) for transmitting a request to the grpc server
          default: 60
        network.ingress.whitelist_source_range:
          type: string
          description: |
            list of source ranges to allow access to ingress proxy. 
            This property can be used to whitelist source IP ranges for ingress proxy.
            The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1
            To allow all source ranges, set 0.0.0.0/0.
          default: 0.0.0.0/0
        network.ingress.denylist_source_range:
          type: string
          default: ''
          description: |
            list of source ranges to deny access to ingress proxy. 
            This property can be used to blacklist source IP ranges for ingress proxy.
            The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1
        network.ingress.extra_headers:
          type: string
          default: '{}'
          description: Allows to define response headers
          example: '{"X-Frame-Options":"DENY ","X-Content-Type-Options":"nosniff"}'
        network.ingress.basic_auth_env_var:
          type: string
          default: ''
          description: |
            Set the name of an environment variable to use as a basic authentication (`login:crypted_password`) from `htpasswd` command. You can add multiples comma separated values.
        network.ingress.enable_sticky_session:
          type: boolean
          default: false
          description: |
            Enable the load balancer to bind a user's session to a specific target.
            This ensures that all requests from the user during the session are sent to the same target
        security.service_account_name:
          type: string
          default: ''
          description: |
            Allows you to set an existing Kubernetes service account name
        hpa.cpu.average_utilization_percent:
          type: integer
          description: Percentage value of cpu usage at which point pods should scale up.
          default: 60
        security.read_only_root_filesystem:
          type: boolean
          default: false
          description: |
            Mounts the container's root filesystem as read-only
    ContainerCurrentScale:
      type: object
      properties:
        min:
          type: integer
        max:
          type: integer
        running:
          type: integer
        running_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        updated_at:
          type: string
          readOnly: true
          format: date-time
    ContainerNetwork:
      type: object
      properties:
        sticky_session:
          type: boolean
          description: |
            Specify if the sticky session option (also called persistant session) is activated or not for this container.
            If activated, user will be redirected by the load balancer to the same instance each time he access to the container. 
          default: false
    ContainerNetworkRequest:
      type: object
      properties:
        sticky_session:
          type: boolean
          description: |
            Specify if the sticky session option (also called persistant session) is activated or not for this container.
            If activated, user will be redirected by the load balancer to the same instance each time he access to the container. 
          default: false
    ContainerDeployRequest:
      type: object
      required:
        - image_tag
      properties:
        image_tag:
          type: string
          description: Image tag to deploy
    ContainerRegistryKindEnum:
      type: string
      enum:
        - ECR
        - SCALEWAY_CR
        - DOCKER_HUB
        - GITHUB_CR
        - GITLAB_CR
        - PUBLIC_ECR
        - DOCR
        - GENERIC_CR
      description: The type of your container registry
    ContainerRegistryRequest:
      type: object
      required:
        - name
        - kind
        - config
      properties:
        name:
          type: string
        kind:
          $ref: '#/components/schemas/ContainerRegistryKindEnum'
        description:
          type: string
        url:
          type: string
          format: uri
          description: |
            URL of the container registry:
            * For `DOCKER_HUB`: it must be `https://docker.io` (default with 'https://docker.io' if no url provided for `DOCKER_HUB`)
            * For `GITHUB_CR`: it must be `https://ghcr.io` (default with 'https://ghcr.io' if no url provided for `GITHUB_CR`)
            * For `GITLAB_CR`: it must be `https://registry.gitlab.com` (default with 'https://registry.gitlab.com' if no url provided for `GITLAB_CR`)
            * For others: it's required and must start by `https://`
        config:
          type: object
          properties:
            access_key_id:
              type: string
              description: Required if kind is `ECR` or `PUBLIC_ECR`
            secret_access_key:
              type: string
              description: Required if kind is `ECR` or `PUBLIC_ECR`
            region:
              type: string
              description: Required if kind is `ECR` or `SCALEWAY_CR`
            scaleway_access_key:
              type: string
              description: Required if kind is `SCALEWAY_CR`
            scaleway_secret_key:
              type: string
              description: Required if kind is `SCALEWAY_CR`
            username:
              type: string
              description: |
                optional, for kind `DOCKER_HUB`  
                We encourage you to set credentials for Docker Hub due to the limits on the pull rate
            password:
              type: string
              description: |
                optional, for kind `DOCKER_HUB`  
                We encourage you to set credentials for Docker Hub due to the limits on the pull rate
          description: |
            This field is dependent of the container registry kind:
            * `ECR` needs in the config: region, access_key_id, secret_access_key
            * `SCALEWAY_CR` needs in the config: region, scaleway_access_key, scaleway_secret_key
            * `DOCKER_HUB` needs in the config (optional): username, password
            * `GITHUB_CR` needs in the config (optional): username, password
            * `GITLAB_CR` needs in the config (optional): username, password
            * `PUBLIC_ECR` doesn't need credentials info
            * `GENERIC_CR` needs in the config (optional): username, password
            * `DOCR` is not supported anymore
    ContainerRegistryResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            kind:
              $ref: '#/components/schemas/ContainerRegistryKindEnum'
            description:
              type: string
            url:
              type: string
              description: URL of the container registry
            cluster:
              allOf:
                - $ref: '#/components/schemas/Base'
                - type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Id of the cluster of which the registry belongs to
                    name:
                      type: string
                      description: Name of the cluster of which the registry belongs to
    ContainerRegistryProviderDetailsResponse:
      type: object
      required:
        - id
        - name
        - url
        - kind
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        url:
          type: string
          description: URL of the container registry
        kind:
          $ref: '#/components/schemas/ContainerRegistryKindEnum'
    ContainerRegistryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerRegistryResponse'
    ContainerRequest:
      allOf:
        - $ref: '#/components/schemas/ServiceStorageRequest'
        - $ref: '#/components/schemas/ServicePortRequest'
        - type: object
          required:
            - name
            - registry_id
            - image_name
            - tag
            - healthchecks
          properties:
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this container
            registry_id:
              type: string
              description: id of the linked registry
            image_name:
              type: string
              description: |
                The image name pattern differs according to chosen container registry provider:  
                * `ECR`: `repository`
                * `SCALEWAY_CR`: `namespace/image`
                * `DOCKER_HUB`: `image` or `repository/image`
                * `PUBLIC_ECR`: `registry_alias/repository`
            tag:
              type: string
              description: tag of the image container
            arguments:
              type: array
              items:
                type: string
            entrypoint:
              type: string
              description: optional entrypoint when launching container
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              default: 500
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              default: 512
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no container running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthchecks:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Indicates if the 'environment preview option' is enabled for this container.  
                If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
            auto_deploy:
              type: boolean
              nullable: true
              description: |
                Specify if the container will be automatically updated after receiving a new image tag. 
                The new image tag shall be communicated via the "Auto Deploy container" endpoint https://api-doc.qovery.com/#tag/Containers/operation/autoDeployContainerEnvironments
    ContainerResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ServiceStorage'
        - $ref: '#/components/schemas/ContainerSource'
        - type: object
          required:
            - environment
            - name
            - auto_preview
            - cpu
            - memory
            - min_running_instances
            - max_running_instances
            - maximum_cpu
            - maximum_memory
            - healthchecks
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            maximum_cpu:
              type: integer
              description: Maximum cpu that can be allocated to the container based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
              example: 16000
            maximum_memory:
              type: integer
              description: Maximum memory that can be allocated to the container based on organization cluster configuration. unit is MB. 1024 MB = 1GB
              example: 16384
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
              description: give a description to this container
            arguments:
              type: array
              items:
                type: string
            entrypoint:
              type: string
              description: optional entrypoint when launching container
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              example: 1024
            min_running_instances:
              type: integer
              minimum: 0
              description: |
                Minimum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: 0 means that there is no container running.
              default: 1
            max_running_instances:
              type: integer
              description: |
                Maximum number of instances running. This resource auto-scale based on the CPU and Memory consumption.
                Note: -1 means that there is no limit.
              default: 1
            healthchecks:
              $ref: '#/components/schemas/Healthcheck'
            auto_preview:
              type: boolean
              description: |
                Indicates if the 'environment preview option' is enabled for this container.  
                If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
            ports:
              $ref: '#/components/schemas/ServicePortResponseList'
            auto_deploy:
              type: boolean
              description: |
                Specify if the container will be automatically updated after receiving a new image tag. 
                The new image tag shall be communicated via the "Auto Deploy container" endpoint https://api-doc.qovery.com/#tag/Containers/operation/autoDeployContainerEnvironments
    ContainerResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerResponse'
    ContainerSource:
      type: object
      required:
        - image_name
        - tag
        - registry
      properties:
        image_name:
          type: string
          description: |
            The image name pattern differs according to chosen container registry provider:
            * `ECR`: `repository`
            * `SCALEWAY_CR`: `namespace/image`
            * `DOCKER_HUB`: `image` or `repository/image`
            * `PUBLIC_ECR`: `registry_alias/repository`
        tag:
          type: string
          description: tag of the image container
        registry_id:
          type: string
          description: tag of the image container
        registry:
          $ref: '#/components/schemas/ContainerRegistryProviderDetailsResponse'
    Cost:
      type: object
      required:
        - total_in_cents
        - total
        - currency_code
      properties:
        total_in_cents:
          type: integer
          example: 30000
        total:
          type: number
          example: 300
        currency_code:
          type: string
          example: USD
    CostRange:
      type: object
      required:
        - total_in_cents
        - total
        - currency_code
      properties:
        min_cost_in_cents:
          type: integer
          example: 15000
        min_cost:
          type: number
          example: 150
        max_cost_in_cents:
          type: integer
          example: 30000
        max_cost:
          type: number
          example: 300
        currency_code:
          type: string
          example: USD
    Credentials:
      type: object
      required:
        - host
        - port
        - login
        - password
      properties:
        host:
          type: string
        port:
          type: integer
        login:
          type: string
        password:
          type: string
    CredentialsRequest:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    CreditCard:
      type: object
      required:
        - id
        - created_at
        - expiry_month
        - expiry_year
        - last_digit
        - is_expired
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        expiry_month:
          type: integer
          example: 6
        expiry_year:
          type: integer
          example: 2025
        last_digit:
          type: string
          example: '7890'
        is_expired:
          type: boolean
    CreditCardRequest:
      type: object
      required:
        - number
        - cvv
        - expiry_month
        - expiry_year
      properties:
        number:
          type: string
        cvv:
          type: string
        expiry_month:
          type: integer
          example: 6
        expiry_year:
          type: integer
          example: 2025
    CreditCardResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CreditCard'
    CurrentCost:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/PlanEnum'
        remaining_trial_day:
          type: integer
          description: number of days remaining before the end of the trial period
        remaining_credits:
          $ref: '#/components/schemas/RemainingCredits'
        cost:
          $ref: '#/components/schemas/Cost'
    CustomDomain:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/CustomDomainRequest'
        - type: object
          properties:
            validation_domain:
              type: string
              description: URL provided by Qovery. You must create a CNAME on your DNS provider using that URL
            status:
              $ref: '#/components/schemas/CustomDomainStatusEnum'
            generate_certificate:
              type: boolean
              description: to control if a certificate has to be generated for this custom domain by Qovery. The default value is `true`. This flag should be set to `false` if a CDN or other entities are managing the certificate for the specified domain and the traffic is proxied by the CDN to Qovery.
    CustomDomainRequest:
      type: object
      required:
        - domain
        - generate_certificate
      properties:
        domain:
          type: string
          description: your custom domain
          example: my.domain.tld
        generate_certificate:
          type: boolean
          description: to control if a certificate has to be generated for this custom domain by Qovery. The default value is `true`. This flag should be set to `false` if a CDN or other entities are managing the certificate for the specified domain and the traffic is proxied by the CDN to Qovery.
    CustomDomainResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomDomain'
    CustomDomainStatusEnum:
      type: string
      enum:
        - VALIDATION_PENDING
      example: VALIDATION_PENDING
    Database:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/DatabaseRequest'
        - type: object
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            host:
              type: string
            port:
              type: integer
              example: 5432
            maximum_cpu:
              type: integer
              description: Maximum cpu that can be allocated to the database based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
              example: 1250
            maximum_memory:
              type: integer
              description: Maximum memory that can be allocated to the database based on organization cluster configuration. unit is MB. 1024 MB = 1GB
              example: 1024
            disk_encrypted:
              type: boolean
              description: indicates if the database disk is encrypted or not
            instance_type:
              type: string
              example: db.t3.medium
              description: 'Database instance type to be used for this database. The list of values can be retrieved via the endpoint /{CloudProvider}/managedDatabase/instanceType/{region}/{dbType}. This field is null for container DB.'
    DatabaseAccessibilityEnum:
      type: string
      default: PRIVATE
      enum:
        - PRIVATE
        - PUBLIC
    DatabaseConfiguration:
      type: object
      properties:
        database_type:
          $ref: '#/components/schemas/DatabaseTypeEnum'
        version:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseVersionMode'
    DatabaseConfigurationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseConfiguration'
    DatabaseCurrentMetric:
      type: object
      properties:
        cpu:
          type: object
          properties:
            requested_in_float:
              type: number
            consumed_in_number:
              type: number
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        memory:
          type: object
          properties:
            requested_in_mb:
              type: integer
            consumed_in_mb:
              type: integer
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        storage:
          type: object
          properties:
            requested_in_gb:
              type: integer
            consumed_in_gb:
              type: integer
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    DatabaseEditRequest:
      type: object
      properties:
        name:
          type: string
          description: name is case-insensitive
        description:
          type: string
          description: give a description to this database
        version:
          type: string
          example: '10.1'
        accessibility:
          $ref: '#/components/schemas/DatabaseAccessibilityEnum'
        cpu:
          type: integer
          description: |
            unit is millicores (m). 1000m = 1 cpu.
            This field will be ignored for managed DB (instance type will be used instead).
          default: 250
          example: 1250
        memory:
          type: integer
          description: |
            unit is MB. 1024 MB = 1GB
            This field will be ignored for managed DB (instance type will be used instead).
            Default value is linked to the database type:
            - MANAGED: 100
            - CONTAINER
              - POSTGRES: 100
              - REDIS: 100
              - MYSQL: 512
              - MONGODB: 256
          example: 1024
        storage:
          type: integer
          description: unit is GB
          example: 4
        instance_type:
          type: string
          example: db.t3.medium
          description: 'Database instance type to be used for this database. The list of values can be retrieved via the endpoint /{CloudProvider}/managedDatabase/instanceType/{region}/{dbType}. This field SHOULD NOT be set for container DB.'
    DatabaseModeEnum:
      type: string
      enum:
        - CONTAINER
        - MANAGED
    DatabaseRequest:
      type: object
      required:
        - name
        - type
        - version
        - mode
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
          description: give a description to this database
        type:
          $ref: '#/components/schemas/DatabaseTypeEnum'
        version:
          type: string
          example: '10.1'
        mode:
          $ref: '#/components/schemas/DatabaseModeEnum'
        accessibility:
          $ref: '#/components/schemas/DatabaseAccessibilityEnum'
        cpu:
          type: integer
          description: |
            unit is millicores (m). 1000m = 1 cpu
            This field will be ignored for managed DB (instance type will be used instead).
          default: 250
          example: 1250
        instance_type:
          type: string
          example: db.t3.medium
          description: 'Database instance type to be used for this database. The list of values can be retrieved via the endpoint /{CloudProvider}/managedDatabase/instanceType/{region}/{dbType}. This field SHOULD NOT be set for container DB.'
        memory:
          type: integer
          description: |
            unit is MB. 1024 MB = 1GB
            This field will be ignored for managed DB (instance type will be used instead).
            Default value is linked to the database type:
            - MANAGED: `100`
            - CONTAINER
              - POSTGRES: `100`
              - REDIS: `100`
              - MYSQL: `512`
              - MONGODB: `256`
          example: 1024
        storage:
          type: integer
          description: unit is GB
          default: 10
    DatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Database'
    DatabaseTypeEnum:
      type: string
      enum:
        - MONGODB
        - MYSQL
        - POSTGRESQL
        - REDIS
    DatabaseVersionMode:
      type: object
      properties:
        name:
          type: string
          example: '10.1'
        supported_mode:
          $ref: '#/components/schemas/DatabaseModeEnum'
    DeployAllRequest:
      type: object
      properties:
        applications:
          type: array
          items:
            type: object
            required:
              - application_id
            properties:
              application_id:
                type: string
                format: uuid
                description: id of the application to be deployed.
              git_commit_id:
                type: string
                description: Commit ID to deploy. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
        databases:
          type: array
          items:
            type: string
            format: uuid
        containers:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                format: uuid
                description: id of the container to be updated.
              image_tag:
                type: string
                description: new tag for the container. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
        jobs:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: id of the job to be updated.
              image_tag:
                type: string
                description: new tag for the job image. Use only if job is an image source. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
              git_commit_id:
                type: string
                description: Commit ID to deploy. Use only if job is a repository source. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
    DeployRequest:
      type: object
      required:
        - git_commit_id
      properties:
        git_commit_id:
          type: string
          description: Commit ID to deploy
    DeploymentHistory:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
              description: name of the service
            commit:
              $ref: '#/components/schemas/Commit'
            status:
              $ref: '#/components/schemas/DeploymentHistoryStatusEnum'
    DeploymentHistoryApplication:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            commit:
              $ref: '#/components/schemas/Commit'
            status:
              $ref: '#/components/schemas/StateEnum'
    DeploymentHistoryDatabase:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
              description: name of the service
            status:
              $ref: '#/components/schemas/StateEnum'
    DeploymentHistoryContainer:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
              description: name of the container
            status:
              $ref: '#/components/schemas/StateEnum'
            image_name:
              type: string
            tag:
              type: string
            arguments:
              type: array
              items:
                type: string
            entrypoint:
              type: string
    DeploymentHistoryEnvironment:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/StateEnum'
            applications:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryApplication'
            containers:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryContainer'
            databases:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryDatabase'
            jobs:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryJobResponse'
    DeploymentHistoryEnvironmentPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistoryEnvironment'
    DeploymentHistoryPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentHistory'
    DeploymentHistoryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentHistory'
    DeploymentHistoryStatusEnum:
      type: string
      enum:
        - FAILED
        - SUCCESS
    DeploymentRestrictionModeEnum:
      type: string
      description: Match mode will rebuild app only if specified items are updated. Exclude mode will not rebuild app if specified items are updated.
      enum:
        - EXCLUDE
        - MATCH
      example: MATCH
    DeploymentRestrictionTypeEnum:
      type: string
      enum:
        - PATH
      example: PATH
    DeploymentRuleRequest:
      type: object
      required:
        - name
        - mode
        - cluster
        - auto_stop
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
        cluster:
          type: string
          format: uuid
        auto_stop:
          type: boolean
          default: false
        timezone:
          type: string
          nullable: false
          default: Europe/London
          description: specify value only if auto_stop = false
        start_time:
          type: string
          format: date-time
          nullable: true
          description: specify value only if auto_stop = false
        stop_time:
          type: string
          format: date-time
          nullable: true
          description: specify value only if auto_stop = false
        weekdays:
          type: array
          nullable: true
          description: specify value only if auto_stop = false
          items:
            $ref: '#/components/schemas/WeekdayEnum'
    DoCredentialsRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        token:
          type: string
        spaces_access_id:
          type: string
        spaces_secret_key:
          type: string
    Environment:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - name
            - cloud_provider
            - mode
            - cluster_id
            - project
          properties:
            name:
              type: string
              description: name is case insensitive
            project:
              $ref: '#/components/schemas/ReferenceObject'
            last_updated_by:
              type: string
              format: uuid
              description: uuid of the user that made the last update
            cloud_provider:
              type: object
              properties:
                provider:
                  type: string
                  example: aws
                cluster:
                  type: string
                  example: us-east-2
            mode:
              $ref: '#/components/schemas/EnvironmentModeEnum'
            cluster_id:
              type: string
              format: uuid
            cluster_name:
              type: string
              format: string
    EnvironmentResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
    EnvironmentApplicationsCurrentScale:
      type: object
      properties:
        application:
          type: string
          format: uuid
        min:
          type: integer
        max:
          type: integer
        running:
          type: integer
        running_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        updated_at:
          type: string
          readOnly: true
          format: date-time
    EnvironmentApplicationsCurrentScaleResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentApplicationsCurrentScale'
    EnvironmentApplicationsInstanceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            required:
              - application
              - instances
            properties:
              application:
                type: string
                format: uuid
              instances:
                type: array
                items:
                  $ref: '#/components/schemas/Instance'
    EnvironmentApplicationsStorage:
      type: object
      required:
        - application
        - instances
      properties:
        application:
          type: string
          format: uuid
        disks:
          type: array
          items:
            $ref: '#/components/schemas/StorageDisk'
    EnvironmentApplicationsStorageResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentApplicationsStorage'
    EnvironmentApplicationsSupportedLanguage:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Ruby
    EnvironmentApplicationsSupportedLanguageList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentApplicationsSupportedLanguage'
    EnvironmentContainersCurrentScale:
      type: object
      properties:
        container:
          type: string
          format: uuid
        min:
          type: integer
        max:
          type: integer
        running:
          type: integer
        running_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        updated_at:
          type: string
          readOnly: true
          format: date-time
    EnvironmentContainersCurrentScaleResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentContainersCurrentScale'
    EnvironmentContainersStorage:
      type: object
      required:
        - container
        - instances
      properties:
        container:
          type: string
          format: uuid
        disks:
          type: array
          items:
            $ref: '#/components/schemas/StorageDisk'
    EnvironmentContainersStorageResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentContainersStorage'
    EnvironmentDatabasesCurrentMetric:
      type: object
      properties:
        database:
          type: string
          format: uuid
        cpu:
          type: object
          properties:
            requested_in_float:
              type: number
              description: unit is millicores (m). 1000m = 1 cpu
            consumed_in_number:
              type: number
              description: unit is millicores (m). 1000m = 1 cpu
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        memory:
          type: object
          properties:
            requested_in_mb:
              type: integer
              description: unit is MB. 1024 MB = 1GB
            consumed_in_mb:
              type: integer
              description: unit is MB. 1024 MB = 1GB
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        storage:
          type: object
          properties:
            requested_in_gb:
              type: integer
              description: Unit is in GB.
            consumed_in_gb:
              type: integer
              description: Unit is in GB.
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    EnvironmentDatabasesCurrentMetricResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentDatabasesCurrentMetric'
    EnvironmentDeploymentRule:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - timezone
            - start_time
            - stop_time
            - weekdays
          properties:
            on_demand_preview:
              type: boolean
              default: false
            auto_stop:
              type: boolean
              default: false
            auto_preview:
              type: boolean
              default: false
            timezone:
              type: string
              example: UTC
            start_time:
              type: string
              format: date-time
              example: 1970-01-01T08:00:00.000Z
            stop_time:
              type: string
              format: date-time
              example: 1970-01-01T19:00:00.000Z
            weekdays:
              type: array
              items:
                $ref: '#/components/schemas/WeekdayEnum'
    EnvironmentDeploymentRuleEditRequest:
      type: object
      required:
        - timezone
        - start_time
        - stop_time
        - weekdays
      properties:
        on_demand_preview:
          type: boolean
          default: false
        auto_preview:
          type: boolean
          default: false
        auto_stop:
          type: boolean
          default: false
        timezone:
          type: string
          example: UTC
        start_time:
          type: string
          format: date-time
          example: 1970-01-01T08:00:00.000Z
        stop_time:
          type: string
          format: date-time
          example: 1970-01-01T19:00:00.000Z
        weekdays:
          type: array
          items:
            $ref: '#/components/schemas/WeekdayEnum'
    EnvironmentEditRequest:
      type: object
      properties:
        name:
          type: string
        mode:
          $ref: '#/components/schemas/CreateEnvironmentModeEnum'
    EnvironmentLog:
      type: object
      required:
        - id
        - created_at
        - service
        - status
        - message
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        scope:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/EnvironmentLogTypeEnum'
            name:
              type: string
            id:
              type: string
              format: uuid
        state:
          $ref: '#/components/schemas/StatusKindEnum'
        message:
          type: string
          nullable: true
          description: Log message
        execution_id:
          type: string
          description: Only for errors. Helps Qovery team to investigate.
        hint:
          type: string
          example: only for errors. it gives a possible action to the user -- Markdown can be injected
    EnvironmentLogs:
      type: object
      required:
        - type
        - timestamp
        - details
      properties:
        type:
          type: string
          format: string
        timestamp:
          type: string
          format: date-time
        details:
          type: object
          properties:
            organization_id:
              type: string
              format: uuid
            cluster_id:
              type: string
              format: uuid
            execution_id:
              type: string
            transmitter:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                type:
                  type: string
            stage:
              type: object
              properties:
                step:
                  type: string
                id:
                  type: string
                  format: uuid
                  nullable: true
                name:
                  type: string
                  nullable: true
        error:
          type: object
          nullable: true
          properties:
            tag:
              type: string
            user_log_message:
              type: string
            link:
              type: string
            hint_message:
              type: string
            underlying_error:
              type: object
              properties:
                message:
                  type: string
                full_details:
                  type: string
        message:
          type: object
          nullable: true
          properties:
            safe_message:
              type: string
            full_details:
              type: string
    EnvironmentLogPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/EnvironmentLog'
    EnvironmentLogResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentLog'
    EnvironmentLogsResponseList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentLogs'
    EnvironmentLogTypeEnum:
      type: string
      enum:
        - APPLICATION
        - DATABASE
        - ENVIRONMENT
    EnvironmentModeEnum:
      type: string
      enum:
        - DEVELOPMENT
        - PREVIEW
        - PRODUCTION
        - STAGING
      example: PRODUCTION
    CreateEnvironmentModeEnum:
      type: string
      enum:
        - DEVELOPMENT
        - PRODUCTION
        - STAGING
      example: PRODUCTION
    CreateEnvironmentRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        cluster:
          type: string
          format: uuid
        mode:
          $ref: '#/components/schemas/CreateEnvironmentModeEnum'
    EnvironmentStats:
      allOf:
        - $ref: '#/components/schemas/ReferenceObject'
        - $ref: '#/components/schemas/ServiceTotalNumber'
    EnvironmentStatus:
      type: object
      required:
        - id
        - state
        - last_deployment_state
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/StateEnum'
        last_deployment_date:
          type: string
          format: date-time
          nullable: true
        last_deployment_state:
          $ref: '#/components/schemas/StateEnum'
        last_deployment_id:
          type: string
          nullable: true
        total_deployment_duration_in_seconds:
          type: integer
          nullable: true
    EnvironmentStatsResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentStats'
    EnvironmentStatuses:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/EnvironmentStatus'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        databases:
          type: array
          items:
            $ref: '#/components/schemas/Status'
    EnvironmentStatusesWithStages:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/EnvironmentStatus'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentStageWithServicesStatuses'
    EnvironmentStatusList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentStatus'
    EnvironmentTotalNumber:
      type: object
      required:
        - number
      properties:
        environment_total_number:
          type: number
    EnvironmentVariable:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/EnvironmentVariableRequest'
        - type: object
          required:
            - scope
          properties:
            overridden_variable:
              $ref: '#/components/schemas/EnvironmentVariableOverride'
            aliased_variable:
              $ref: '#/components/schemas/EnvironmentVariableAlias'
            scope:
              $ref: '#/components/schemas/APIVariableScopeEnum'
            variable_type:
              $ref: '#/components/schemas/APIVariableTypeEnum'
            service_id:
              type: string
              format: uuid
            service_name:
              type: string
            service_type:
              $ref: '#/components/schemas/LinkedServiceTypeEnum'
            owned_by:
              type: string
              description: 'Entity that created/own the variable (i.e: Qovery, Doppler)'
    EnvironmentVariableAlias:
      type: object
      required:
        - id
        - key
        - value
        - mount_path
        - scope
        - variable_type
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
          example: QOVERY_DATABASE_PSQL_NAME
        value:
          type: string
        mount_path:
          type: string
        scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        variable_type:
          $ref: '#/components/schemas/APIVariableTypeEnum'
    EnvironmentVariableOverride:
      type: object
      required:
        - id
        - key
        - value
        - mount_path
        - scope
        - variable_type
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        value:
          type: string
        mount_path:
          type: string
        scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        variable_type:
          $ref: '#/components/schemas/APIVariableTypeEnum'
    EnvironmentVariableEditRequest:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          description: key is case sensitive
        value:
          type: string
          description: value of the env variable.
    EnvironmentVariableRequest:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          description: key is case sensitive.
        value:
          type: string
          description: value of the env variable.
        mount_path:
          type: string
          nullable: true
          default: null
          description: should be set for file only. variable mount path makes variable a file (where file should be mounted).
    EnvironmentVariableResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
    EnvironmentServiceIdsAllRequest:
      type: object
      properties:
        application_ids:
          type: array
          items:
            type: string
            format: uuid
        container_ids:
          type: array
          items:
            type: string
            format: uuid
        database_ids:
          type: array
          items:
            type: string
            format: uuid
        job_ids:
          type: array
          items:
            type: string
            format: uuid
    APIVariableScopeEnum:
      type: string
      enum:
        - APPLICATION
        - BUILT_IN
        - ENVIRONMENT
        - PROJECT
        - CONTAINER
        - JOB
    APIVariableTypeEnum:
      type: string
      description: |
        type of the environment variable (VALUE, FILE, ALIAS, OVERRIDE or BUIT_IN) 
      enum:
        - VALUE
        - ALIAS
        - OVERRIDE
        - BUILT_IN
        - FILE
    Event:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            commit:
              $ref: '#/components/schemas/Commit'
            status:
              $ref: '#/components/schemas/Status'
            type:
              type: string
              description: DRAFT - we have to specify here all the possible events
            log:
              $ref: '#/components/schemas/ReferenceObject'
    EventPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Event'
    EventResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    GenericObjectCurrentCost:
      type: object
      required:
        - id
        - name
        - consumed_time_in_seconds
        - cost
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        consumed_time_in_seconds:
          type: integer
          example: 3600
        cost:
          $ref: '#/components/schemas/Cost'
    GitAuthProvider:
      type: object
      required:
        - name
        - owner
      properties:
        id:
          type: string
        name:
          type: string
          example: GITHUB
        owner:
          type: string
          example: John Doe
        use_bot:
          type: boolean
    GitAuthProviderResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitAuthProvider'
    GitProviderEnum:
      type: string
      enum:
        - BITBUCKET
        - GITHUB
        - GITLAB
    GitRepository:
      type: object
      required:
        - name
        - url
        - id
      properties:
        id:
          type: string
        name:
          type: string
          example: simple-node-app
        url:
          type: string
          example: 'https://github.com/Qovery/simple-node-app'
        default_branch:
          type: string
          example: master
        is_private:
          type: boolean
    GitRepositoryBranch:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: main
    GitRepositoryBranchResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitRepositoryBranch'
    GitRepositoryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitRepository'
    GitTokenResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - name
            - type
          properties:
            name:
              type: string
            description:
              type: string
            type:
              $ref: '#/components/schemas/GitProviderEnum'
    GitTokenResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GitTokenResponse'
    Healthcheck:
      type: object
      nullable: false
      properties:
        readiness_probe:
          $ref: '#/components/schemas/Probe'
        liveness_probe:
          $ref: '#/components/schemas/Probe'
    Instance:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        name:
          type: string
          example: instance 1
        cpu:
          type: object
          properties:
            requested_in_float:
              type: number
              description: unit is millicores (m). 1000m = 1 cpu
            consumed_in_number:
              type: number
              description: unit is millicores (m). 1000m = 1 cpu
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
        memory:
          type: object
          properties:
            requested_in_mb:
              type: integer
              description: unit is MB. 1024 MB = 1GB.
            consumed_in_mb:
              type: integer
              description: unit is MB. 1024 MB = 1GB.
            consumed_in_percent:
              type: number
            warning_threshold_in_percent:
              type: number
            alert_threshold_in_percent:
              type: number
            status:
              $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    InstanceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
    InviteMember:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - email
            - role
            - invitation_link
            - invitation_status
            - inviter
          properties:
            email:
              type: string
              format: email
            role:
              $ref: '#/components/schemas/InviteMemberRoleEnum'
            invitation_link:
              type: string
              format: uri
            invitation_status:
              $ref: '#/components/schemas/InviteStatusEnum'
            organization_name:
              type: string
            inviter:
              type: string
            logo_url:
              type: string
              format: uri
            role_id:
              type: string
              format: uuid
            role_name:
              type: string
    InviteMemberRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
        role:
          $ref: '#/components/schemas/InviteMemberRoleEnum'
        role_id:
          type: string
          format: uuid
          description: the target role to attribute to the new member
    InviteMemberResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/InviteMember'
    InviteMemberRoleEnum:
      type: string
      description: deprecated
      enum:
        - ADMIN
        - DEVELOPER
        - OWNER
        - VIEWER
    InviteStatusEnum:
      type: string
      enum:
        - EXPIRED
        - PENDING
    Invoice:
      allOf:
        - $ref: '#/components/schemas/Cost'
        - type: object
          required:
            - id
            - created_at
            - status
            - total_in_cents
            - total
            - currency_code
          properties:
            id:
              type: string
              format: uuid
            created_at:
              type: string
              format: date-time
            status:
              $ref: '#/components/schemas/InvoiceStatusEnum'
    InvoiceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    InvoiceStatusEnum:
      type: string
      enum:
        - NOT_PAID
        - PAID
        - PAYMENT_DUE
        - PENDING
        - POSTED
        - UNKNOWN
        - VOIDED
    DeploymentStageRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the deployment stage
        description:
          type: string
          nullable: true
          description: free test describing this stage
    DeploymentStageResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - environment
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
            deployment_order:
              type: integer
              description: Position of the deployment stage within the environment
              example: 1
            services:
              $ref: '#/components/schemas/DeploymentStageServiceResponseList'
    DeploymentStageResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentStageResponse'
    DeploymentStageServiceResponseList:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentStageServiceResponse'
    DeploymentStageServiceResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            service_id:
              type: string
              format: uuid
              description: id of the service attached to the stage
            service_type:
              type: string
              description: 'type of the service (i.e APPLICATION, JOB, DATABASE, ...)'
    DeploymentStageWithServicesStatuses:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        databases:
          type: array
          items:
            $ref: '#/components/schemas/Status'
        stage:
          $ref: '#/components/schemas/Stage'
    JobRequest:
      allOf:
        - type: object
          required:
            - name
            - healthchecks
          properties:
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              default: 500
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              default: 512
              example: 1024
            max_nb_restart:
              type: integer
              minimum: 0
              default: 0
              description: |
                Maximum number of restart allowed before the job is considered as failed
                0 means that no restart/crash of the job is allowed
            max_duration_seconds:
              type: integer
              minimum: 0
              description: |
                Maximum number of seconds allowed for the job to run before killing it and mark it as failed
            auto_preview:
              type: boolean
              description: |
                Indicates if the 'environment preview option' is enabled for this container.  
                If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
            port:
              type: integer
              nullable: true
              minimum: 1
              description: Port where to run readiness and liveliness probes checks. The port will not be exposed externally
              default: null
            source:
              type: object
              properties:
                image:
                  type: object
                  nullable: true
                  properties:
                    image_name:
                      type: string
                      description: |
                        The image name pattern differs according to chosen container registry provider:  
                        * `ECR`: `repository`
                        * `SCALEWAY_CR`: `namespace/image`
                        * `DOCKER_HUB`: `image` or `repository/image`
                        * `PUBLIC_ECR`: `registry_alias/repository`
                    tag:
                      type: string
                      description: tag of the image container
                    registry_id:
                      type: string
                      description: tag of the image container
                docker:
                  type: object
                  nullable: true
                  properties:
                    dockerfile_path:
                      type: string
                      description: The path of the associated Dockerfile. Only if you are using build_mode = DOCKER
                      nullable: true
                    git_repository:
                      $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
            healthchecks:
              $ref: '#/components/schemas/Healthcheck'
            schedule:
              type: object
              description: |
                If you want to define a Cron job, only the `cronjob` property must be filled  
                A Lifecycle job should contain at least one property `on_XXX` among the 3 properties: `on_start`, `on_stop`, `on_delete`
              properties:
                on_start:
                  type: object
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                on_stop:
                  type: object
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                on_delete:
                  type: object
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                cronjob:
                  type: object
                  required:
                    - scheduled_at
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                    scheduled_at:
                      type: string
                      format: cron
                      description: |
                        Can only be set if the event is CRON.  
                        Represent the cron format for the job schedule without seconds.  
                        For example: `* * * * *` represent the cron to launch the job every minute.  
                        See https://crontab.guru/ to WISIWIG interface.  
                        Timezone is UTC
            auto_deploy:
              type: boolean
              nullable: true
              description: |
                Specify if the job will be automatically updated after receiving a new image tag or a new commit according to the source type. 
                The new image tag shall be communicated via the "Auto Deploy job" endpoint https://api-doc.qovery.com/#tag/Jobs/operation/autoDeployJobEnvironments
    JobResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - environment
            - name
            - tag
            - auto_preview
            - cpu
            - memory
            - min_running_instances
            - max_running_instances
            - maximum_cpu
            - maximum_memory
            - healthchecks
            - source
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            maximum_cpu:
              type: integer
              description: Maximum cpu that can be allocated to the job based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
              example: 16000
            maximum_memory:
              type: integer
              description: Maximum memory that can be allocated to the job based on organization cluster configuration. unit is MB. 1024 MB = 1GB
              example: 16384
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
            cpu:
              type: integer
              description: unit is millicores (m). 1000m = 1 cpu
              example: 1250
            memory:
              type: integer
              description: unit is MB. 1024 MB = 1GB
              example: 1024
            max_nb_restart:
              type: integer
              minimum: 0
              description: |
                Maximum number of restart allowed before the job is considered as failed
                0 means that no restart/crash of the job is allowed
            max_duration_seconds:
              type: integer
              minimum: 0
              description: |
                Maximum number of seconds allowed for the job to run before killing it and mark it as failed
            auto_preview:
              type: boolean
              description: |
                Indicates if the 'environment preview option' is enabled for this container.  
                If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
            port:
              type: integer
              nullable: true
              minimum: 1
              description: Port where to run readiness and liveliness probes checks. The port will not be exposed externally
              default: null
            source:
              nullable: false
              oneOf:
                - type: object
                  properties:
                    image:
                      $ref: '#/components/schemas/ContainerSource'
                - type: object
                  properties:
                    docker:
                      type: object
                      properties:
                        dockerfile_path:
                          type: string
                          description: The path of the associated Dockerfile. Only if you are using build_mode = DOCKER
                          nullable: true
                        git_repository:
                          $ref: '#/components/schemas/ApplicationGitRepository'
            healthchecks:
              $ref: '#/components/schemas/Healthcheck'
            schedule:
              type: object
              description: |
                If you want to define a Cron job, only the `cronjob` property must be filled  
                A Lifecycle job should contain at least one property `on_XXX` among the 3 properties: `on_start`, `on_stop`, `on_delete`
              properties:
                on_start:
                  type: object
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                on_stop:
                  type: object
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                on_delete:
                  type: object
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                cronjob:
                  type: object
                  required:
                    - scheduled_at
                  properties:
                    arguments:
                      type: array
                      items:
                        type: string
                    entrypoint:
                      type: string
                      description: optional entrypoint when launching container
                    scheduled_at:
                      type: string
                      format: cron
                      description: |
                        Can only be set if the event is CRON.  
                        Represent the cron format for the job schedule without seconds.  
                        For example: `* * * * *` represent the cron to launch the job every minute.  
                        See https://crontab.guru/ to WISIWIG interface.  
                        Timezone is UT
            auto_deploy:
              type: boolean
              description: |
                Specify if the job will be automatically updated after receiving a new image tag or a new commit according to the source type. 
                The new image tag shall be communicated via the "Auto Deploy job" endpoint https://api-doc.qovery.com/#tag/Jobs/operation/autoDeployJobEnvironments
    JobResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/JobResponse'
    JobAdvancedSettings:
      type: object
      properties:
        build.timeout_max_sec:
          type: integer
          description: define the max timeout for the build
          default: 1800
        build.cpu_max_in_milli:
          type: integer
          description: define the max cpu resources (in milli)
          default: 4000
        build.ram_max_in_gib:
          type: integer
          description: define the max ram resources (in gib)
          default: 8
        deployment.termination_grace_period_seconds:
          type: integer
          description: define how long in seconds an application is supposed to be stopped gracefully
          default: 60
        deployment.affinity.node.required:
          type: object
          additionalProperties:
            type: string
          description: Set pod placement on specific Kubernetes nodes labels
        job.delete_ttl_seconds_after_finished:
          type: integer
          nullable: true
          default: null
        cronjob.concurrency_policy:
          type: string
          default: Forbid
        cronjob.failed_jobs_history_limit:
          type: integer
          default: 1
        cronjob.success_jobs_history_limit:
          type: integer
          default: 1
        security.service_account_name:
          type: string
          default: ''
          description: |
            Allows you to set an existing Kubernetes service account name
        security.read_only_root_filesystem:
          type: boolean
          default: false
          description: |
            Mounts the container's root filesystem as read-only
    JobDeployRequest:
      type: object
      properties:
        image_tag:
          type: string
          description: |
            Image tag to deploy.  
            Cannot be set if `git_commit_id` is defined
        git_commit_id:
          type: string
          description: |
            Commit to deploy
            Cannot be set if `image_tag` is defined
    JobDeploymentRestrictionRequest:
      type: object
      required:
        - mode
        - type
        - value
      properties:
        mode:
          $ref: '#/components/schemas/DeploymentRestrictionModeEnum'
        type:
          $ref: '#/components/schemas/DeploymentRestrictionTypeEnum'
        value:
          type: string
          description: 'For `PATH` restrictions, the value must not start with `/`'
          example: job1/src/
    JobDeploymentRestrictionResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/JobDeploymentRestrictionRequest'
    JobDeploymentRestrictionResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/JobDeploymentRestrictionResponse'
    JobScheduleEvent:
      type: string
      enum:
        - ON_START
        - ON_STOP
        - ON_DELETE
        - CRON
      description: |
        On which event the job is going to run.  
        ON_START means when a deployment is requested for the environment  
        ON_STOP means when a stop of the environment is requested  
        ON_DELETE means when an environment delete is requested  
        CRON means at a scheduled interval  
    JobForceEvent:
      type: string
      enum:
        - START
        - STOP
        - DELETE
        - CRON
    DeploymentHistoryJobResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
              description: name of the job
            status:
              $ref: '#/components/schemas/StateEnum'
            image_name:
              type: string
            tag:
              type: string
            commit:
              $ref: '#/components/schemas/Commit'
            schedule:
              type: object
              properties:
                event:
                  $ref: '#/components/schemas/JobScheduleEvent'
                schedule_at:
                  type: string
                  format: cron
                  nullable: true
                  description: |
                    Can only be set if the event is CRON.
                    Represent the cron format for the job schedule without seconds.
                    For example: `* * * * *` represent the cron to launch the job every minute.
                    See https://crontab.guru/ to WISIWIG interface.
                    Timezone is UTC
            arguments:
              type: array
              items:
                type: string
            entrypoint:
              type: string
    HelmRequest:
      allOf:
        - type: object
          required:
            - name
            - healthchecks
          properties:
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
            timeout_sec:
              type: integer
              minimum: 0
              default: 600
              description: |
                Maximum number of seconds allowed for helm to run before killing it and mark it as failed
            auto_preview:
              type: boolean
              nullable: true
              description: |
                Indicates if the 'environment preview option' is enabled.  
                If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called or when a new commit is updated.
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
            auto_deploy:
              type: boolean
              description: |
                Specify if the helm will be automatically updated after receiving a new image tag or a new commit according to the source type. 
            source:
              type: object
              properties:
                git:
                  type: object
                  nullable: true
                  properties:
                    git_repository:
                      $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
                repository:
                  type: object
                  nullable: true
                  properties:
                    repository:
                      type: string
                      format: UUID
                      description: The id of the helm repository
                      nullable: true
                    chart_name:
                      type: string
                      description: The name of the chart in the repository
                    chart_version:
                      type: string
                      description: The version of the chart to use
            arguments:
              type: array
              description: The extra arguments to pass to helm
              items:
                type: string
            allow_cluster_wide_resources:
              type: boolean
              default: false
              description: |
                If we should allow the chart to deploy object outside his specified namespace.
                Setting this flag to true, requires special rights
            values_override:
              type: object
              description: |
                Specify helm values you want to set or override
              properties:
                set:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                set_string:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                set_json:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                file:
                  type: object
                  nullable: true
                  properties:
                    raw:
                      type: object
                      nullable: true
                      properties:
                        values:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The name of the value file
                              content:
                                type: string
                                description: The content of the value file
                    git:
                      type: object
                      nullable: true
                      properties:
                        git_repository:
                          $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
                        paths:
                          type: array
                          description: List of path inside your git repository to locate values file. Must start by a /
                          items:
                            type: string
    HelmResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - environment
            - name
            - tag
            - auto_preview
            - auto_deploy
            - source
          properties:
            environment:
              $ref: '#/components/schemas/ReferenceObject'
            name:
              type: string
              description: name is case insensitive
            description:
              type: string
            auto_preview:
              type: boolean
              description: |
                Indicates if the 'environment preview option' is enabled.  
                If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called.  
                If not specified, it takes the value of the `auto_preview` property from the associated environment.
            auto_deploy:
              type: boolean
              description: |
                Specify if the service will be automatically updated after receiving a new image tag or a new commit according to the source type. 
            source:
              type: object
              properties:
                git:
                  type: object
                  nullable: true
                  properties:
                    git_repository:
                      $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
                repository:
                  type: object
                  nullable: true
                  properties:
                    repository:
                      type: string
                      format: UUID
                      description: The id of the helm repository
                      nullable: true
                    chart_name:
                      type: string
                      description: The name of the chart in the repository
                    chart_version:
                      type: string
                      description: The version of the chart to use
            arguments:
              type: array
              description: The extra arguments to pass to helm
              items:
                type: string
            allow_cluster_wide_resources:
              type: boolean
              default: false
              description: |
                If we should allow the chart to deploy object outside his specified namespace.
                Setting this flag to true, requires special rights
            values_override:
              type: object
              description: |
                Specify helm values you want to set or override
              properties:
                set:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                set_string:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                set_json:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                file:
                  type: object
                  nullable: true
                  properties:
                    raw:
                      type: object
                      nullable: true
                      properties:
                        values:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The name of the value file
                              content:
                                type: string
                                description: The content of the value file
                    git:
                      type: object
                      nullable: true
                      properties:
                        git_repository:
                          $ref: '#/components/schemas/ApplicationGitRepositoryRequest'
                        paths:
                          type: array
                          description: List of path inside your git repository to locate values file. Must start by a /
                          items:
                            type: string
    HelmResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/HelmResponse'
    HelmAdvancedSettings:
      type: object
    HelmDeploymentRestrictionRequest:
      type: object
      required:
        - mode
        - type
        - value
      properties:
        mode:
          $ref: '#/components/schemas/DeploymentRestrictionModeEnum'
        type:
          $ref: '#/components/schemas/DeploymentRestrictionTypeEnum'
        value:
          type: string
          description: 'For `PATH` restrictions, the value must not start with `/`'
          example: helm1/src/
    HelmDeploymentRestrictionResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/HelmDeploymentRestrictionRequest'
    HelmDeploymentRestrictionResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/HelmDeploymentRestrictionResponse'
    HelmForceEvent:
      type: string
      enum:
        - DIFF
    Key:
      type: object
      required:
        - key
      properties:
        key:
          type: string
    KubernetesEnum:
      type: string
      enum:
        - K3S
        - MANAGED
      default: MANAGED
    Link:
      type: object
      properties:
        url:
          type: string
        internal_port:
          type: integer
          description: The port from which the service is reachable from within the cluster
        external_port:
          type: integer
          description: 'The port from which the service is reachable from externally (i.e: 443 for HTTPS)'
        is_qovery_domain:
          type: boolean
          description: 'True if the domain is managed by Qovery, false if it belongs to the user'
        is_default:
          type: boolean
          description: |
            Indicate if the link is using the root of the domain and not one derivated from port
            i.e:
            p8080.zxxxx.jvm.worl      => is_default = false, is_qovery = true
            zxxxx.jvm.world           => is_default = true, is_qovery = true
            p8080-my-super-domain.com => is_default = false, is_qovery = false
            my-super-domain.com       => is_default = true, is_qovery = false
    LinkResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    LinkedServiceTypeEnum:
      type: string
      description: 'type of the service (application, database, job, gateway...)'
      enum:
        - APPLICATION
        - CONTAINER
        - DATABASE
        - JOB
    Log:
      type: object
      required:
        - id
        - created_at
        - message
      properties:
        id:
          type: string
          format: uuid
          example: 4aa76065-68b3-41ef-aa1d-46be67012bef
        created_at:
          type: string
          format: date-time
          example: '2022-04-19T15:36:12.024Z'
        message:
          type: string
        pod_name:
          type: string
          example: app-z4aa76065-57d84cbbdb-xcg8v
        version:
          type: string
          example: 2bfd61fe45946c74f318050b26210be486c43a39
    LogPaginatedResponseList:
      allOf:
        - $ref: '#/components/schemas/PaginationData'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Log'
    LogResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Log'
    ManagedDatabaseTypeResponse:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: MYSQL
    ManagedDatabaseTypeResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ManagedDatabaseTypeResponse'
    ManagedDatabaseInstanceTypeResponse:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: db.t3.medium
    ManagedDatabaseInstanceTypeResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ManagedDatabaseInstanceTypeResponse'
    Member:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - email
          properties:
            name:
              type: string
            nickname:
              type: string
            email:
              type: string
              format: email
            profile_picture_url:
              type: string
              format: uri
            last_activity_at:
              type: string
              format: date-time
              description: last time the user was connected
            role:
              $ref: '#/components/schemas/InviteMemberRoleEnum'
            role_name:
              type: string
              description: the role linked to the user
            role_id:
              type: string
              format: uuid
    MemberResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    MemberRoleUpdateRequest:
      type: object
      required:
        - user_id
        - role_id
      properties:
        user_id:
          type: string
          description: specify the git provider user id
        role_id:
          type: string
          format: uuid
    MetricCPU:
      type: object
      required:
        - instance_name
        - data
      properties:
        instance_name:
          type: string
          example: instance 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricCPUDatapoint'
    MetricCPUDatapoint:
      type: object
      required:
        - created_at
        - requested_in_float
        - consumed_in_number
        - consumed_in_percent
      properties:
        created_at:
          type: string
          format: date-time
        requested_in_number:
          type: number
          description: unit is millicores (m). 1000m = 1 cpu
        consumed_in_number:
          type: number
          description: unit is millicores (m). 1000m = 1 cpu
        consumed_in_percent:
          type: number
    MetricCPUDatapointResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricCPUDatapoint'
    MetricCPUResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricCPU'
    MetricGeneric:
      type: object
      required:
        - instance_name
        - data
      properties:
        instance_name:
          type: string
          example: instance 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricGenericDatapoint'
    MetricGenericDatapoint:
      type: object
      required:
        - created_at
        - value
      properties:
        created_at:
          type: string
          readOnly: true
          format: date-time
        value:
          type: number
    MetricGenericResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricGeneric'
    MetricMemory:
      type: object
      required:
        - instance_name
        - data
      properties:
        instance_name:
          type: string
          example: instance 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricMemoryDatapoint'
    MetricMemoryDatapoint:
      type: object
      required:
        - created_at
        - requested_in_mb
        - consumed_in_mb
        - consumed_in_percent
      properties:
        created_at:
          type: string
          format: date-time
        requested_in_mb:
          type: integer
          description: unit is MB. 1024 MB = 1GB
        consumed_in_mb:
          type: integer
          description: unit is MB. 1024 MB = 1GB
        consumed_in_percent:
          type: number
    MetricMemoryDatapointResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricMemoryDatapoint'
    MetricMemoryResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricMemory'
    MetricStorage:
      type: object
      required:
        - instance_name
        - data
      properties:
        storage_id:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricStorageDatapoint'
    MetricStorageDatapoint:
      type: object
      required:
        - created_at
        - requested_in_mb
        - consumed_in_mb
        - consumed_in_percent
      properties:
        created_at:
          type: string
          format: date-time
        requested_in_gb:
          type: integer
          description: Unit is in GB.
        consumed_in_gb:
          type: number
          description: Unit is in GB.
        consumed_in_percent:
          type: number
    MetricStorageDatapointResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricStorageDatapoint'
    MetricStorageResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetricStorage'
    Name:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    Organization:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/OrganizationRequest'
        - type: object
          properties:
            owner:
              type: string
              format: uuid
              description: uuid of the user owning the organization
    OrganizationApiToken:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            role_name:
              type: string
            role_id:
              type: string
              format: uuid
    OrganizationApiTokenCreate:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            token:
              type: string
              description: the generated token to send in 'Authorization' header prefixed by 'Token '
            role_name:
              type: string
            role_id:
              type: string
              format: uuid
    OrganizationApiTokenCreateRequest:
      type: object
      required:
        - name
        - role_id
      properties:
        name:
          type: string
        description:
          type: string
        scope:
          $ref: '#/components/schemas/OrganizationApiTokenScope'
        role_id:
          type: string
          format: uuid
          nullable: true
          description: the roleId provided by the "List organization custom roles" endpoint.
    OrganizationApiTokenResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationApiToken'
    OrganizationApiTokenScope:
      type: string
      nullable: true
      description: deprecated
      enum:
        - ADMIN
    OrganizationAvailableRole:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    OrganizationAvailableRoleList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationAvailableRole'
    OrganizationChangePlanRequest:
      type: object
      properties:
        plan:
          type: string
    OrganizationContainerAutoDeployRequest:
      type: object
      properties:
        image_name:
          type: string
          description: the container image name to deploy
        tag:
          type: string
          description: the new tag to deploy
    OrganizationContainerPreviewRequest:
      type: object
      properties:
        image_name:
          type: string
          description: the container image name to trigger preview environment
        tag:
          type: string
          description: the tag to be used in the preview environment
    OrganizationCreditCodeRequest:
      type: object
      properties:
        code:
          type: string
    OrganizationCurrentCost:
      allOf:
        - $ref: '#/components/schemas/CurrentCost'
        - type: object
          properties:
            paid_usage:
              $ref: '#/components/schemas/PaidUsage'
    OrganizationCustomRoleCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
    OrganizationCustomRoleUpdateRequest:
      type: object
      required:
        - name
        - cluster_permissions
        - project_permissions
      properties:
        name:
          type: string
        description:
          type: string
        cluster_permissions:
          description: Should contain an entry for every existing cluster
          type: array
          items:
            type: object
            properties:
              cluster_id:
                type: string
                format: uuid
              permission:
                $ref: '#/components/schemas/OrganizationCustomRoleClusterPermission'
        project_permissions:
          description: Should contain an entry for every existing project
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
                format: uuid
              is_admin:
                type: boolean
                description: |
                  If `is_admin` is `true`, the user is:
                  - automatically `MANAGER` for each environment type
                  - allowed to manage project deployment rules
                  - able to delete the project  

                  Note that `permissions` can then be ignored for this project
                default: false
              permissions:
                description: |
                  Mandatory if `is_admin` is `false`  
                  Should contain an entry for every environment type:
                  - `DEVELOPMENT`
                  - `PREVIEW`
                  - `STAGING`
                  - `PRODUCTION`
                type: array
                items:
                  type: object
                  properties:
                    environment_type:
                      $ref: '#/components/schemas/EnvironmentModeEnum'
                    permission:
                      $ref: '#/components/schemas/OrganizationCustomRoleProjectPermission'
    OrganizationCustomRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        cluster_permissions:
          type: array
          items:
            type: object
            properties:
              cluster_id:
                type: string
                format: uuid
              cluster_name:
                type: string
              permission:
                $ref: '#/components/schemas/OrganizationCustomRoleClusterPermission'
        project_permissions:
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
                format: uuid
              project_name:
                type: string
              is_admin:
                type: boolean
                description: |
                  If `is_admin` is `true`, the user is:
                  - automatically `MANAGER` for each environment type
                  - allowed to manage project deployment rules
                  - able to delete the project  

                  Note that `permissions` can then be ignored for this project
                default: false
              permissions:
                type: array
                items:
                  type: object
                  properties:
                    environment_type:
                      $ref: '#/components/schemas/EnvironmentModeEnum'
                    permission:
                      $ref: '#/components/schemas/OrganizationCustomRoleProjectPermission'
    OrganizationCustomRoleList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationCustomRole'
    OrganizationCustomRoleProjectPermission:
      type: string
      description: |
        Indicates the permission for a target project and a given environment type, from the lowest to the highest:
        - `NO_ACCESS` user has no access
        - `VIEWER` user can access the environment (and applications / containers / databases / variables)
        - `DEPLOYER` user can deploy the environment (dependent on the required cluster permission `ENV_CREATOR`)
        - `MANAGER` user can create an environment (and applications / containers / databases / variables)
      enum:
        - NO_ACCESS
        - VIEWER
        - DEPLOYER
        - MANAGER
      example: NO_ACCESS
    OrganizationCustomRoleClusterPermission:
      type: string
      description: |
        Indicates the permission for a target cluster, from the lowest to the highest:
        - `VIEWER` user has only read access on target cluster
        - `ENV_CREATOR` user can deploy on the cluster
        - `ADMIN` user can modify the cluster settings
      enum:
        - VIEWER
        - ENV_CREATOR
        - ADMIN
      example: VIEWER
    OrganizationEditRequest:
      type: object
      required:
        - name
        - plan
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
        website_url:
          type: string
          nullable: true
        repository:
          type: string
          nullable: true
        logo_url:
          type: string
          nullable: true
        icon_url:
          type: string
          nullable: true
        admin_emails:
          type: array
          nullable: true
          items:
            type: string
    OrganizationGithubAppConnectRequest:
      type: object
      required:
        - installation_id
        - code
      properties:
        installation_id:
          type: string
        code:
          type: string
    OrganizationRequest:
      type: object
      required:
        - name
        - plan
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
          nullable: true
        plan:
          $ref: '#/components/schemas/PlanEnum'
        website_url:
          type: string
          nullable: true
        repository:
          type: string
          nullable: true
        logo_url:
          type: string
          nullable: true
        icon_url:
          type: string
          nullable: true
        admin_emails:
          type: array
          nullable: true
          items:
            type: string
    OrganizationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    OrganizationEventResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        event_type:
          $ref: '#/components/schemas/OrganizationEventType'
        target_id:
          type: string
          format: uuid
          nullable: true
        target_name:
          type: string
        target_type:
          $ref: '#/components/schemas/OrganizationEventTargetType'
        sub_target_type:
          $ref: '#/components/schemas/OrganizationEventSubTargetType'
        change:
          type: string
        origin:
          $ref: '#/components/schemas/OrganizationEventOrigin'
        triggered_by:
          type: string
        project_id:
          type: string
          format: uuid
          nullable: true
        project_name:
          type: string
        environment_id:
          type: string
          format: uuid
          nullable: true
        environment_name:
          type: string
    OrganizationEventResponseList:
      type: object
      properties:
        links:
          type: object
          properties:
            previous:
              type: string
              format: uri
            next:
              type: string
              format: uri
        events:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationEventResponse'
    OrganizationEventTargetResponseList:
      type: object
      properties:
        targets:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
    OrganizationEventOrigin:
      type: string
      description: Origin of the organization event
      enum:
        - API
        - CLI
        - CONSOLE
        - GIT
        - QOVERY_INTERNAL
        - TERRAFORM_PROVIDER
      example: API
    OrganizationEventSubTargetType:
      type: string
      description: Type of the organization event
      nullable: true
      enum:
        - ADVANCED_SETTINGS
        - API_TOKEN
        - BILLING_INFO
        - CLOUD_PROVIDER_CREDENTIALS
        - CLUSTER_CREDENTIALS
        - CLUSTER_ROUTING_TABLE
        - CONFIG
        - CREDIT_CARD
        - CREDIT_CODE
        - CUSTOM_DOMAIN
        - CUSTOM_ROLE
        - DEPLOYMENT_RULE
        - DEPLOYMENT_STAGE
        - GITHUB_APP
        - GIT_REPOSITORY
        - INVITATION
        - MEMBER_ROLE
        - PLAN
        - SECRET
        - TERRAFORM
        - TRANSFER_OWNERSHIP
        - VARIABLE
      example: ADVANCED_SETTINGS
    OrganizationEventTargetType:
      type: string
      description: Type of the organization event
      enum:
        - APPLICATION
        - CLUSTER
        - CONTAINER
        - CONTAINER_REGISTRY
        - DATABASE
        - ENVIRONMENT
        - JOB
        - MEMBERS_AND_ROLES
        - ORGANIZATION
        - PROJECT
        - WEBHOOK
      example: APPLICATION
    OrganizationEventType:
      type: string
      description: Type of the organization event
      enum:
        - CREATE
        - UPDATE
        - DELETE
        - ACCEPT
        - EXPORT
        - TRIGGER_DEPLOY
        - TRIGGER_REDEPLOY
        - TRIGGER_STOP
        - TRIGGER_CANCEL
        - TRIGGER_RESTART
        - TRIGGER_DELETE
      example: CREATE
    SecretOverride:
      type: object
      required:
        - id
        - key
        - scope
        - mount_path
        - variable_type
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        mount_path:
          type: string
        scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        variable_type:
          $ref: '#/components/schemas/APIVariableTypeEnum'
    OrganizationWebhookCreateRequest:
      type: object
      required:
        - kind
        - target_url
        - events
      properties:
        kind:
          $ref: '#/components/schemas/OrganizationWebhookKindEnum'
        target_url:
          type: string
          description: |
            Set the public HTTP or HTTPS endpoint that will receive the specified events.
            The target URL must starts with `http://` or `https://`
        target_secret:
          type: string
          description: |
            Make sure you receive a payload to sign the Qovery request with your secret.
            Qovery will add a HTTP header `Qovery-Signature: <Your Secret>` to every webhook requests sent to your target URL.
        description:
          type: string
        enabled:
          type: boolean
          description: Turn on or off your endpoint.
        events:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationWebhookEventEnum'
        project_names_filter:
          type: array
          description: |
            Specify the project names you want to filter to. 
            This webhook will be triggered only if the event is coming from the specified Project IDs.
            Notes: 1. Wildcard is accepted E.g. `product*`. 2. Name is case insensitive.
          items:
            type: string
        environment_types_filter:
          type: array
          description: |
            Specify the environment modes you want to filter to.
            This webhook will be triggered only if the event is coming from an environment with the specified mode.
          items:
            $ref: '#/components/schemas/EnvironmentModeEnum'
    OrganizationWebhookCreateResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            kind:
              $ref: '#/components/schemas/OrganizationWebhookKindEnum'
            target_url:
              type: string
              description: |
                Set the public HTTP or HTTPS endpoint that will receive the specified events.
                The target URL must starts with `http://` or `https://`
            target_secret_set:
              type: boolean
            description:
              type: string
            enabled:
              type: boolean
              description: Turn on or off your endpoint.
            events:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationWebhookEventEnum'
            project_names_filter:
              type: array
              description: |
                Specify the project names you want to filter to. 
                This webhook will be triggered only if the event is coming from the specified Project IDs.
                Notes: 1. Wildcard is accepted E.g. `product*`. 2. Name is case insensitive.
              items:
                type: string
            environment_types_filter:
              type: array
              description: |
                Specify the environment modes you want to filter to.
                This webhook will be triggered only if the event is coming from an environment with the specified mode.
              items:
                $ref: '#/components/schemas/EnvironmentModeEnum'
    OrganizationWebhookEventEnum:
      type: string
      description: |
        Events to subscribe to and send to the `target_url`.
        - `DEPLOYMENT_STARTED` send an event when a deployment is started and going to be executed
        - `DEPLOYMENT_CANCELLED` send an event when a deployment is cancelled
        - `DEPLOYMENT_FAILURE` send an event when a deployment failed
        - `DEPLOYMENT_SUCCESSFUL` send an event when a deployment is successful
      enum:
        - DEPLOYMENT_STARTED
        - DEPLOYMENT_CANCELLED
        - DEPLOYMENT_FAILURE
        - DEPLOYMENT_SUCCESSFUL
    OrganizationWebhookKindEnum:
      type: string
      description: Define the type of the webhook. `SLACK` is a special webhook type to push notifications directly to slack. The `target_url` must be a Slack compatible endpoint.
      enum:
        - STANDARD
        - SLACK
      example: STANDARD
    OrganizationWebhookResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            kind:
              $ref: '#/components/schemas/OrganizationWebhookKindEnum'
            target_url:
              type: string
              description: |
                Set the public HTTP or HTTPS endpoint that will receive the specified events.
                The target URL must starts with `http://` or `https://`
            target_secret_set:
              type: boolean
            description:
              type: string
            enabled:
              type: boolean
              description: Turn on or off your endpoint.
            events:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationWebhookEventEnum'
            project_names_filter:
              type: array
              description: |
                Specify the project names you want to filter to. 
                This webhook will be triggered only if the event is coming from the specified Project IDs.
                Notes: 1. Wildcard is accepted E.g. `product*`. 2. Name is case insensitive.
              items:
                type: string
            environment_types_filter:
              type: array
              description: |
                Specify the environment modes you want to filter to.
                This webhook will be triggered only if the event is coming from an environment with the specified mode.
              items:
                $ref: '#/components/schemas/EnvironmentModeEnum'
    OrganizationWebhookResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationWebhookResponse'
    PaginationData:
      type: object
      required:
        - page
        - page_size
      properties:
        page:
          type: number
          example: 1
        page_size:
          type: number
          example: 20
    PaidUsage:
      type: object
      properties:
        max_deployments_per_month:
          type: integer
        consumed_deployments:
          type: integer
        monthly_plan_cost:
          type: number
        monthly_plan_cost_in_cents:
          type: integer
        remaining_deployments:
          type: integer
        deployments_exceeded:
          type: boolean
        renewal_at:
          type: string
          readOnly: true
          nullable: true
          format: date-time
    PlanEnum:
      type: string
      description: BUSINESS & PROFESSIONAL are deprecated
      enum:
        - FREE
        - TEAM
        - TEAM_YEARLY
        - ENTERPRISE
        - ENTERPRISE_YEARLY
        - PROFESSIONAL
        - BUSINESS
    PortProtocolEnum:
      type: string
      default: HTTP
      enum:
        - HTTP
        - GRPC
        - TCP
        - UDP
    Probe:
      type: object
      nullable: true
      properties:
        type:
          type: object
          properties:
            tcp:
              type: object
              nullable: true
              properties:
                port:
                  type: integer
                host:
                  type: string
                  default: null
                  nullable: true
            http:
              type: object
              nullable: true
              properties:
                path:
                  type: string
                  default: /
                scheme:
                  type: string
                  default: HTTP
                port:
                  type: integer
            exec:
              type: object
              nullable: true
              properties:
                command:
                  type: array
                  items:
                    type: string
            grpc:
              type: object
              nullable: true
              properties:
                service:
                  type: string
                  nullable: true
                  default: null
                port:
                  type: integer
        initial_delay_seconds:
          type: integer
          default: 30
        period_seconds:
          type: integer
          default: 10
        timeout_seconds:
          type: integer
          default: 5
        success_threshold:
          type: integer
          default: 1
        failure_threshold:
          type: integer
          default: 9
    Project:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            description:
              type: string
            organization:
              $ref: '#/components/schemas/ReferenceObject'
    ProjectCurrentCost:
      allOf:
        - $ref: '#/components/schemas/GenericObjectCurrentCost'
        - type: object
          properties:
            environments:
              type: array
              items:
                $ref: '#/components/schemas/GenericObjectCurrentCost'
    ProjectCurrentCostResponseList:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCurrentCost'
    ProjectDeploymentRule:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/ProjectDeploymentRuleRequest'
        - type: object
          properties:
            priority_index:
              type: integer
              description: used to select the first deployment rule to match new created environments
              nullable: false
    ProjectDeploymentRuleRequest:
      type: object
      required:
        - name
        - mode
        - cluster_id
        - timezone
        - start_time
        - stop_time
        - weekdays
        - wildcard
      properties:
        name:
          type: string
          description: name is case insensitive
          example: project-rule
        description:
          type: string
          nullable: true
          example: description project rule
        mode:
          $ref: '#/components/schemas/EnvironmentModeEnum'
        cluster_id:
          type: string
          format: uuid
        auto_stop:
          type: boolean
          default: false
        timezone:
          type: string
          example: UTC
        start_time:
          type: string
          format: date-time
          example: 1970-01-01T08:00:00.000Z
        stop_time:
          type: string
          format: date-time
          example: 1970-01-01T19:00:00.000Z
        weekdays:
          type: array
          items:
            $ref: '#/components/schemas/WeekdayEnum'
        wildcard:
          type: string
          default: ''
          description: wildcard pattern composed of '?' and/or '*' used to target new created environments
    ProjectDeploymentRuleResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDeploymentRule'
    ProjectDeploymentRulesPriorityOrderRequest:
      type: object
      properties:
        project_deployment_rule_ids_in_order:
          type: array
          items:
            type: string
            format: uuid
            description: project deployment rule id
    ProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        description:
          type: string
    ProjectResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    ProjectStats:
      allOf:
        - $ref: '#/components/schemas/ReferenceObject'
        - $ref: '#/components/schemas/ServiceTotalNumber'
        - $ref: '#/components/schemas/EnvironmentTotalNumber'
    ProjectStatsResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectStats'
    RebootServicesRequest:
      type: object
      properties:
        applicationIds:
          type: array
          items:
            type: string
            format: uuid
        databaseIds:
          type: array
          items:
            type: string
            format: uuid
        containerIds:
          type: array
          items:
            type: string
            format: uuid
    ReferenceObject:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
    ReferenceObjectStatus:
      allOf:
        - $ref: '#/components/schemas/ReferenceObject'
        - $ref: '#/components/schemas/Status'
    ReferenceObjectStatusResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceObjectStatus'
    Referral:
      type: object
      properties:
        total_invited:
          type: integer
          example: 2
        invitation_link:
          type: string
          example: 'https://join.qovery.com/xDowkWEl'
    RemainingCredits:
      allOf:
        - $ref: '#/components/schemas/Cost'
        - type: object
    RewardClaim:
      type: object
      properties:
        type:
          type: string
          enum:
            - INVITATION
        code:
          type: string
          example: xDowkWEl
    ScalewayCredentialsRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        scaleway_access_key:
          type: string
        scaleway_secret_key:
          type: string
        scaleway_project_id:
          type: string
    Secret:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - key
            - scope
          properties:
            key:
              type: string
              description: key is case sensitive
            overridden_secret:
              $ref: '#/components/schemas/SecretOverride'
            aliased_secret:
              $ref: '#/components/schemas/SecretAlias'
            scope:
              $ref: '#/components/schemas/APIVariableScopeEnum'
            variable_type:
              $ref: '#/components/schemas/APIVariableTypeEnum'
            service_id:
              type: string
              format: uuid
            service_name:
              type: string
            service_type:
              $ref: '#/components/schemas/LinkedServiceTypeEnum'
            owned_by:
              type: string
              description: 'Entity that created/own the variable (i.e: Qovery, Doppler)'
    SecretEditRequest:
      type: object
      required:
        - key
      properties:
        value:
          type: string
        key:
          type: string
    SecretRequest:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          description: key is case sensitive
        value:
          type: string
          description: value of the secret. Clear value will never be returned
        mount_path:
          type: string
          nullable: true
          default: null
          description: should be set for file only. variable mount path make secret a file (where file should be mounted).
    SecretResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Secret'
    Service:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - id
          properties:
            type:
              $ref: '#/components/schemas/ServiceTypeEnum'
            name:
              type: string
              description: name of the service
            id:
              type: string
              description: 'uuid of the associated service (application, database, job, gateway...)'
              format: uuid
            deployed_commit_id:
              type: string
              description: Git commit ID corresponding to the deployed version of the application
            last_updated_by:
              type: string
              format: uuid
              description: uuid of the user that made the last update
            consumed_resources_in_percent:
              type: number
              description: global overview of resources consumption of the service
            service_typology:
              type: string
              example: container
              description: 'describes the typology of service (container, postgresl, redis...)'
            service_version:
              type: string
              description: for databases this field exposes the database version
              example: v12
            to_update:
              type: boolean
    ServiceDeploymentStatusEnum:
      type: string
      enum:
        - NEVER_DEPLOYED
        - OUT_OF_DATE
        - UP_TO_DATE
    ServiceResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    ServiceTotalNumber:
      type: object
      required:
        - number
      properties:
        service_total_number:
          type: number
    ServiceTypeEnum:
      type: string
      description: 'type of the service (application, database, job, gateway...)'
      enum:
        - APPLICATION
        - DATABASE
    SignUp:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/SignUpRequest'
    SignUpRequest:
      type: object
      required:
        - first_name
        - last_name
        - user_email
        - type_of_use
        - qovery_usage
      properties:
        first_name:
          type: string
        last_name:
          type: string
        user_email:
          type: string
        type_of_use:
          $ref: '#/components/schemas/TypeOfUseEnum'
        qovery_usage:
          type: string
        company_name:
          type: string
          nullable: true
        company_size:
          $ref: '#/components/schemas/CompanySizeEnum'
        user_role:
          type: string
          nullable: true
        qovery_usage_other:
          type: string
          nullable: true
        user_questions:
          type: string
          nullable: true
        current_step:
          type: string
          nullable: true
        dx_auth:
          type: boolean
          nullable: true
    StateEnum:
      type: string
      enum:
        - BUILDING
        - BUILD_ERROR
        - CANCELED
        - CANCELING
        - DELETED
        - DELETE_ERROR
        - DELETE_QUEUED
        - DELETING
        - DEPLOYED
        - DEPLOYING
        - DEPLOYMENT_ERROR
        - DEPLOYMENT_QUEUED
        - QUEUED
        - READY
        - STOPPED
        - STOPPING
        - STOP_ERROR
        - STOP_QUEUED
        - RESTART_QUEUED
        - RESTARTING
        - RESTARTED
        - RESTART_ERROR
    ClusterStateEnum:
      type: string
      enum:
        - BUILDING
        - BUILD_ERROR
        - CANCELED
        - CANCELING
        - DELETED
        - DELETE_ERROR
        - DELETE_QUEUED
        - DELETING
        - DEPLOYED
        - DEPLOYING
        - DEPLOYMENT_ERROR
        - DEPLOYMENT_QUEUED
        - QUEUED
        - READY
        - STOPPED
        - STOPPING
        - STOP_ERROR
        - STOP_QUEUED
        - RESTART_QUEUED
        - RESTARTING
        - RESTARTED
        - RESTART_ERROR
        - INVALID_CREDENTIALS
    Status:
      type: object
      required:
        - id
        - state
        - service_deployment_status
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/StateEnum'
        service_deployment_status:
          $ref: '#/components/schemas/ServiceDeploymentStatusEnum'
        last_deployment_date:
          type: string
          format: date-time
        is_part_last_deployment:
          type: boolean
        steps:
          $ref: '#/components/schemas/ServiceStepMetrics'
    Stage:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: stage name
        steps:
          $ref: '#/components/schemas/StageStepMetrics'
    StatusKindEnum:
      type: string
      enum:
        - CANCELED
        - CANCELING
        - DELETED
        - DELETE_ERROR
        - DELETE_IN_PROGRESS
        - DEPLOYED
        - DEPLOYMENT_ERROR
        - DEPLOYMENT_IN_PROGRESS
        - ERROR
        - PAUSED
        - PAUSE_ERROR
        - PAUSE_IN_PROGRESS
        - WAITING
    StorageDisk:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        storage_id:
          type: string
        requested_in_gb:
          type: integer
          description: Unit is in GB.
        consumed_in_gb:
          type: number
          description: Unit is in GB.
        consumed_in_percent:
          type: number
        warning_threshold_in_percent:
          type: number
        alert_threshold_in_percent:
          type: number
        status:
          $ref: '#/components/schemas/ThresholdMetricStatusEnum'
    StorageDiskResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StorageDisk'
    StorageTypeEnum:
      type: string
      enum:
        - FAST_SSD
    ThresholdMetricStatusEnum:
      type: string
      enum:
        - Alert
        - OK
        - Warning
    TransferOwnershipRequest:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: string
          format: uuid
    TypeOfUseEnum:
      type: string
      enum:
        - PERSONAL
        - SCHOOL
        - WORK
    UnexpectedError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: date-time
        updated_at:
          type: string
          readOnly: true
          format: date-time
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        profile_picture_url:
          type: string
          format: uri
    UserResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Value:
      type: object
      properties:
        value:
          type: string
    VariableImport:
      type: object
      required:
        - total_variables_to_import
        - successful_imported_variables
      properties:
        total_variables_to_import:
          type: number
        successful_imported_variables:
          type: array
          items:
            type: object
            required:
              - name
              - scope
              - is_secret
            properties:
              name:
                type: string
              value:
                type: string
                description: Optional if the variable is secret
              scope:
                $ref: '#/components/schemas/APIVariableScopeEnum'
              is_secret:
                type: boolean
    VariableImportRequest:
      type: object
      required:
        - vars
        - overwrite
      properties:
        overwrite:
          type: boolean
          default: false
        vars:
          type: array
          items:
            type: object
            required:
              - name
              - value
              - scope
              - is_secret
            properties:
              name:
                type: string
              value:
                type: string
              scope:
                $ref: '#/components/schemas/APIVariableScopeEnum'
              is_secret:
                type: boolean
    Version:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: '10.1'
    VersionResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Version'
    WeekdayEnum:
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
      example: MONDAY
    VariableAliasRequest:
      type: object
      required:
        - key
        - alias_scope
        - alias_parent_id
      properties:
        key:
          type: string
          description: the value to be used as Alias of the targeted environment variable.
        alias_scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        alias_parent_id:
          type: string
          format: uuid
          description: the id of the variable that is aliased.
    VariableOverrideRequest:
      type: object
      required:
        - value
        - override_scope
        - override_parent_id
      properties:
        value:
          type: string
          description: the value to be used as Override of the targeted environment variable.
        override_scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        override_parent_id:
          type: string
          format: uuid
          description: the id of the variable that is aliased.
    VariableRequest:
      type: object
      required:
        - key
        - value
        - is_secret
        - variable_scope
        - variable_parent_id
      properties:
        key:
          type: string
          description: the key of the environment variable
        value:
          type: string
          description: the value of the environment variable
        mount_path:
          type: string
          nullable: true
          description: the path where the file will be mounted (only if type =file)
        is_secret:
          type: boolean
          description: 'if true, the variable will be considered as a secret and will not be accessible after its creation. Only your applications will be able to access its value at build and run time.'
        variable_scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        variable_parent_id:
          type: string
          format: uuid
          description: 'based on the selected scope, it contains the ID of the service, environment or project where the variable is attached'
    VariableEditRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: the key of the environment variable
        value:
          type: string
          description: the value of the environment variable
    VariableResponse:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - scope
          properties:
            overridden_variable:
              $ref: '#/components/schemas/VariableOverride'
            aliased_variable:
              $ref: '#/components/schemas/VariableAlias'
            scope:
              $ref: '#/components/schemas/APIVariableScopeEnum'
            variable_type:
              $ref: '#/components/schemas/APIVariableTypeEnum'
            service_id:
              type: string
              format: uuid
              description: The id of the service referenced by this variable.
            service_name:
              type: string
              description: The name of the service referenced by this variable.
            service_type:
              $ref: '#/components/schemas/LinkedServiceTypeEnum'
            owned_by:
              type: string
              description: 'Entity that created/own the variable (i.e: Qovery, Doppler)'
    VariableResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/VariableResponse'
    VariableAlias:
      type: object
      required:
        - id
        - key
        - mount_path
        - scope
        - variable_type
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
          example: DATABASE_PSQL_NAME
        value:
          type: string
          nullable: true
        mount_path:
          type: string
        scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        variable_type:
          $ref: '#/components/schemas/APIVariableTypeEnum'
    VariableOverride:
      type: object
      required:
        - id
        - key
        - mount_path
        - scope
        - variable_type
      properties:
        id:
          type: string
          format: uuid
          description: The id of the overriden variable
        key:
          type: string
          description: The key of the overriden variable
        value:
          type: string
          nullable: true
          description: The value of the overriden variable
        mount_path:
          type: string
          description: The mounth path of the overriden variable (only if environment variable type is 'file')
        scope:
          $ref: '#/components/schemas/APIVariableScopeEnum'
        variable_type:
          $ref: '#/components/schemas/APIVariableTypeEnum'
    ClusterDeploymentStatusEnum:
      type: string
      enum:
        - NEVER_DEPLOYED
        - OUT_OF_DATE
        - UP_TO_DATE
    ServiceStepMetric:
      type: object
      properties:
        step_name:
          $ref: '#/components/schemas/ServiceStepMetricNameEnum'
        status:
          $ref: '#/components/schemas/StepMetricStatusEnum'
        duration_sec:
          description: The duration of the step in seconds.
          type: integer
    StageStepMetrics:
      type: object
      properties:
        total_duration_sec:
          description: The total duration in seconds of the stage deployment or null if the deployment is not completed
          type: integer
          nullable: true
        details:
          description: A list of metrics for deployment steps of the stage.
          type: array
          items:
            $ref: '#/components/schemas/StageStepMetric'
    ServiceStepMetrics:
      type: object
      properties:
        total_duration_sec:
          description: The total duration in seconds of the service deployment or null if the deployment is not completed.
          type: integer
          nullable: true
        details:
          description: A list of metrics for deployment steps of the service.
          type: array
          items:
            $ref: '#/components/schemas/ServiceStepMetric'
    StageStepMetric:
      type: object
      properties:
        step_name:
          $ref: '#/components/schemas/StageStepMetricNameEnum'
        status:
          $ref: '#/components/schemas/StepMetricStatusEnum'
        duration_sec:
          description: The duration of the step in seconds.
          type: integer
    StageStepMetricNameEnum:
      type: string
      enum:
        - QUEUEING
        - PROVISION_BUILDER
      description: |
        The name of the deployment step at the stage level:
        - QUEUEING: The step preceding the actual stage deployment step.
        - PROVISION_BUILDER: The step to provision builders before the actual build.
    StepMetricStatusEnum:
      type: string
      enum:
        - SUCCESS
        - ERROR
        - CANCEL
        - SKIP
      description: |
        The status of completion for the step:
        - SUCCESS: The step completed successfully.
        - ERROR: The step completed with an error.
        - CANCEL: The step was canceled.
        - SKIP: The step was skipped because it was not necessary.
    ServiceStepMetricNameEnum:
      type: string
      enum:
        - REGISTRY_CREATE_REPOSITORY
        - GIT_CLONE
        - BUILD_QUEUEING
        - BUILD
        - DEPLOYMENT_QUEUEING
        - DEPLOYMENT
        - ROUTER_DEPLOYMENT
        - MIRROR_IMAGE
      description: |
        The name of the deployment step at the service level:
        - REGISTRY_CREATE_REPOSITORY: The step to create the repository in the registry.
        - GIT_CLONE: The step to clone the source code repository. 
        - BUILD_QUEUEING: The queuing time preceding the actual building step.
        - BUILD: The step to build the source code.
        - DEPLOYMENT_QUEUEING: The queuing time preceding the actual deployment step.
        - DEPLOYMENT: The step to deploy the service. 
        - ROUTER_DEPLOYMENT: The step to deploy the router. 
        - MIRROR_IMAGE: The step to mirror the image to the private registry.
    OrganizationJobAutoDeployRequest:
      type: object
      properties:
        image_name:
          type: string
          description: the job image name to deploy
        tag:
          type: string
          description: the new tag to deploy
    RegistryMirroringModeEnum:
      type: string
      default: SERVICE
      enum:
        - CLUSTER
        - SERVICE
      description: |
        Mirroring mode when deploying a service from a container registry
        - CLUSTER: This is not available on Scaleway. Images within the mirroring registry are organized by "Qovery cluster", meaning that the application deployed on the same cluster are all mirrored on the same repository.
        - SERVICE: Images within the mirroring registry are organized by "Qovery service", each service has its own repository
  responses:
    '204':
      description: no content
    '400':
      description: Bad request
    '401':
      description: Access token is missing or invalid
    '403':
      description: Access forbidden
    '404':
      description: Resource not found
    '409':
      description: Conflict
    204-deletion:
      description: The resource was deleted successfully
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'JWT tokens should be used with OIDC account (human to machine). JWT tokens used by the Qovery console to communicate with the API have a TTL. Curl Example '' curl https://console.qovery.com/organization -H "Authorization: Bearer $qovery_token" '''
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Token API are generated by Qovery to manage machine to machine interaction and do not have a TTL. Curl Example '' curl https://console.qovery.com/organization -H "Authorization: Token $qovery_token" '''
security:
  - bearerAuth: []
  - ApiKeyAuth: []
