openapi: 3.0.0
info:
  version: 1.0.0
  title: Qovery API
servers:
  - url: 'https://api.qovery.com'
paths:
  /organization:
    get:
      summary: 'List user organizations'
      operationId: listOrganization
      tags:
        - organization
      responses:
        '200':
          description: 'List organizations'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: 'Create an organization'
      operationId: createOrganization
      tags:
        - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '200':
          description: 'Create organization'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Organization name is already taken
  /organization/{organizationId}:
    get:
      summary: 'Get organization by ID'
      operationId: getOrganization
      parameters:
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
      tags:
        - organization
      responses:
        '200':
          description: 'Get organization by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: 'Edit an organization'
      description: 'To edit an organization you must have the admin permission'
      operationId: editOrganization
      parameters:
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '200':
          description: 'Edit an organization'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Organization name is already taken
    delete:
      summary: 'Delete an organization'
      description: 'To delete an organization you must have the admin permission'
      operationId: deleteOrganization
      parameters:
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - organization
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /organization/{organizationId}/project:
    get:
      summary: 'List projects'
      operationId: listProject
      parameters:
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - project
      responses:
        '200':
          description: 'List projects'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: 'Create a project'
      operationId: createProject
      parameters:
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: 'Create project'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Project name within the organization is already taken
  /project/{projectId}:
    get:
      summary: 'Get project by ID'
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - project
      responses:
        '200':
          description: 'Get project by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: 'Edit a project'
      description: 'To edit a project you must have the admin permission'
      operationId: editProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: 'Edit a project'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Project name within the organization is already taken
    delete:
      summary: 'Delete a project'
      description: 'To delete a project you must have the admin permission'
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - project
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /project/{projectId}/environment:
    get:
      summary: 'List environments'
      operationId: listEnvironment
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - environment
      responses:
        '200':
          description: 'List environments'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: 'Create an environment'
      operationId: createEnvironment
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '200':
          description: 'Create environment'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Environment name within the project is already taken
  /environment/{environmentId}:
    get:
      summary: 'Get environment by ID'
      operationId: getEnvironment
      parameters:
        - name: environmentId
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - environment
      responses:
        '200':
          description: 'Get environment by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: 'Edit an environment'
      description: 'To edit an environment you must have the admin permission'
      operationId: editEnvironment
      parameters:
        - name: environmentId
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '200':
          description: 'Edit an environment'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Environment name within the project is already taken
    delete:
      summary: 'Delete an environment'
      description: 'To delete an environment you must have the admin permission'
      operationId: deleteEnvironment
      parameters:
        - name: environmentId
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - environment
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /environment/{environmentId}/application:
    get:
      summary: 'List applications'
      operationId: listApplication
      parameters:
        - name: environmentId
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - application
      responses:
        '200':
          description: 'List applications'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: 'Create an application'
      operationId: createApplication
      parameters:
        - name: environmentId
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '200':
          description: 'Create application'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Application name within the environment is already taken
  /application/{applicationId}:
    get:
      summary: 'Get application by ID'
      operationId: getApplication
      parameters:
        - name: applicationId
          in: path
          description: Application ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - application
      responses:
        '200':
          description: 'Get application by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: 'Edit an application'
      description: 'To edit an application you must have the admin permission'
      operationId: editApplication
      parameters:
        - name: applicationId
          in: path
          description: Application ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '200':
          description: 'Edit an application'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Application name within the environment is already taken
    delete:
      summary: 'Delete an application'
      description: 'To delete an application you must have the admin permission'
      operationId: deleteApplication
      parameters:
        - name: applicationId
          in: path
          description: Application ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - application
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /environment/{environmentId}/database:
    get:
      summary: 'List databases'
      operationId: listDatabase
      parameters:
        - name: environmentId
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - database
      responses:
        '200':
          description: 'List databases'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseList'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: 'Create a database'
      operationId: createDatabase
      parameters:
        - name: environmentId
          in: path
          description: Environment ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseRequest'
      responses:
        '200':
          description: 'Create database'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '409':
          description: Database name within the environment is already taken
  /database/{databaseId}:
    get:
      summary: 'Get database by ID'
      operationId: getDatabase
      parameters:
        - name: databaseId
          in: path
          description: Database ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - database
      responses:
        '200':
          description: 'Get database by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: 'Edit a database'
      description: 'To edit a database you must have the admin permission'
      operationId: editDatabase
      parameters:
        - name: databaseId
          in: path
          description: Database ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseRequest'
      responses:
        '200':
          description: 'Edit an application'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Database name within the environment is already taken
    delete:
      summary: 'Delete a database'
      description: 'To delete a database you must have the admin permission'
      operationId: deleteDatabase
      parameters:
        - name: databaseId
          in: path
          description: Database ID
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - database
      responses:
        '204':
          $ref: '#/components/responses/204-deletion'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BaseResponse:
      type: object
      required:
        - id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          readOnly: true
          format: date-time
    OrganizationRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
        website_url:
          type: string
          nullable: true
    OrganizationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
            website_url:
              type: string
              nullable: true
            logo_url:
              type: string
              format: uri
    OrganizationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResponse'
    ProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    ProjectResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectResponse'
    EnvironmentRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    EnvironmentResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    EnvironmentResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentResponse'
    ApplicationRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    ApplicationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    ApplicationResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationResponse'
    DatabaseRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: name is case insensitive
    DatabaseResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            updated_at:
              type: string
              nullable: true
              format: date-time
    DatabaseResponseList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseResponse'
    UnexpectedError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
  responses:
    204-deletion:
      description: The resource was deleted successfully
    401:
      description: Access token is missing or invalid
    403:
      description: Access forbidden
    404:
      description: Resource not found
    409:
      description: Conflict
security:
  - bearerAuth: [ ]
